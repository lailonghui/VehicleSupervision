

"""
驾驶员身份验证信息(各种证件信息，验证状态)


columns and relationships of "driver_identity"

"""
type driver_identity {
    """累计积分（六合一）"""
    accumulatived_points: numeric

    """年审日期（六合一）"""
    annual_review_date: timestamptz

    """创建时间"""
    created_at: timestamptz!

    """创建人"""
    created_by: String!

    """删除时间"""
    deleted_at: timestamptz

    """删除人"""
    deleted_by: String

    """驾驶员手持身份证照片,云储存系统返回的路径"""
    driver_holding_id_photo: String

    """驾驶证发证所在地的城市ID"""
    driver_license_city_id: String

    """驾驶证发证所在地的区域ID"""
    driver_license_district_id: String

    """驾驶证初次领证日期"""
    driver_license_issue_date: timestamptz

    """驾驶证发证机关"""
    driver_license_issuing_authority: String

    """驾驶员驾驶证,云储存系统返回的路径"""
    driver_license_pic: String

    """驾驶证发证所在地的省份ID"""
    driver_license_province_id: String

    """驾驶证状态字典"""
    driver_license_status: Int

    """驾驶员的正面照,云储存系统返回的路径"""
    driver_photo: String

    """驾驶员签名,云储存系统返回的路径"""
    driver_signature: String
    id: bigint!

    """身份证住址"""
    id_card_address: String

    """身份证背面照，云存储地址"""
    id_card_back_pic: String

    """身份证出生日期"""
    id_card_birthday: timestamptz

    """身份证有效截止日期"""
    id_card_end_date: timestamptz

    """身份证正面照，云存储地址"""
    id_card_front_pic: String

    """身份证民族"""
    id_card_nation: String

    """身份证号码"""
    id_card_num: String

    """身份证签发机关"""
    id_card_sign_government: String

    """身份证有效起始日期"""
    id_card_start_date: timestamptz

    """联合主键"""
    identity_id: String!

    """是否删除"""
    is_delete: Boolean

    """是否审核"""
    is_review: Boolean

    """劳动合同,云储存系统返回的完整劳动合同的图片路径"""
    labor_contract: _text

    """从业资格证有效期至"""
    occupational_expire_date: timestamptz

    """从业资格证发证机构"""
    occupational_issuing_authority: String

    """从业资格证号码"""
    occupational_number: String

    """准驾车型（六合一）,准驾车型字典"""
    quasi_driving_models: Int

    """换证日期（六合一）"""
    renewal_date: timestamptz

    """清分日期（六合一）"""
    sorting_date: timestamptz

    """修改时间"""
    updated_at: timestamptz

    """修改人"""
    updated_by: String

    """从业时间"""
    working_time: timestamptz
}

"""
aggregated selection of "driver_identity"
"""
type driver_identity_aggregate {
    aggregate: driver_identity_aggregate_fields
    nodes: [driver_identity!]!
}

"""
aggregate fields of "driver_identity"
"""
type driver_identity_aggregate_fields {
    avg: driver_identity_avg_fields
    count(columns: [driver_identity_select_column!], distinct: Boolean): Int
    max: driver_identity_max_fields
    min: driver_identity_min_fields
    stddev: driver_identity_stddev_fields
    stddev_pop: driver_identity_stddev_pop_fields
    stddev_samp: driver_identity_stddev_samp_fields
    sum: driver_identity_sum_fields
    var_pop: driver_identity_var_pop_fields
    var_samp: driver_identity_var_samp_fields
    variance: driver_identity_variance_fields
}

"""
order by aggregate values of table "driver_identity"
"""
input driver_identity_aggregate_order_by {
    avg: driver_identity_avg_order_by
    count: order_by
    max: driver_identity_max_order_by
    min: driver_identity_min_order_by
    stddev: driver_identity_stddev_order_by
    stddev_pop: driver_identity_stddev_pop_order_by
    stddev_samp: driver_identity_stddev_samp_order_by
    sum: driver_identity_sum_order_by
    var_pop: driver_identity_var_pop_order_by
    var_samp: driver_identity_var_samp_order_by
    variance: driver_identity_variance_order_by
}

"""
input type for inserting array relation for remote table "driver_identity"
"""
input driver_identity_arr_rel_insert_input {
    data: [driver_identity_insert_input!]!
    on_conflict: driver_identity_on_conflict
}

"""aggregate avg on columns"""
type driver_identity_avg_fields {
    accumulatived_points: Float
    driver_license_status: Float
    id: Float
    quasi_driving_models: Float
}

"""
order by avg() on columns of table "driver_identity"
"""
input driver_identity_avg_order_by {
    accumulatived_points: order_by
    driver_license_status: order_by
    id: order_by
    quasi_driving_models: order_by
}

"""
Boolean expression to filter rows from the table "driver_identity". All fields are combined with a logical 'AND'.
"""
input driver_identity_bool_exp {
    _and: [driver_identity_bool_exp]
    _not: driver_identity_bool_exp
    _or: [driver_identity_bool_exp]
    accumulatived_points: numeric_comparison_exp
    annual_review_date: timestamptz_comparison_exp
    created_at: timestamptz_comparison_exp
    created_by: String_comparison_exp
    deleted_at: timestamptz_comparison_exp
    deleted_by: String_comparison_exp
    driver_holding_id_photo: String_comparison_exp
    driver_license_city_id: String_comparison_exp
    driver_license_district_id: String_comparison_exp
    driver_license_issue_date: timestamptz_comparison_exp
    driver_license_issuing_authority: String_comparison_exp
    driver_license_pic: String_comparison_exp
    driver_license_province_id: String_comparison_exp
    driver_license_status: Int_comparison_exp
    driver_photo: String_comparison_exp
    driver_signature: String_comparison_exp
    id: bigint_comparison_exp
    id_card_address: String_comparison_exp
    id_card_back_pic: String_comparison_exp
    id_card_birthday: timestamptz_comparison_exp
    id_card_end_date: timestamptz_comparison_exp
    id_card_front_pic: String_comparison_exp
    id_card_nation: String_comparison_exp
    id_card_num: String_comparison_exp
    id_card_sign_government: String_comparison_exp
    id_card_start_date: timestamptz_comparison_exp
    identity_id: String_comparison_exp
    is_delete: Boolean_comparison_exp
    is_review: Boolean_comparison_exp
    labor_contract: _text_comparison_exp
    occupational_expire_date: timestamptz_comparison_exp
    occupational_issuing_authority: String_comparison_exp
    occupational_number: String_comparison_exp
    quasi_driving_models: Int_comparison_exp
    renewal_date: timestamptz_comparison_exp
    sorting_date: timestamptz_comparison_exp
    updated_at: timestamptz_comparison_exp
    updated_by: String_comparison_exp
    working_time: timestamptz_comparison_exp
}

"""
unique or primary key constraints on table "driver_identity"
"""
enum driver_identity_constraint {
    """unique or primary key constraint"""
    driver_identity_pkey
}

"""
input type for incrementing integer column in table "driver_identity"
"""
input driver_identity_inc_input {
    accumulatived_points: numeric
    driver_license_status: Int
    id: bigint
    quasi_driving_models: Int
}

"""
input type for inserting data into table "driver_identity"
"""
input driver_identity_insert_input {
    accumulatived_points: numeric
    annual_review_date: timestamptz
    created_at: timestamptz
    created_by: String
    deleted_at: timestamptz
    deleted_by: String
    driver_holding_id_photo: String
    driver_license_city_id: String
    driver_license_district_id: String
    driver_license_issue_date: timestamptz
    driver_license_issuing_authority: String
    driver_license_pic: String
    driver_license_province_id: String
    driver_license_status: Int
    driver_photo: String
    driver_signature: String
    id: bigint
    id_card_address: String
    id_card_back_pic: String
    id_card_birthday: timestamptz
    id_card_end_date: timestamptz
    id_card_front_pic: String
    id_card_nation: String
    id_card_num: String
    id_card_sign_government: String
    id_card_start_date: timestamptz
    identity_id: String
    is_delete: Boolean
    is_review: Boolean
    labor_contract: _text
    occupational_expire_date: timestamptz
    occupational_issuing_authority: String
    occupational_number: String
    quasi_driving_models: Int
    renewal_date: timestamptz
    sorting_date: timestamptz
    updated_at: timestamptz
    updated_by: String
    working_time: timestamptz
}

"""aggregate max on columns"""
type driver_identity_max_fields {
    accumulatived_points: numeric
    annual_review_date: timestamptz
    created_at: timestamptz
    created_by: String
    deleted_at: timestamptz
    deleted_by: String
    driver_holding_id_photo: String
    driver_license_city_id: String
    driver_license_district_id: String
    driver_license_issue_date: timestamptz
    driver_license_issuing_authority: String
    driver_license_pic: String
    driver_license_province_id: String
    driver_license_status: Int
    driver_photo: String
    driver_signature: String
    id: bigint
    id_card_address: String
    id_card_back_pic: String
    id_card_birthday: timestamptz
    id_card_end_date: timestamptz
    id_card_front_pic: String
    id_card_nation: String
    id_card_num: String
    id_card_sign_government: String
    id_card_start_date: timestamptz
    identity_id: String
    occupational_expire_date: timestamptz
    occupational_issuing_authority: String
    occupational_number: String
    quasi_driving_models: Int
    renewal_date: timestamptz
    sorting_date: timestamptz
    updated_at: timestamptz
    updated_by: String
    working_time: timestamptz
}

"""
order by max() on columns of table "driver_identity"
"""
input driver_identity_max_order_by {
    accumulatived_points: order_by
    annual_review_date: order_by
    created_at: order_by
    created_by: order_by
    deleted_at: order_by
    deleted_by: order_by
    driver_holding_id_photo: order_by
    driver_license_city_id: order_by
    driver_license_district_id: order_by
    driver_license_issue_date: order_by
    driver_license_issuing_authority: order_by
    driver_license_pic: order_by
    driver_license_province_id: order_by
    driver_license_status: order_by
    driver_photo: order_by
    driver_signature: order_by
    id: order_by
    id_card_address: order_by
    id_card_back_pic: order_by
    id_card_birthday: order_by
    id_card_end_date: order_by
    id_card_front_pic: order_by
    id_card_nation: order_by
    id_card_num: order_by
    id_card_sign_government: order_by
    id_card_start_date: order_by
    identity_id: order_by
    occupational_expire_date: order_by
    occupational_issuing_authority: order_by
    occupational_number: order_by
    quasi_driving_models: order_by
    renewal_date: order_by
    sorting_date: order_by
    updated_at: order_by
    updated_by: order_by
    working_time: order_by
}

"""aggregate min on columns"""
type driver_identity_min_fields {
    accumulatived_points: numeric
    annual_review_date: timestamptz
    created_at: timestamptz
    created_by: String
    deleted_at: timestamptz
    deleted_by: String
    driver_holding_id_photo: String
    driver_license_city_id: String
    driver_license_district_id: String
    driver_license_issue_date: timestamptz
    driver_license_issuing_authority: String
    driver_license_pic: String
    driver_license_province_id: String
    driver_license_status: Int
    driver_photo: String
    driver_signature: String
    id: bigint
    id_card_address: String
    id_card_back_pic: String
    id_card_birthday: timestamptz
    id_card_end_date: timestamptz
    id_card_front_pic: String
    id_card_nation: String
    id_card_num: String
    id_card_sign_government: String
    id_card_start_date: timestamptz
    identity_id: String
    occupational_expire_date: timestamptz
    occupational_issuing_authority: String
    occupational_number: String
    quasi_driving_models: Int
    renewal_date: timestamptz
    sorting_date: timestamptz
    updated_at: timestamptz
    updated_by: String
    working_time: timestamptz
}

"""
order by min() on columns of table "driver_identity"
"""
input driver_identity_min_order_by {
    accumulatived_points: order_by
    annual_review_date: order_by
    created_at: order_by
    created_by: order_by
    deleted_at: order_by
    deleted_by: order_by
    driver_holding_id_photo: order_by
    driver_license_city_id: order_by
    driver_license_district_id: order_by
    driver_license_issue_date: order_by
    driver_license_issuing_authority: order_by
    driver_license_pic: order_by
    driver_license_province_id: order_by
    driver_license_status: order_by
    driver_photo: order_by
    driver_signature: order_by
    id: order_by
    id_card_address: order_by
    id_card_back_pic: order_by
    id_card_birthday: order_by
    id_card_end_date: order_by
    id_card_front_pic: order_by
    id_card_nation: order_by
    id_card_num: order_by
    id_card_sign_government: order_by
    id_card_start_date: order_by
    identity_id: order_by
    occupational_expire_date: order_by
    occupational_issuing_authority: order_by
    occupational_number: order_by
    quasi_driving_models: order_by
    renewal_date: order_by
    sorting_date: order_by
    updated_at: order_by
    updated_by: order_by
    working_time: order_by
}

"""
response of any mutation on the table "driver_identity"
"""
type driver_identity_mutation_response {
    """number of affected rows by the mutation"""
    affected_rows: Int!

    """data of the affected rows by the mutation"""
    returning: [driver_identity!]!
}

"""
input type for inserting object relation for remote table "driver_identity"
"""
input driver_identity_obj_rel_insert_input {
    data: driver_identity_insert_input!
    on_conflict: driver_identity_on_conflict
}

"""
on conflict condition type for table "driver_identity"
"""
input driver_identity_on_conflict {
    constraint: driver_identity_constraint!
    update_columns: [driver_identity_update_column!]!
    where: driver_identity_bool_exp
}

"""
ordering options when selecting data from "driver_identity"
"""
input driver_identity_order_by {
    accumulatived_points: order_by
    annual_review_date: order_by
    created_at: order_by
    created_by: order_by
    deleted_at: order_by
    deleted_by: order_by
    driver_holding_id_photo: order_by
    driver_license_city_id: order_by
    driver_license_district_id: order_by
    driver_license_issue_date: order_by
    driver_license_issuing_authority: order_by
    driver_license_pic: order_by
    driver_license_province_id: order_by
    driver_license_status: order_by
    driver_photo: order_by
    driver_signature: order_by
    id: order_by
    id_card_address: order_by
    id_card_back_pic: order_by
    id_card_birthday: order_by
    id_card_end_date: order_by
    id_card_front_pic: order_by
    id_card_nation: order_by
    id_card_num: order_by
    id_card_sign_government: order_by
    id_card_start_date: order_by
    identity_id: order_by
    is_delete: order_by
    is_review: order_by
    labor_contract: order_by
    occupational_expire_date: order_by
    occupational_issuing_authority: order_by
    occupational_number: order_by
    quasi_driving_models: order_by
    renewal_date: order_by
    sorting_date: order_by
    updated_at: order_by
    updated_by: order_by
    working_time: order_by
}

"""
primary key columns input for table: "driver_identity"
"""
input driver_identity_pk_columns_input {
    id: bigint!

    """联合主键"""
    identity_id: String!
}

"""
select columns of table "driver_identity"
"""
enum driver_identity_select_column {
    """column name"""
    accumulatived_points

    """column name"""
    annual_review_date

    """column name"""
    created_at

    """column name"""
    created_by

    """column name"""
    deleted_at

    """column name"""
    deleted_by

    """column name"""
    driver_holding_id_photo

    """column name"""
    driver_license_city_id

    """column name"""
    driver_license_district_id

    """column name"""
    driver_license_issue_date

    """column name"""
    driver_license_issuing_authority

    """column name"""
    driver_license_pic

    """column name"""
    driver_license_province_id

    """column name"""
    driver_license_status

    """column name"""
    driver_photo

    """column name"""
    driver_signature

    """column name"""
    id

    """column name"""
    id_card_address

    """column name"""
    id_card_back_pic

    """column name"""
    id_card_birthday

    """column name"""
    id_card_end_date

    """column name"""
    id_card_front_pic

    """column name"""
    id_card_nation

    """column name"""
    id_card_num

    """column name"""
    id_card_sign_government

    """column name"""
    id_card_start_date

    """column name"""
    identity_id

    """column name"""
    is_delete

    """column name"""
    is_review

    """column name"""
    labor_contract

    """column name"""
    occupational_expire_date

    """column name"""
    occupational_issuing_authority

    """column name"""
    occupational_number

    """column name"""
    quasi_driving_models

    """column name"""
    renewal_date

    """column name"""
    sorting_date

    """column name"""
    updated_at

    """column name"""
    updated_by

    """column name"""
    working_time
}

"""
input type for updating data in table "driver_identity"
"""
input driver_identity_set_input {
    accumulatived_points: numeric
    annual_review_date: timestamptz
    created_at: timestamptz
    created_by: String
    deleted_at: timestamptz
    deleted_by: String
    driver_holding_id_photo: String
    driver_license_city_id: String
    driver_license_district_id: String
    driver_license_issue_date: timestamptz
    driver_license_issuing_authority: String
    driver_license_pic: String
    driver_license_province_id: String
    driver_license_status: Int
    driver_photo: String
    driver_signature: String
    id: bigint
    id_card_address: String
    id_card_back_pic: String
    id_card_birthday: timestamptz
    id_card_end_date: timestamptz
    id_card_front_pic: String
    id_card_nation: String
    id_card_num: String
    id_card_sign_government: String
    id_card_start_date: timestamptz
    identity_id: String
    is_delete: Boolean
    is_review: Boolean
    labor_contract: _text
    occupational_expire_date: timestamptz
    occupational_issuing_authority: String
    occupational_number: String
    quasi_driving_models: Int
    renewal_date: timestamptz
    sorting_date: timestamptz
    updated_at: timestamptz
    updated_by: String
    working_time: timestamptz
}

"""aggregate stddev on columns"""
type driver_identity_stddev_fields {
    accumulatived_points: Float
    driver_license_status: Float
    id: Float
    quasi_driving_models: Float
}

"""
order by stddev() on columns of table "driver_identity"
"""
input driver_identity_stddev_order_by {
    accumulatived_points: order_by
    driver_license_status: order_by
    id: order_by
    quasi_driving_models: order_by
}

"""aggregate stddev_pop on columns"""
type driver_identity_stddev_pop_fields {
    accumulatived_points: Float
    driver_license_status: Float
    id: Float
    quasi_driving_models: Float
}

"""
order by stddev_pop() on columns of table "driver_identity"
"""
input driver_identity_stddev_pop_order_by {
    accumulatived_points: order_by
    driver_license_status: order_by
    id: order_by
    quasi_driving_models: order_by
}

"""aggregate stddev_samp on columns"""
type driver_identity_stddev_samp_fields {
    accumulatived_points: Float
    driver_license_status: Float
    id: Float
    quasi_driving_models: Float
}

"""
order by stddev_samp() on columns of table "driver_identity"
"""
input driver_identity_stddev_samp_order_by {
    accumulatived_points: order_by
    driver_license_status: order_by
    id: order_by
    quasi_driving_models: order_by
}

"""aggregate sum on columns"""
type driver_identity_sum_fields {
    accumulatived_points: numeric
    driver_license_status: Int
    id: bigint
    quasi_driving_models: Int
}

"""
order by sum() on columns of table "driver_identity"
"""
input driver_identity_sum_order_by {
    accumulatived_points: order_by
    driver_license_status: order_by
    id: order_by
    quasi_driving_models: order_by
}

"""
update columns of table "driver_identity"
"""
enum driver_identity_update_column {
    """column name"""
    accumulatived_points

    """column name"""
    annual_review_date

    """column name"""
    created_at

    """column name"""
    created_by

    """column name"""
    deleted_at

    """column name"""
    deleted_by

    """column name"""
    driver_holding_id_photo

    """column name"""
    driver_license_city_id

    """column name"""
    driver_license_district_id

    """column name"""
    driver_license_issue_date

    """column name"""
    driver_license_issuing_authority

    """column name"""
    driver_license_pic

    """column name"""
    driver_license_province_id

    """column name"""
    driver_license_status

    """column name"""
    driver_photo

    """column name"""
    driver_signature

    """column name"""
    id

    """column name"""
    id_card_address

    """column name"""
    id_card_back_pic

    """column name"""
    id_card_birthday

    """column name"""
    id_card_end_date

    """column name"""
    id_card_front_pic

    """column name"""
    id_card_nation

    """column name"""
    id_card_num

    """column name"""
    id_card_sign_government

    """column name"""
    id_card_start_date

    """column name"""
    identity_id

    """column name"""
    is_delete

    """column name"""
    is_review

    """column name"""
    labor_contract

    """column name"""
    occupational_expire_date

    """column name"""
    occupational_issuing_authority

    """column name"""
    occupational_number

    """column name"""
    quasi_driving_models

    """column name"""
    renewal_date

    """column name"""
    sorting_date

    """column name"""
    updated_at

    """column name"""
    updated_by

    """column name"""
    working_time
}

"""aggregate var_pop on columns"""
type driver_identity_var_pop_fields {
    accumulatived_points: Float
    driver_license_status: Float
    id: Float
    quasi_driving_models: Float
}

"""
order by var_pop() on columns of table "driver_identity"
"""
input driver_identity_var_pop_order_by {
    accumulatived_points: order_by
    driver_license_status: order_by
    id: order_by
    quasi_driving_models: order_by
}

"""aggregate var_samp on columns"""
type driver_identity_var_samp_fields {
    accumulatived_points: Float
    driver_license_status: Float
    id: Float
    quasi_driving_models: Float
}

"""
order by var_samp() on columns of table "driver_identity"
"""
input driver_identity_var_samp_order_by {
    accumulatived_points: order_by
    driver_license_status: order_by
    id: order_by
    quasi_driving_models: order_by
}

"""aggregate variance on columns"""
type driver_identity_variance_fields {
    accumulatived_points: Float
    driver_license_status: Float
    id: Float
    quasi_driving_models: Float
}

"""
order by variance() on columns of table "driver_identity"
"""
input driver_identity_variance_order_by {
    accumulatived_points: order_by
    driver_license_status: order_by
    id: order_by
    quasi_driving_models: order_by
}



extend type Mutation {
    """
    delete data from the table: "driver_identity"
  """
    delete_driver_identity(
        """filter the rows which have to be deleted"""
        where: driver_identity_bool_exp!
    ): driver_identity_mutation_response

    """
    delete single row from the table: "driver_identity"
  """
    delete_driver_identity_by_pk(
        id: bigint!

        """联合主键"""
        identity_id: String!
    ): driver_identity

    """
    insert data into the table: "driver_identity"
  """
    insert_driver_identity(
        """the rows to be inserted"""
        objects: [driver_identity_insert_input!]!

        """on conflict condition"""
        on_conflict: driver_identity_on_conflict
    ): driver_identity_mutation_response

    """
    insert a single row into the table: "driver_identity"
  """
    insert_driver_identity_one(
        """the row to be inserted"""
        object: driver_identity_insert_input!

        """on conflict condition"""
        on_conflict: driver_identity_on_conflict
    ): driver_identity

    """
    update data of the table: "driver_identity"
  """
    update_driver_identity(
        """increments the integer columns with given value of the filtered values"""
        _inc: driver_identity_inc_input

        """sets the columns of the filtered rows to the given values"""
        _set: driver_identity_set_input

        """filter the rows which have to be updated"""
        where: driver_identity_bool_exp!
    ): driver_identity_mutation_response

    """
    update single row of the table: "driver_identity"
  """
    update_driver_identity_by_pk(
        """increments the integer columns with given value of the filtered values"""
        _inc: driver_identity_inc_input

        """sets the columns of the filtered rows to the given values"""
        _set: driver_identity_set_input
        pk_columns: driver_identity_pk_columns_input!
    ): driver_identity
}




extend type Query {
    """
    fetch data from the table: "driver_identity"
  """
    driver_identity(
        """distinct select on columns"""
        distinct_on: [driver_identity_select_column!]

        """limit the number of rows returned"""
        limit: Int

        """skip the first n rows. Use only with order_by"""
        offset: Int

        """sort the rows by one or more columns"""
        order_by: [driver_identity_order_by!]

        """filter the rows returned"""
        where: driver_identity_bool_exp
    ): [driver_identity!]!

    """
    fetch aggregated fields from the table: "driver_identity"
  """
    driver_identity_aggregate(
        """distinct select on columns"""
        distinct_on: [driver_identity_select_column!]

        """limit the number of rows returned"""
        limit: Int

        """skip the first n rows. Use only with order_by"""
        offset: Int

        """sort the rows by one or more columns"""
        order_by: [driver_identity_order_by!]

        """filter the rows returned"""
        where: driver_identity_bool_exp
    ): driver_identity_aggregate!

    """fetch data from the table: "driver_identity" using primary key columns"""
    driver_identity_by_pk(
        id: bigint!

        """联合主键"""
        identity_id: String!
    ): driver_identity
}



extend type Subscription {
    """
    fetch data from the table: "driver_identity"
  """
    driver_identity(
        """distinct select on columns"""
        distinct_on: [driver_identity_select_column!]

        """limit the number of rows returned"""
        limit: Int

        """skip the first n rows. Use only with order_by"""
        offset: Int

        """sort the rows by one or more columns"""
        order_by: [driver_identity_order_by!]

        """filter the rows returned"""
        where: driver_identity_bool_exp
    ): [driver_identity!]!

    """
    fetch aggregated fields from the table: "driver_identity"
  """
    driver_identity_aggregate(
        """distinct select on columns"""
        distinct_on: [driver_identity_select_column!]

        """limit the number of rows returned"""
        limit: Int

        """skip the first n rows. Use only with order_by"""
        offset: Int

        """sort the rows by one or more columns"""
        order_by: [driver_identity_order_by!]

        """filter the rows returned"""
        where: driver_identity_bool_exp
    ): driver_identity_aggregate!

    """fetch data from the table: "driver_identity" using primary key columns"""
    driver_identity_by_pk(
        id: bigint!

        """联合主键"""
        identity_id: String!
    ): driver_identity
}


