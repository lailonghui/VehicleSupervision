// Code generated by github.com/99designs/gqlgen, DO NOT EDIT.

package model

import (
	"VehicleSupervision/pkg/graphql/model"
	"fmt"
	"io"
	"strconv"
	"time"
)

// expression to compare columns of type _text. All fields are combined with logical 'AND'.
type TextComparisonExp struct {
	Eq     *string  `json:"_eq"`
	Gt     *string  `json:"_gt"`
	Gte    *string  `json:"_gte"`
	In     []string `json:"_in"`
	IsNull *bool    `json:"_is_null"`
	Lt     *string  `json:"_lt"`
	Lte    *string  `json:"_lte"`
	Neq    *string  `json:"_neq"`
	Nin    []string `json:"_nin"`
}

// aggregated selection of "dynamic_spot_check_disposal"
type DynamicSpotCheckDisposalAggregate struct {
	Aggregate *DynamicSpotCheckDisposalAggregateFields `json:"aggregate"`
	Nodes     []*DynamicSpotCheckDisposal              `json:"nodes"`
}

// aggregate fields of "dynamic_spot_check_disposal"
type DynamicSpotCheckDisposalAggregateFields struct {
	Avg        *DynamicSpotCheckDisposalAvgFields        `json:"avg"`
	Count      *int                                      `json:"count"`
	Max        *DynamicSpotCheckDisposalMaxFields        `json:"max"`
	Min        *DynamicSpotCheckDisposalMinFields        `json:"min"`
	Stddev     *DynamicSpotCheckDisposalStddevFields     `json:"stddev"`
	StddevPop  *DynamicSpotCheckDisposalStddevPopFields  `json:"stddev_pop"`
	StddevSamp *DynamicSpotCheckDisposalStddevSampFields `json:"stddev_samp"`
	Sum        *DynamicSpotCheckDisposalSumFields        `json:"sum"`
	VarPop     *DynamicSpotCheckDisposalVarPopFields     `json:"var_pop"`
	VarSamp    *DynamicSpotCheckDisposalVarSampFields    `json:"var_samp"`
	Variance   *DynamicSpotCheckDisposalVarianceFields   `json:"variance"`
}

// order by aggregate values of table "dynamic_spot_check_disposal"
type DynamicSpotCheckDisposalAggregateOrderBy struct {
	Avg        *DynamicSpotCheckDisposalAvgOrderBy        `json:"avg"`
	Count      *model.OrderBy                             `json:"count"`
	Max        *DynamicSpotCheckDisposalMaxOrderBy        `json:"max"`
	Min        *DynamicSpotCheckDisposalMinOrderBy        `json:"min"`
	Stddev     *DynamicSpotCheckDisposalStddevOrderBy     `json:"stddev"`
	StddevPop  *DynamicSpotCheckDisposalStddevPopOrderBy  `json:"stddev_pop"`
	StddevSamp *DynamicSpotCheckDisposalStddevSampOrderBy `json:"stddev_samp"`
	Sum        *DynamicSpotCheckDisposalSumOrderBy        `json:"sum"`
	VarPop     *DynamicSpotCheckDisposalVarPopOrderBy     `json:"var_pop"`
	VarSamp    *DynamicSpotCheckDisposalVarSampOrderBy    `json:"var_samp"`
	Variance   *DynamicSpotCheckDisposalVarianceOrderBy   `json:"variance"`
}

// input type for inserting array relation for remote table "dynamic_spot_check_disposal"
type DynamicSpotCheckDisposalArrRelInsertInput struct {
	Data       []*DynamicSpotCheckDisposalInsertInput `json:"data"`
	OnConflict *DynamicSpotCheckDisposalOnConflict    `json:"on_conflict"`
}

// aggregate avg on columns
type DynamicSpotCheckDisposalAvgFields struct {
	DisposalMethod *float64 `json:"disposal_method"`
	ID             *float64 `json:"id"`
}

// order by avg() on columns of table "dynamic_spot_check_disposal"
type DynamicSpotCheckDisposalAvgOrderBy struct {
	DisposalMethod *model.OrderBy `json:"disposal_method"`
	ID             *model.OrderBy `json:"id"`
}

// Boolean expression to filter rows from the table "dynamic_spot_check_disposal".
// All fields are combined with a logical 'AND'.
type DynamicSpotCheckDisposalBoolExp struct {
	And                           []*DynamicSpotCheckDisposalBoolExp `json:"_and"`
	Not                           *DynamicSpotCheckDisposalBoolExp   `json:"_not"`
	Or                            []*DynamicSpotCheckDisposalBoolExp `json:"_or"`
	AnnounceContent               *model.StringComparisonExp         `json:"announce_content"`
	AppPushContent                *model.StringComparisonExp         `json:"app_push_content"`
	CreatedAt                     *model.TimestamptzComparisonExp    `json:"created_at"`
	CreatedBy                     *model.StringComparisonExp         `json:"created_by"`
	DeletedAt                     *model.TimestamptzComparisonExp    `json:"deleted_at"`
	DeletedBy                     *model.StringComparisonExp         `json:"deleted_by"`
	DisposalContent               *model.StringComparisonExp         `json:"disposal_content"`
	DisposalMethod                *model.IntComparisonExp            `json:"disposal_method"`
	DisposalResult                *model.StringComparisonExp         `json:"disposal_result"`
	EnterpriseID                  *model.StringComparisonExp         `json:"enterprise_id"`
	FeedbackTime                  *model.TimestamptzComparisonExp    `json:"feedback_time"`
	ID                            *model.BigintComparisonExp         `json:"id"`
	ImageAbnormalHandingMeasure   *model.StringComparisonExp         `json:"image_abnormal_handing_measure"`
	IsAnnounce                    *model.BooleanComparisonExp        `json:"is_announce"`
	IsAppPush                     *model.BooleanComparisonExp        `json:"is_app_push"`
	IsDelete                      *model.BooleanComparisonExp        `json:"is_delete"`
	IsNotify                      *model.BooleanComparisonExp        `json:"is_notify"`
	IsSmsPush                     *model.BooleanComparisonExp        `json:"is_sms_push"`
	NotifyContent                 *model.StringComparisonExp         `json:"notify_content"`
	OperationUser                 *model.StringComparisonExp         `json:"operation_user"`
	SendTime                      *model.TimestamptzComparisonExp    `json:"send_time"`
	SupervisionDetailID           *model.StringComparisonExp         `json:"supervision_detail_id"`
	TachographDataDisposalMeasure *model.StringComparisonExp         `json:"tachograph_data_disposal_measure"`
	Telephone                     *model.StringComparisonExp         `json:"telephone"`
	UpdatedAt                     *model.TimestamptzComparisonExp    `json:"updated_at"`
	UpdatedBy                     *model.StringComparisonExp         `json:"updated_by"`
	VehicleID                     *model.StringComparisonExp         `json:"vehicle_id"`
}

// input type for incrementing integer column in table "dynamic_spot_check_disposal"
type DynamicSpotCheckDisposalIncInput struct {
	DisposalMethod *int   `json:"disposal_method"`
	ID             *int64 `json:"id"`
}

// input type for inserting data into table "dynamic_spot_check_disposal"
type DynamicSpotCheckDisposalInsertInput struct {
	AnnounceContent               *string    `json:"announce_content"`
	AppPushContent                *string    `json:"app_push_content"`
	CreatedAt                     *time.Time `json:"created_at"`
	CreatedBy                     *string    `json:"created_by"`
	DeletedAt                     *time.Time `json:"deleted_at"`
	DeletedBy                     *string    `json:"deleted_by"`
	DisposalContent               *string    `json:"disposal_content"`
	DisposalMethod                *int       `json:"disposal_method"`
	DisposalResult                *string    `json:"disposal_result"`
	EnterpriseID                  *string    `json:"enterprise_id"`
	FeedbackTime                  *time.Time `json:"feedback_time"`
	ID                            *int64     `json:"id"`
	ImageAbnormalHandingMeasure   *string    `json:"image_abnormal_handing_measure"`
	IsAnnounce                    *bool      `json:"is_announce"`
	IsAppPush                     *bool      `json:"is_app_push"`
	IsDelete                      *bool      `json:"is_delete"`
	IsNotify                      *bool      `json:"is_notify"`
	IsSmsPush                     *bool      `json:"is_sms_push"`
	NotifyContent                 *string    `json:"notify_content"`
	OperationUser                 *string    `json:"operation_user"`
	SendTime                      *time.Time `json:"send_time"`
	SupervisionDetailID           *string    `json:"supervision_detail_id"`
	TachographDataDisposalMeasure *string    `json:"tachograph_data_disposal_measure"`
	Telephone                     *string    `json:"telephone"`
	UpdatedAt                     *time.Time `json:"updated_at"`
	UpdatedBy                     *string    `json:"updated_by"`
	VehicleID                     *string    `json:"vehicle_id"`
}

// aggregate max on columns
type DynamicSpotCheckDisposalMaxFields struct {
	AnnounceContent               *string    `json:"announce_content"`
	AppPushContent                *string    `json:"app_push_content"`
	CreatedAt                     *time.Time `json:"created_at"`
	CreatedBy                     *string    `json:"created_by"`
	DeletedAt                     *time.Time `json:"deleted_at"`
	DeletedBy                     *string    `json:"deleted_by"`
	DisposalContent               *string    `json:"disposal_content"`
	DisposalMethod                *int       `json:"disposal_method"`
	DisposalResult                *string    `json:"disposal_result"`
	EnterpriseID                  *string    `json:"enterprise_id"`
	FeedbackTime                  *time.Time `json:"feedback_time"`
	ID                            *int64     `json:"id"`
	ImageAbnormalHandingMeasure   *string    `json:"image_abnormal_handing_measure"`
	NotifyContent                 *string    `json:"notify_content"`
	OperationUser                 *string    `json:"operation_user"`
	SendTime                      *time.Time `json:"send_time"`
	SupervisionDetailID           *string    `json:"supervision_detail_id"`
	TachographDataDisposalMeasure *string    `json:"tachograph_data_disposal_measure"`
	Telephone                     *string    `json:"telephone"`
	UpdatedAt                     *time.Time `json:"updated_at"`
	UpdatedBy                     *string    `json:"updated_by"`
	VehicleID                     *string    `json:"vehicle_id"`
}

// order by max() on columns of table "dynamic_spot_check_disposal"
type DynamicSpotCheckDisposalMaxOrderBy struct {
	AnnounceContent               *model.OrderBy `json:"announce_content"`
	AppPushContent                *model.OrderBy `json:"app_push_content"`
	CreatedAt                     *model.OrderBy `json:"created_at"`
	CreatedBy                     *model.OrderBy `json:"created_by"`
	DeletedAt                     *model.OrderBy `json:"deleted_at"`
	DeletedBy                     *model.OrderBy `json:"deleted_by"`
	DisposalContent               *model.OrderBy `json:"disposal_content"`
	DisposalMethod                *model.OrderBy `json:"disposal_method"`
	DisposalResult                *model.OrderBy `json:"disposal_result"`
	EnterpriseID                  *model.OrderBy `json:"enterprise_id"`
	FeedbackTime                  *model.OrderBy `json:"feedback_time"`
	ID                            *model.OrderBy `json:"id"`
	ImageAbnormalHandingMeasure   *model.OrderBy `json:"image_abnormal_handing_measure"`
	NotifyContent                 *model.OrderBy `json:"notify_content"`
	OperationUser                 *model.OrderBy `json:"operation_user"`
	SendTime                      *model.OrderBy `json:"send_time"`
	SupervisionDetailID           *model.OrderBy `json:"supervision_detail_id"`
	TachographDataDisposalMeasure *model.OrderBy `json:"tachograph_data_disposal_measure"`
	Telephone                     *model.OrderBy `json:"telephone"`
	UpdatedAt                     *model.OrderBy `json:"updated_at"`
	UpdatedBy                     *model.OrderBy `json:"updated_by"`
	VehicleID                     *model.OrderBy `json:"vehicle_id"`
}

// aggregate min on columns
type DynamicSpotCheckDisposalMinFields struct {
	AnnounceContent               *string    `json:"announce_content"`
	AppPushContent                *string    `json:"app_push_content"`
	CreatedAt                     *time.Time `json:"created_at"`
	CreatedBy                     *string    `json:"created_by"`
	DeletedAt                     *time.Time `json:"deleted_at"`
	DeletedBy                     *string    `json:"deleted_by"`
	DisposalContent               *string    `json:"disposal_content"`
	DisposalMethod                *int       `json:"disposal_method"`
	DisposalResult                *string    `json:"disposal_result"`
	EnterpriseID                  *string    `json:"enterprise_id"`
	FeedbackTime                  *time.Time `json:"feedback_time"`
	ID                            *int64     `json:"id"`
	ImageAbnormalHandingMeasure   *string    `json:"image_abnormal_handing_measure"`
	NotifyContent                 *string    `json:"notify_content"`
	OperationUser                 *string    `json:"operation_user"`
	SendTime                      *time.Time `json:"send_time"`
	SupervisionDetailID           *string    `json:"supervision_detail_id"`
	TachographDataDisposalMeasure *string    `json:"tachograph_data_disposal_measure"`
	Telephone                     *string    `json:"telephone"`
	UpdatedAt                     *time.Time `json:"updated_at"`
	UpdatedBy                     *string    `json:"updated_by"`
	VehicleID                     *string    `json:"vehicle_id"`
}

// order by min() on columns of table "dynamic_spot_check_disposal"
type DynamicSpotCheckDisposalMinOrderBy struct {
	AnnounceContent               *model.OrderBy `json:"announce_content"`
	AppPushContent                *model.OrderBy `json:"app_push_content"`
	CreatedAt                     *model.OrderBy `json:"created_at"`
	CreatedBy                     *model.OrderBy `json:"created_by"`
	DeletedAt                     *model.OrderBy `json:"deleted_at"`
	DeletedBy                     *model.OrderBy `json:"deleted_by"`
	DisposalContent               *model.OrderBy `json:"disposal_content"`
	DisposalMethod                *model.OrderBy `json:"disposal_method"`
	DisposalResult                *model.OrderBy `json:"disposal_result"`
	EnterpriseID                  *model.OrderBy `json:"enterprise_id"`
	FeedbackTime                  *model.OrderBy `json:"feedback_time"`
	ID                            *model.OrderBy `json:"id"`
	ImageAbnormalHandingMeasure   *model.OrderBy `json:"image_abnormal_handing_measure"`
	NotifyContent                 *model.OrderBy `json:"notify_content"`
	OperationUser                 *model.OrderBy `json:"operation_user"`
	SendTime                      *model.OrderBy `json:"send_time"`
	SupervisionDetailID           *model.OrderBy `json:"supervision_detail_id"`
	TachographDataDisposalMeasure *model.OrderBy `json:"tachograph_data_disposal_measure"`
	Telephone                     *model.OrderBy `json:"telephone"`
	UpdatedAt                     *model.OrderBy `json:"updated_at"`
	UpdatedBy                     *model.OrderBy `json:"updated_by"`
	VehicleID                     *model.OrderBy `json:"vehicle_id"`
}

// response of any mutation on the table "dynamic_spot_check_disposal"
type DynamicSpotCheckDisposalMutationResponse struct {
	// number of affected rows by the mutation
	AffectedRows int `json:"affected_rows"`
	// data of the affected rows by the mutation
	Returning []*DynamicSpotCheckDisposal `json:"returning"`
}

// input type for inserting object relation for remote table "dynamic_spot_check_disposal"
type DynamicSpotCheckDisposalObjRelInsertInput struct {
	Data       *DynamicSpotCheckDisposalInsertInput `json:"data"`
	OnConflict *DynamicSpotCheckDisposalOnConflict  `json:"on_conflict"`
}

// on conflict condition type for table "dynamic_spot_check_disposal"
type DynamicSpotCheckDisposalOnConflict struct {
	Constraint    DynamicSpotCheckDisposalConstraint     `json:"constraint"`
	UpdateColumns []DynamicSpotCheckDisposalUpdateColumn `json:"update_columns"`
	Where         *DynamicSpotCheckDisposalBoolExp       `json:"where"`
}

// ordering options when selecting data from "dynamic_spot_check_disposal"
type DynamicSpotCheckDisposalOrderBy struct {
	AnnounceContent               *model.OrderBy `json:"announce_content"`
	AppPushContent                *model.OrderBy `json:"app_push_content"`
	CreatedAt                     *model.OrderBy `json:"created_at"`
	CreatedBy                     *model.OrderBy `json:"created_by"`
	DeletedAt                     *model.OrderBy `json:"deleted_at"`
	DeletedBy                     *model.OrderBy `json:"deleted_by"`
	DisposalContent               *model.OrderBy `json:"disposal_content"`
	DisposalMethod                *model.OrderBy `json:"disposal_method"`
	DisposalResult                *model.OrderBy `json:"disposal_result"`
	EnterpriseID                  *model.OrderBy `json:"enterprise_id"`
	FeedbackTime                  *model.OrderBy `json:"feedback_time"`
	ID                            *model.OrderBy `json:"id"`
	ImageAbnormalHandingMeasure   *model.OrderBy `json:"image_abnormal_handing_measure"`
	IsAnnounce                    *model.OrderBy `json:"is_announce"`
	IsAppPush                     *model.OrderBy `json:"is_app_push"`
	IsDelete                      *model.OrderBy `json:"is_delete"`
	IsNotify                      *model.OrderBy `json:"is_notify"`
	IsSmsPush                     *model.OrderBy `json:"is_sms_push"`
	NotifyContent                 *model.OrderBy `json:"notify_content"`
	OperationUser                 *model.OrderBy `json:"operation_user"`
	SendTime                      *model.OrderBy `json:"send_time"`
	SupervisionDetailID           *model.OrderBy `json:"supervision_detail_id"`
	TachographDataDisposalMeasure *model.OrderBy `json:"tachograph_data_disposal_measure"`
	Telephone                     *model.OrderBy `json:"telephone"`
	UpdatedAt                     *model.OrderBy `json:"updated_at"`
	UpdatedBy                     *model.OrderBy `json:"updated_by"`
	VehicleID                     *model.OrderBy `json:"vehicle_id"`
}

// primary key columns input for table: "dynamic_spot_check_disposal"
type DynamicSpotCheckDisposalPkColumnsInput struct {
	// 主键
	ID int64 `json:"id"`
}

// input type for updating data in table "dynamic_spot_check_disposal"
type DynamicSpotCheckDisposalSetInput struct {
	AnnounceContent               *string    `json:"announce_content"`
	AppPushContent                *string    `json:"app_push_content"`
	CreatedAt                     *time.Time `json:"created_at"`
	CreatedBy                     *string    `json:"created_by"`
	DeletedAt                     *time.Time `json:"deleted_at"`
	DeletedBy                     *string    `json:"deleted_by"`
	DisposalContent               *string    `json:"disposal_content"`
	DisposalMethod                *int       `json:"disposal_method"`
	DisposalResult                *string    `json:"disposal_result"`
	EnterpriseID                  *string    `json:"enterprise_id"`
	FeedbackTime                  *time.Time `json:"feedback_time"`
	ID                            *int64     `json:"id"`
	ImageAbnormalHandingMeasure   *string    `json:"image_abnormal_handing_measure"`
	IsAnnounce                    *bool      `json:"is_announce"`
	IsAppPush                     *bool      `json:"is_app_push"`
	IsDelete                      *bool      `json:"is_delete"`
	IsNotify                      *bool      `json:"is_notify"`
	IsSmsPush                     *bool      `json:"is_sms_push"`
	NotifyContent                 *string    `json:"notify_content"`
	OperationUser                 *string    `json:"operation_user"`
	SendTime                      *time.Time `json:"send_time"`
	SupervisionDetailID           *string    `json:"supervision_detail_id"`
	TachographDataDisposalMeasure *string    `json:"tachograph_data_disposal_measure"`
	Telephone                     *string    `json:"telephone"`
	UpdatedAt                     *time.Time `json:"updated_at"`
	UpdatedBy                     *string    `json:"updated_by"`
	VehicleID                     *string    `json:"vehicle_id"`
}

// aggregate stddev on columns
type DynamicSpotCheckDisposalStddevFields struct {
	DisposalMethod *float64 `json:"disposal_method"`
	ID             *float64 `json:"id"`
}

// order by stddev() on columns of table "dynamic_spot_check_disposal"
type DynamicSpotCheckDisposalStddevOrderBy struct {
	DisposalMethod *model.OrderBy `json:"disposal_method"`
	ID             *model.OrderBy `json:"id"`
}

// aggregate stddev_pop on columns
type DynamicSpotCheckDisposalStddevPopFields struct {
	DisposalMethod *float64 `json:"disposal_method"`
	ID             *float64 `json:"id"`
}

// order by stddev_pop() on columns of table "dynamic_spot_check_disposal"
type DynamicSpotCheckDisposalStddevPopOrderBy struct {
	DisposalMethod *model.OrderBy `json:"disposal_method"`
	ID             *model.OrderBy `json:"id"`
}

// aggregate stddev_samp on columns
type DynamicSpotCheckDisposalStddevSampFields struct {
	DisposalMethod *float64 `json:"disposal_method"`
	ID             *float64 `json:"id"`
}

// order by stddev_samp() on columns of table "dynamic_spot_check_disposal"
type DynamicSpotCheckDisposalStddevSampOrderBy struct {
	DisposalMethod *model.OrderBy `json:"disposal_method"`
	ID             *model.OrderBy `json:"id"`
}

// aggregate sum on columns
type DynamicSpotCheckDisposalSumFields struct {
	DisposalMethod *int   `json:"disposal_method"`
	ID             *int64 `json:"id"`
}

// order by sum() on columns of table "dynamic_spot_check_disposal"
type DynamicSpotCheckDisposalSumOrderBy struct {
	DisposalMethod *model.OrderBy `json:"disposal_method"`
	ID             *model.OrderBy `json:"id"`
}

// aggregate var_pop on columns
type DynamicSpotCheckDisposalVarPopFields struct {
	DisposalMethod *float64 `json:"disposal_method"`
	ID             *float64 `json:"id"`
}

// order by var_pop() on columns of table "dynamic_spot_check_disposal"
type DynamicSpotCheckDisposalVarPopOrderBy struct {
	DisposalMethod *model.OrderBy `json:"disposal_method"`
	ID             *model.OrderBy `json:"id"`
}

// aggregate var_samp on columns
type DynamicSpotCheckDisposalVarSampFields struct {
	DisposalMethod *float64 `json:"disposal_method"`
	ID             *float64 `json:"id"`
}

// order by var_samp() on columns of table "dynamic_spot_check_disposal"
type DynamicSpotCheckDisposalVarSampOrderBy struct {
	DisposalMethod *model.OrderBy `json:"disposal_method"`
	ID             *model.OrderBy `json:"id"`
}

// aggregate variance on columns
type DynamicSpotCheckDisposalVarianceFields struct {
	DisposalMethod *float64 `json:"disposal_method"`
	ID             *float64 `json:"id"`
}

// order by variance() on columns of table "dynamic_spot_check_disposal"
type DynamicSpotCheckDisposalVarianceOrderBy struct {
	DisposalMethod *model.OrderBy `json:"disposal_method"`
	ID             *model.OrderBy `json:"id"`
}

// aggregated selection of "dynamic_supervision"
type DynamicSupervisionAggregate struct {
	Aggregate *DynamicSupervisionAggregateFields `json:"aggregate"`
	Nodes     []*DynamicSupervision              `json:"nodes"`
}

// aggregate fields of "dynamic_supervision"
type DynamicSupervisionAggregateFields struct {
	Avg        *DynamicSupervisionAvgFields        `json:"avg"`
	Count      *int                                `json:"count"`
	Max        *DynamicSupervisionMaxFields        `json:"max"`
	Min        *DynamicSupervisionMinFields        `json:"min"`
	Stddev     *DynamicSupervisionStddevFields     `json:"stddev"`
	StddevPop  *DynamicSupervisionStddevPopFields  `json:"stddev_pop"`
	StddevSamp *DynamicSupervisionStddevSampFields `json:"stddev_samp"`
	Sum        *DynamicSupervisionSumFields        `json:"sum"`
	VarPop     *DynamicSupervisionVarPopFields     `json:"var_pop"`
	VarSamp    *DynamicSupervisionVarSampFields    `json:"var_samp"`
	Variance   *DynamicSupervisionVarianceFields   `json:"variance"`
}

// order by aggregate values of table "dynamic_supervision"
type DynamicSupervisionAggregateOrderBy struct {
	Avg        *DynamicSupervisionAvgOrderBy        `json:"avg"`
	Count      *model.OrderBy                       `json:"count"`
	Max        *DynamicSupervisionMaxOrderBy        `json:"max"`
	Min        *DynamicSupervisionMinOrderBy        `json:"min"`
	Stddev     *DynamicSupervisionStddevOrderBy     `json:"stddev"`
	StddevPop  *DynamicSupervisionStddevPopOrderBy  `json:"stddev_pop"`
	StddevSamp *DynamicSupervisionStddevSampOrderBy `json:"stddev_samp"`
	Sum        *DynamicSupervisionSumOrderBy        `json:"sum"`
	VarPop     *DynamicSupervisionVarPopOrderBy     `json:"var_pop"`
	VarSamp    *DynamicSupervisionVarSampOrderBy    `json:"var_samp"`
	Variance   *DynamicSupervisionVarianceOrderBy   `json:"variance"`
}

// input type for inserting array relation for remote table "dynamic_supervision"
type DynamicSupervisionArrRelInsertInput struct {
	Data       []*DynamicSupervisionInsertInput `json:"data"`
	OnConflict *DynamicSupervisionOnConflict    `json:"on_conflict"`
}

// aggregate avg on columns
type DynamicSupervisionAvgFields struct {
	Day                  *float64 `json:"day"`
	ID                   *float64 `json:"id"`
	Month                *float64 `json:"month"`
	SpotCheckNumber      *float64 `json:"spot_check_number"`
	SpotCheckRatio       *float64 `json:"spot_check_ratio"`
	SpotCheckTotalNumber *float64 `json:"spot_check_total_number"`
	TotalNumberVehicle   *float64 `json:"total_number_vehicle"`
	Year                 *float64 `json:"year"`
}

// order by avg() on columns of table "dynamic_supervision"
type DynamicSupervisionAvgOrderBy struct {
	Day                  *model.OrderBy `json:"day"`
	ID                   *model.OrderBy `json:"id"`
	Month                *model.OrderBy `json:"month"`
	SpotCheckNumber      *model.OrderBy `json:"spot_check_number"`
	SpotCheckRatio       *model.OrderBy `json:"spot_check_ratio"`
	SpotCheckTotalNumber *model.OrderBy `json:"spot_check_total_number"`
	TotalNumberVehicle   *model.OrderBy `json:"total_number_vehicle"`
	Year                 *model.OrderBy `json:"year"`
}

// Boolean expression to filter rows from the table "dynamic_supervision". All fields are combined with a logical 'AND'.
type DynamicSupervisionBoolExp struct {
	And                  []*DynamicSupervisionBoolExp    `json:"_and"`
	Not                  *DynamicSupervisionBoolExp      `json:"_not"`
	Or                   []*DynamicSupervisionBoolExp    `json:"_or"`
	CheckUserID          *model.StringComparisonExp      `json:"check_user_id"`
	CityID               *model.StringComparisonExp      `json:"city_id"`
	CreatedAt            *model.TimestamptzComparisonExp `json:"created_at"`
	CreatedBy            *model.StringComparisonExp      `json:"created_by"`
	Day                  *model.IntComparisonExp         `json:"day"`
	DeletedAt            *model.TimestamptzComparisonExp `json:"deleted_at"`
	DeletedBy            *model.StringComparisonExp      `json:"deleted_by"`
	DistrictID           *model.StringComparisonExp      `json:"district_id"`
	ID                   *model.BigintComparisonExp      `json:"id"`
	IsDelete             *model.BooleanComparisonExp     `json:"is_delete"`
	Month                *model.IntComparisonExp         `json:"month"`
	ProvinceID           *model.StringComparisonExp      `json:"province_id"`
	SpotCheckDate        *model.TimestamptzComparisonExp `json:"spot_check_date"`
	SpotCheckNumber      *model.IntComparisonExp         `json:"spot_check_number"`
	SpotCheckRatio       *model.NumericComparisonExp     `json:"spot_check_ratio"`
	SpotCheckTotalNumber *model.IntComparisonExp         `json:"spot_check_total_number"`
	SupervisionID        *model.StringComparisonExp      `json:"supervision_id"`
	TotalNumberVehicle   *model.IntComparisonExp         `json:"total_number_vehicle"`
	UpdatedAt            *model.TimestamptzComparisonExp `json:"updated_at"`
	UpdatedBy            *model.StringComparisonExp      `json:"updated_by"`
	Year                 *model.IntComparisonExp         `json:"year"`
}

// aggregated selection of "dynamic_supervision_detail"
type DynamicSupervisionDetailAggregate struct {
	Aggregate *DynamicSupervisionDetailAggregateFields `json:"aggregate"`
	Nodes     []*DynamicSupervisionDetail              `json:"nodes"`
}

// aggregate fields of "dynamic_supervision_detail"
type DynamicSupervisionDetailAggregateFields struct {
	Avg        *DynamicSupervisionDetailAvgFields        `json:"avg"`
	Count      *int                                      `json:"count"`
	Max        *DynamicSupervisionDetailMaxFields        `json:"max"`
	Min        *DynamicSupervisionDetailMinFields        `json:"min"`
	Stddev     *DynamicSupervisionDetailStddevFields     `json:"stddev"`
	StddevPop  *DynamicSupervisionDetailStddevPopFields  `json:"stddev_pop"`
	StddevSamp *DynamicSupervisionDetailStddevSampFields `json:"stddev_samp"`
	Sum        *DynamicSupervisionDetailSumFields        `json:"sum"`
	VarPop     *DynamicSupervisionDetailVarPopFields     `json:"var_pop"`
	VarSamp    *DynamicSupervisionDetailVarSampFields    `json:"var_samp"`
	Variance   *DynamicSupervisionDetailVarianceFields   `json:"variance"`
}

// order by aggregate values of table "dynamic_supervision_detail"
type DynamicSupervisionDetailAggregateOrderBy struct {
	Avg        *DynamicSupervisionDetailAvgOrderBy        `json:"avg"`
	Count      *model.OrderBy                             `json:"count"`
	Max        *DynamicSupervisionDetailMaxOrderBy        `json:"max"`
	Min        *DynamicSupervisionDetailMinOrderBy        `json:"min"`
	Stddev     *DynamicSupervisionDetailStddevOrderBy     `json:"stddev"`
	StddevPop  *DynamicSupervisionDetailStddevPopOrderBy  `json:"stddev_pop"`
	StddevSamp *DynamicSupervisionDetailStddevSampOrderBy `json:"stddev_samp"`
	Sum        *DynamicSupervisionDetailSumOrderBy        `json:"sum"`
	VarPop     *DynamicSupervisionDetailVarPopOrderBy     `json:"var_pop"`
	VarSamp    *DynamicSupervisionDetailVarSampOrderBy    `json:"var_samp"`
	Variance   *DynamicSupervisionDetailVarianceOrderBy   `json:"variance"`
}

// input type for inserting array relation for remote table "dynamic_supervision_detail"
type DynamicSupervisionDetailArrRelInsertInput struct {
	Data       []*DynamicSupervisionDetailInsertInput `json:"data"`
	OnConflict *DynamicSupervisionDetailOnConflict    `json:"on_conflict"`
}

// aggregate avg on columns
type DynamicSupervisionDetailAvgFields struct {
	BusinessScope *float64 `json:"business_scope"`
	Curve         *float64 `json:"curve"`
	Equipment     *float64 `json:"equipment"`
	ID            *float64 `json:"id"`
	LensPosition  *float64 `json:"lens_position"`
	TaxiState     *float64 `json:"taxi_state"`
	Trail         *float64 `json:"trail"`
}

// order by avg() on columns of table "dynamic_supervision_detail"
type DynamicSupervisionDetailAvgOrderBy struct {
	BusinessScope *model.OrderBy `json:"business_scope"`
	Curve         *model.OrderBy `json:"curve"`
	Equipment     *model.OrderBy `json:"equipment"`
	ID            *model.OrderBy `json:"id"`
	LensPosition  *model.OrderBy `json:"lens_position"`
	TaxiState     *model.OrderBy `json:"taxi_state"`
	Trail         *model.OrderBy `json:"trail"`
}

// Boolean expression to filter rows from the table "dynamic_supervision_detail". All fields are combined with a logical 'AND'.
type DynamicSupervisionDetailBoolExp struct {
	GpsSpeed                     *model.StringComparisonExp         `json:"GPS_speed"`
	And                          []*DynamicSupervisionDetailBoolExp `json:"_and"`
	Not                          *DynamicSupervisionDetailBoolExp   `json:"_not"`
	Or                           []*DynamicSupervisionDetailBoolExp `json:"_or"`
	Assignee                     *model.StringComparisonExp         `json:"assignee"`
	BusinessScope                *model.IntComparisonExp            `json:"business_scope"`
	Coordinate                   *model.PointComparisonExp          `json:"coordinate"`
	CreatedAt                    *model.TimestamptzComparisonExp    `json:"created_at"`
	CreatedBy                    *model.StringComparisonExp         `json:"created_by"`
	Curve                        *model.IntComparisonExp            `json:"curve"`
	DeletedAt                    *model.TimestamptzComparisonExp    `json:"deleted_at"`
	DeletedBy                    *model.StringComparisonExp         `json:"deleted_by"`
	DisposalMeasures             *model.StringComparisonExp         `json:"disposal_measures"`
	DisposalMeasures1            *model.StringComparisonExp         `json:"disposal_measures1"`
	DisposalMeasures2            *model.StringComparisonExp         `json:"disposal_measures2"`
	DisposalMeasures3            *model.StringComparisonExp         `json:"disposal_measures3"`
	DisposalMeasures4            *model.StringComparisonExp         `json:"disposal_measures4"`
	DisposalMeasures5            *model.StringComparisonExp         `json:"disposal_measures5"`
	DisposalMeasures6            *model.StringComparisonExp         `json:"disposal_measures6"`
	DisposalMeasures7            *model.StringComparisonExp         `json:"disposal_measures7"`
	DisposalResults              *model.StringComparisonExp         `json:"disposal_results"`
	DisposalResults1             *model.StringComparisonExp         `json:"disposal_results1"`
	DisposalResults2             *model.StringComparisonExp         `json:"disposal_results2"`
	DisposalResults3             *model.StringComparisonExp         `json:"disposal_results3"`
	DisposalResults4             *model.StringComparisonExp         `json:"disposal_results4"`
	DisposalResults5             *model.StringComparisonExp         `json:"disposal_results5"`
	DisposalResults6             *model.StringComparisonExp         `json:"disposal_results6"`
	DisposalResults7             *model.StringComparisonExp         `json:"disposal_results7"`
	DriverID                     *model.StringComparisonExp         `json:"driver_id"`
	EnterpriseID                 *model.StringComparisonExp         `json:"enterprise_id"`
	Equipment                    *model.IntComparisonExp            `json:"equipment"`
	FatigueAlarmTime             *model.TimestamptzComparisonExp    `json:"fatigue_alarm_time"`
	FeedbackTime                 *model.TimestamptzComparisonExp    `json:"feedback_time"`
	ID                           *model.BigintComparisonExp         `json:"id"`
	IsDelete                     *model.BooleanComparisonExp        `json:"is_delete"`
	IsFatigueDriving             *model.BooleanComparisonExp        `json:"is_fatigue_driving"`
	IsLocate                     *model.BooleanComparisonExp        `json:"is_locate"`
	IsMorningOutage              *model.BooleanComparisonExp        `json:"is_morning_outage"`
	IsOnline                     *model.BooleanComparisonExp        `json:"is_online"`
	IsSend                       *model.BooleanComparisonExp        `json:"is_send"`
	IsSpeeding                   *model.BooleanComparisonExp        `json:"is_speeding"`
	IsTachographRecordNormal     *model.BooleanComparisonExp        `json:"is_tachograph_record_normal"`
	LatitudeLongitudeDescription *model.StringComparisonExp         `json:"latitude_longitude_description"`
	LensOn                       *model.StringComparisonExp         `json:"lens_on"`
	LensPosition                 *model.IntComparisonExp            `json:"lens_position"`
	MonitorEndTime               *model.TimestamptzComparisonExp    `json:"monitor_end_time"`
	MonitoringLocation           *model.StringComparisonExp         `json:"monitoring_location"`
	MonitoringTime               *model.TimestamptzComparisonExp    `json:"monitoring_time"`
	OtherInfraction              *model.StringComparisonExp         `json:"other_infraction"`
	Others                       *model.StringComparisonExp         `json:"others"`
	OutageAlarmTime              *model.TimestamptzComparisonExp    `json:"outage_alarm_time"`
	Remarks                      *model.StringComparisonExp         `json:"remarks"`
	SpeedAlarmTime               *model.TimestamptzComparisonExp    `json:"speed_alarm_time"`
	SpeedingSpeed                *model.StringComparisonExp         `json:"speeding_speed"`
	SupervisionDetailID          *model.StringComparisonExp         `json:"supervision_detail_id"`
	SupervisionID                *model.StringComparisonExp         `json:"supervision_id"`
	TachographDataException      *model.StringComparisonExp         `json:"tachograph_data_exception"`
	TachographSpeed              *model.StringComparisonExp         `json:"tachograph_speed"`
	TaxiState                    *model.IntComparisonExp            `json:"taxi_state"`
	Trail                        *model.IntComparisonExp            `json:"trail"`
	TreatmentTime                *model.TimestamptzComparisonExp    `json:"treatment_time"`
	UpdatedAt                    *model.TimestamptzComparisonExp    `json:"updated_at"`
	UpdatedBy                    *model.StringComparisonExp         `json:"updated_by"`
	VehicleID                    *model.StringComparisonExp         `json:"vehicle_id"`
}

// input type for incrementing integer column in table "dynamic_supervision_detail"
type DynamicSupervisionDetailIncInput struct {
	BusinessScope *int   `json:"business_scope"`
	Curve         *int   `json:"curve"`
	Equipment     *int   `json:"equipment"`
	ID            *int64 `json:"id"`
	LensPosition  *int   `json:"lens_position"`
	TaxiState     *int   `json:"taxi_state"`
	Trail         *int   `json:"trail"`
}

// input type for inserting data into table "dynamic_supervision_detail"
type DynamicSupervisionDetailInsertInput struct {
	GpsSpeed                     *string    `json:"GPS_speed"`
	Assignee                     *string    `json:"assignee"`
	BusinessScope                *int       `json:"business_scope"`
	Coordinate                   *string    `json:"coordinate"`
	CreatedAt                    *time.Time `json:"created_at"`
	CreatedBy                    *string    `json:"created_by"`
	Curve                        *int       `json:"curve"`
	DeletedAt                    *time.Time `json:"deleted_at"`
	DeletedBy                    *string    `json:"deleted_by"`
	DisposalMeasures             *string    `json:"disposal_measures"`
	DisposalMeasures1            *string    `json:"disposal_measures1"`
	DisposalMeasures2            *string    `json:"disposal_measures2"`
	DisposalMeasures3            *string    `json:"disposal_measures3"`
	DisposalMeasures4            *string    `json:"disposal_measures4"`
	DisposalMeasures5            *string    `json:"disposal_measures5"`
	DisposalMeasures6            *string    `json:"disposal_measures6"`
	DisposalMeasures7            *string    `json:"disposal_measures7"`
	DisposalResults              *string    `json:"disposal_results"`
	DisposalResults1             *string    `json:"disposal_results1"`
	DisposalResults2             *string    `json:"disposal_results2"`
	DisposalResults3             *string    `json:"disposal_results3"`
	DisposalResults4             *string    `json:"disposal_results4"`
	DisposalResults5             *string    `json:"disposal_results5"`
	DisposalResults6             *string    `json:"disposal_results6"`
	DisposalResults7             *string    `json:"disposal_results7"`
	DriverID                     *string    `json:"driver_id"`
	EnterpriseID                 *string    `json:"enterprise_id"`
	Equipment                    *int       `json:"equipment"`
	FatigueAlarmTime             *time.Time `json:"fatigue_alarm_time"`
	FeedbackTime                 *time.Time `json:"feedback_time"`
	ID                           *int64     `json:"id"`
	IsDelete                     *bool      `json:"is_delete"`
	IsFatigueDriving             *bool      `json:"is_fatigue_driving"`
	IsLocate                     *bool      `json:"is_locate"`
	IsMorningOutage              *bool      `json:"is_morning_outage"`
	IsOnline                     *bool      `json:"is_online"`
	IsSend                       *bool      `json:"is_send"`
	IsSpeeding                   *bool      `json:"is_speeding"`
	IsTachographRecordNormal     *bool      `json:"is_tachograph_record_normal"`
	LatitudeLongitudeDescription *string    `json:"latitude_longitude_description"`
	LensOn                       *string    `json:"lens_on"`
	LensPosition                 *int       `json:"lens_position"`
	MonitorEndTime               *time.Time `json:"monitor_end_time"`
	MonitoringLocation           *string    `json:"monitoring_location"`
	MonitoringTime               *time.Time `json:"monitoring_time"`
	OtherInfraction              *string    `json:"other_infraction"`
	Others                       *string    `json:"others"`
	OutageAlarmTime              *time.Time `json:"outage_alarm_time"`
	Remarks                      *string    `json:"remarks"`
	SpeedAlarmTime               *time.Time `json:"speed_alarm_time"`
	SpeedingSpeed                *string    `json:"speeding_speed"`
	SupervisionDetailID          *string    `json:"supervision_detail_id"`
	SupervisionID                *string    `json:"supervision_id"`
	TachographDataException      *string    `json:"tachograph_data_exception"`
	TachographSpeed              *string    `json:"tachograph_speed"`
	TaxiState                    *int       `json:"taxi_state"`
	Trail                        *int       `json:"trail"`
	TreatmentTime                *time.Time `json:"treatment_time"`
	UpdatedAt                    *time.Time `json:"updated_at"`
	UpdatedBy                    *string    `json:"updated_by"`
	VehicleID                    *string    `json:"vehicle_id"`
}

// aggregate max on columns
type DynamicSupervisionDetailMaxFields struct {
	GpsSpeed                     *string    `json:"GPS_speed"`
	Assignee                     *string    `json:"assignee"`
	BusinessScope                *int       `json:"business_scope"`
	CreatedAt                    *time.Time `json:"created_at"`
	CreatedBy                    *string    `json:"created_by"`
	Curve                        *int       `json:"curve"`
	DeletedAt                    *time.Time `json:"deleted_at"`
	DeletedBy                    *string    `json:"deleted_by"`
	DisposalMeasures             *string    `json:"disposal_measures"`
	DisposalMeasures1            *string    `json:"disposal_measures1"`
	DisposalMeasures2            *string    `json:"disposal_measures2"`
	DisposalMeasures3            *string    `json:"disposal_measures3"`
	DisposalMeasures4            *string    `json:"disposal_measures4"`
	DisposalMeasures5            *string    `json:"disposal_measures5"`
	DisposalMeasures6            *string    `json:"disposal_measures6"`
	DisposalMeasures7            *string    `json:"disposal_measures7"`
	DisposalResults              *string    `json:"disposal_results"`
	DisposalResults1             *string    `json:"disposal_results1"`
	DisposalResults2             *string    `json:"disposal_results2"`
	DisposalResults3             *string    `json:"disposal_results3"`
	DisposalResults4             *string    `json:"disposal_results4"`
	DisposalResults5             *string    `json:"disposal_results5"`
	DisposalResults6             *string    `json:"disposal_results6"`
	DisposalResults7             *string    `json:"disposal_results7"`
	DriverID                     *string    `json:"driver_id"`
	EnterpriseID                 *string    `json:"enterprise_id"`
	Equipment                    *int       `json:"equipment"`
	FatigueAlarmTime             *time.Time `json:"fatigue_alarm_time"`
	FeedbackTime                 *time.Time `json:"feedback_time"`
	ID                           *int64     `json:"id"`
	LatitudeLongitudeDescription *string    `json:"latitude_longitude_description"`
	LensOn                       *string    `json:"lens_on"`
	LensPosition                 *int       `json:"lens_position"`
	MonitorEndTime               *time.Time `json:"monitor_end_time"`
	MonitoringLocation           *string    `json:"monitoring_location"`
	MonitoringTime               *time.Time `json:"monitoring_time"`
	OtherInfraction              *string    `json:"other_infraction"`
	Others                       *string    `json:"others"`
	OutageAlarmTime              *time.Time `json:"outage_alarm_time"`
	Remarks                      *string    `json:"remarks"`
	SpeedAlarmTime               *time.Time `json:"speed_alarm_time"`
	SpeedingSpeed                *string    `json:"speeding_speed"`
	SupervisionDetailID          *string    `json:"supervision_detail_id"`
	SupervisionID                *string    `json:"supervision_id"`
	TachographDataException      *string    `json:"tachograph_data_exception"`
	TachographSpeed              *string    `json:"tachograph_speed"`
	TaxiState                    *int       `json:"taxi_state"`
	Trail                        *int       `json:"trail"`
	TreatmentTime                *time.Time `json:"treatment_time"`
	UpdatedAt                    *time.Time `json:"updated_at"`
	UpdatedBy                    *string    `json:"updated_by"`
	VehicleID                    *string    `json:"vehicle_id"`
}

// order by max() on columns of table "dynamic_supervision_detail"
type DynamicSupervisionDetailMaxOrderBy struct {
	GpsSpeed                     *model.OrderBy `json:"GPS_speed"`
	Assignee                     *model.OrderBy `json:"assignee"`
	BusinessScope                *model.OrderBy `json:"business_scope"`
	CreatedAt                    *model.OrderBy `json:"created_at"`
	CreatedBy                    *model.OrderBy `json:"created_by"`
	Curve                        *model.OrderBy `json:"curve"`
	DeletedAt                    *model.OrderBy `json:"deleted_at"`
	DeletedBy                    *model.OrderBy `json:"deleted_by"`
	DisposalMeasures             *model.OrderBy `json:"disposal_measures"`
	DisposalMeasures1            *model.OrderBy `json:"disposal_measures1"`
	DisposalMeasures2            *model.OrderBy `json:"disposal_measures2"`
	DisposalMeasures3            *model.OrderBy `json:"disposal_measures3"`
	DisposalMeasures4            *model.OrderBy `json:"disposal_measures4"`
	DisposalMeasures5            *model.OrderBy `json:"disposal_measures5"`
	DisposalMeasures6            *model.OrderBy `json:"disposal_measures6"`
	DisposalMeasures7            *model.OrderBy `json:"disposal_measures7"`
	DisposalResults              *model.OrderBy `json:"disposal_results"`
	DisposalResults1             *model.OrderBy `json:"disposal_results1"`
	DisposalResults2             *model.OrderBy `json:"disposal_results2"`
	DisposalResults3             *model.OrderBy `json:"disposal_results3"`
	DisposalResults4             *model.OrderBy `json:"disposal_results4"`
	DisposalResults5             *model.OrderBy `json:"disposal_results5"`
	DisposalResults6             *model.OrderBy `json:"disposal_results6"`
	DisposalResults7             *model.OrderBy `json:"disposal_results7"`
	DriverID                     *model.OrderBy `json:"driver_id"`
	EnterpriseID                 *model.OrderBy `json:"enterprise_id"`
	Equipment                    *model.OrderBy `json:"equipment"`
	FatigueAlarmTime             *model.OrderBy `json:"fatigue_alarm_time"`
	FeedbackTime                 *model.OrderBy `json:"feedback_time"`
	ID                           *model.OrderBy `json:"id"`
	LatitudeLongitudeDescription *model.OrderBy `json:"latitude_longitude_description"`
	LensOn                       *model.OrderBy `json:"lens_on"`
	LensPosition                 *model.OrderBy `json:"lens_position"`
	MonitorEndTime               *model.OrderBy `json:"monitor_end_time"`
	MonitoringLocation           *model.OrderBy `json:"monitoring_location"`
	MonitoringTime               *model.OrderBy `json:"monitoring_time"`
	OtherInfraction              *model.OrderBy `json:"other_infraction"`
	Others                       *model.OrderBy `json:"others"`
	OutageAlarmTime              *model.OrderBy `json:"outage_alarm_time"`
	Remarks                      *model.OrderBy `json:"remarks"`
	SpeedAlarmTime               *model.OrderBy `json:"speed_alarm_time"`
	SpeedingSpeed                *model.OrderBy `json:"speeding_speed"`
	SupervisionDetailID          *model.OrderBy `json:"supervision_detail_id"`
	SupervisionID                *model.OrderBy `json:"supervision_id"`
	TachographDataException      *model.OrderBy `json:"tachograph_data_exception"`
	TachographSpeed              *model.OrderBy `json:"tachograph_speed"`
	TaxiState                    *model.OrderBy `json:"taxi_state"`
	Trail                        *model.OrderBy `json:"trail"`
	TreatmentTime                *model.OrderBy `json:"treatment_time"`
	UpdatedAt                    *model.OrderBy `json:"updated_at"`
	UpdatedBy                    *model.OrderBy `json:"updated_by"`
	VehicleID                    *model.OrderBy `json:"vehicle_id"`
}

// aggregate min on columns
type DynamicSupervisionDetailMinFields struct {
	GpsSpeed                     *string    `json:"GPS_speed"`
	Assignee                     *string    `json:"assignee"`
	BusinessScope                *int       `json:"business_scope"`
	CreatedAt                    *time.Time `json:"created_at"`
	CreatedBy                    *string    `json:"created_by"`
	Curve                        *int       `json:"curve"`
	DeletedAt                    *time.Time `json:"deleted_at"`
	DeletedBy                    *string    `json:"deleted_by"`
	DisposalMeasures             *string    `json:"disposal_measures"`
	DisposalMeasures1            *string    `json:"disposal_measures1"`
	DisposalMeasures2            *string    `json:"disposal_measures2"`
	DisposalMeasures3            *string    `json:"disposal_measures3"`
	DisposalMeasures4            *string    `json:"disposal_measures4"`
	DisposalMeasures5            *string    `json:"disposal_measures5"`
	DisposalMeasures6            *string    `json:"disposal_measures6"`
	DisposalMeasures7            *string    `json:"disposal_measures7"`
	DisposalResults              *string    `json:"disposal_results"`
	DisposalResults1             *string    `json:"disposal_results1"`
	DisposalResults2             *string    `json:"disposal_results2"`
	DisposalResults3             *string    `json:"disposal_results3"`
	DisposalResults4             *string    `json:"disposal_results4"`
	DisposalResults5             *string    `json:"disposal_results5"`
	DisposalResults6             *string    `json:"disposal_results6"`
	DisposalResults7             *string    `json:"disposal_results7"`
	DriverID                     *string    `json:"driver_id"`
	EnterpriseID                 *string    `json:"enterprise_id"`
	Equipment                    *int       `json:"equipment"`
	FatigueAlarmTime             *time.Time `json:"fatigue_alarm_time"`
	FeedbackTime                 *time.Time `json:"feedback_time"`
	ID                           *int64     `json:"id"`
	LatitudeLongitudeDescription *string    `json:"latitude_longitude_description"`
	LensOn                       *string    `json:"lens_on"`
	LensPosition                 *int       `json:"lens_position"`
	MonitorEndTime               *time.Time `json:"monitor_end_time"`
	MonitoringLocation           *string    `json:"monitoring_location"`
	MonitoringTime               *time.Time `json:"monitoring_time"`
	OtherInfraction              *string    `json:"other_infraction"`
	Others                       *string    `json:"others"`
	OutageAlarmTime              *time.Time `json:"outage_alarm_time"`
	Remarks                      *string    `json:"remarks"`
	SpeedAlarmTime               *time.Time `json:"speed_alarm_time"`
	SpeedingSpeed                *string    `json:"speeding_speed"`
	SupervisionDetailID          *string    `json:"supervision_detail_id"`
	SupervisionID                *string    `json:"supervision_id"`
	TachographDataException      *string    `json:"tachograph_data_exception"`
	TachographSpeed              *string    `json:"tachograph_speed"`
	TaxiState                    *int       `json:"taxi_state"`
	Trail                        *int       `json:"trail"`
	TreatmentTime                *time.Time `json:"treatment_time"`
	UpdatedAt                    *time.Time `json:"updated_at"`
	UpdatedBy                    *string    `json:"updated_by"`
	VehicleID                    *string    `json:"vehicle_id"`
}

// order by min() on columns of table "dynamic_supervision_detail"
type DynamicSupervisionDetailMinOrderBy struct {
	GpsSpeed                     *model.OrderBy `json:"GPS_speed"`
	Assignee                     *model.OrderBy `json:"assignee"`
	BusinessScope                *model.OrderBy `json:"business_scope"`
	CreatedAt                    *model.OrderBy `json:"created_at"`
	CreatedBy                    *model.OrderBy `json:"created_by"`
	Curve                        *model.OrderBy `json:"curve"`
	DeletedAt                    *model.OrderBy `json:"deleted_at"`
	DeletedBy                    *model.OrderBy `json:"deleted_by"`
	DisposalMeasures             *model.OrderBy `json:"disposal_measures"`
	DisposalMeasures1            *model.OrderBy `json:"disposal_measures1"`
	DisposalMeasures2            *model.OrderBy `json:"disposal_measures2"`
	DisposalMeasures3            *model.OrderBy `json:"disposal_measures3"`
	DisposalMeasures4            *model.OrderBy `json:"disposal_measures4"`
	DisposalMeasures5            *model.OrderBy `json:"disposal_measures5"`
	DisposalMeasures6            *model.OrderBy `json:"disposal_measures6"`
	DisposalMeasures7            *model.OrderBy `json:"disposal_measures7"`
	DisposalResults              *model.OrderBy `json:"disposal_results"`
	DisposalResults1             *model.OrderBy `json:"disposal_results1"`
	DisposalResults2             *model.OrderBy `json:"disposal_results2"`
	DisposalResults3             *model.OrderBy `json:"disposal_results3"`
	DisposalResults4             *model.OrderBy `json:"disposal_results4"`
	DisposalResults5             *model.OrderBy `json:"disposal_results5"`
	DisposalResults6             *model.OrderBy `json:"disposal_results6"`
	DisposalResults7             *model.OrderBy `json:"disposal_results7"`
	DriverID                     *model.OrderBy `json:"driver_id"`
	EnterpriseID                 *model.OrderBy `json:"enterprise_id"`
	Equipment                    *model.OrderBy `json:"equipment"`
	FatigueAlarmTime             *model.OrderBy `json:"fatigue_alarm_time"`
	FeedbackTime                 *model.OrderBy `json:"feedback_time"`
	ID                           *model.OrderBy `json:"id"`
	LatitudeLongitudeDescription *model.OrderBy `json:"latitude_longitude_description"`
	LensOn                       *model.OrderBy `json:"lens_on"`
	LensPosition                 *model.OrderBy `json:"lens_position"`
	MonitorEndTime               *model.OrderBy `json:"monitor_end_time"`
	MonitoringLocation           *model.OrderBy `json:"monitoring_location"`
	MonitoringTime               *model.OrderBy `json:"monitoring_time"`
	OtherInfraction              *model.OrderBy `json:"other_infraction"`
	Others                       *model.OrderBy `json:"others"`
	OutageAlarmTime              *model.OrderBy `json:"outage_alarm_time"`
	Remarks                      *model.OrderBy `json:"remarks"`
	SpeedAlarmTime               *model.OrderBy `json:"speed_alarm_time"`
	SpeedingSpeed                *model.OrderBy `json:"speeding_speed"`
	SupervisionDetailID          *model.OrderBy `json:"supervision_detail_id"`
	SupervisionID                *model.OrderBy `json:"supervision_id"`
	TachographDataException      *model.OrderBy `json:"tachograph_data_exception"`
	TachographSpeed              *model.OrderBy `json:"tachograph_speed"`
	TaxiState                    *model.OrderBy `json:"taxi_state"`
	Trail                        *model.OrderBy `json:"trail"`
	TreatmentTime                *model.OrderBy `json:"treatment_time"`
	UpdatedAt                    *model.OrderBy `json:"updated_at"`
	UpdatedBy                    *model.OrderBy `json:"updated_by"`
	VehicleID                    *model.OrderBy `json:"vehicle_id"`
}

// response of any mutation on the table "dynamic_supervision_detail"
type DynamicSupervisionDetailMutationResponse struct {
	// number of affected rows by the mutation
	AffectedRows int `json:"affected_rows"`
	// data of the affected rows by the mutation
	Returning []*DynamicSupervisionDetail `json:"returning"`
}

// input type for inserting object relation for remote table "dynamic_supervision_detail"
type DynamicSupervisionDetailObjRelInsertInput struct {
	Data       *DynamicSupervisionDetailInsertInput `json:"data"`
	OnConflict *DynamicSupervisionDetailOnConflict  `json:"on_conflict"`
}

// on conflict condition type for table "dynamic_supervision_detail"
type DynamicSupervisionDetailOnConflict struct {
	Constraint    DynamicSupervisionDetailConstraint     `json:"constraint"`
	UpdateColumns []DynamicSupervisionDetailUpdateColumn `json:"update_columns"`
	Where         *DynamicSupervisionDetailBoolExp       `json:"where"`
}

// ordering options when selecting data from "dynamic_supervision_detail"
type DynamicSupervisionDetailOrderBy struct {
	GpsSpeed                     *model.OrderBy `json:"GPS_speed"`
	Assignee                     *model.OrderBy `json:"assignee"`
	BusinessScope                *model.OrderBy `json:"business_scope"`
	Coordinate                   *model.OrderBy `json:"coordinate"`
	CreatedAt                    *model.OrderBy `json:"created_at"`
	CreatedBy                    *model.OrderBy `json:"created_by"`
	Curve                        *model.OrderBy `json:"curve"`
	DeletedAt                    *model.OrderBy `json:"deleted_at"`
	DeletedBy                    *model.OrderBy `json:"deleted_by"`
	DisposalMeasures             *model.OrderBy `json:"disposal_measures"`
	DisposalMeasures1            *model.OrderBy `json:"disposal_measures1"`
	DisposalMeasures2            *model.OrderBy `json:"disposal_measures2"`
	DisposalMeasures3            *model.OrderBy `json:"disposal_measures3"`
	DisposalMeasures4            *model.OrderBy `json:"disposal_measures4"`
	DisposalMeasures5            *model.OrderBy `json:"disposal_measures5"`
	DisposalMeasures6            *model.OrderBy `json:"disposal_measures6"`
	DisposalMeasures7            *model.OrderBy `json:"disposal_measures7"`
	DisposalResults              *model.OrderBy `json:"disposal_results"`
	DisposalResults1             *model.OrderBy `json:"disposal_results1"`
	DisposalResults2             *model.OrderBy `json:"disposal_results2"`
	DisposalResults3             *model.OrderBy `json:"disposal_results3"`
	DisposalResults4             *model.OrderBy `json:"disposal_results4"`
	DisposalResults5             *model.OrderBy `json:"disposal_results5"`
	DisposalResults6             *model.OrderBy `json:"disposal_results6"`
	DisposalResults7             *model.OrderBy `json:"disposal_results7"`
	DriverID                     *model.OrderBy `json:"driver_id"`
	EnterpriseID                 *model.OrderBy `json:"enterprise_id"`
	Equipment                    *model.OrderBy `json:"equipment"`
	FatigueAlarmTime             *model.OrderBy `json:"fatigue_alarm_time"`
	FeedbackTime                 *model.OrderBy `json:"feedback_time"`
	ID                           *model.OrderBy `json:"id"`
	IsDelete                     *model.OrderBy `json:"is_delete"`
	IsFatigueDriving             *model.OrderBy `json:"is_fatigue_driving"`
	IsLocate                     *model.OrderBy `json:"is_locate"`
	IsMorningOutage              *model.OrderBy `json:"is_morning_outage"`
	IsOnline                     *model.OrderBy `json:"is_online"`
	IsSend                       *model.OrderBy `json:"is_send"`
	IsSpeeding                   *model.OrderBy `json:"is_speeding"`
	IsTachographRecordNormal     *model.OrderBy `json:"is_tachograph_record_normal"`
	LatitudeLongitudeDescription *model.OrderBy `json:"latitude_longitude_description"`
	LensOn                       *model.OrderBy `json:"lens_on"`
	LensPosition                 *model.OrderBy `json:"lens_position"`
	MonitorEndTime               *model.OrderBy `json:"monitor_end_time"`
	MonitoringLocation           *model.OrderBy `json:"monitoring_location"`
	MonitoringTime               *model.OrderBy `json:"monitoring_time"`
	OtherInfraction              *model.OrderBy `json:"other_infraction"`
	Others                       *model.OrderBy `json:"others"`
	OutageAlarmTime              *model.OrderBy `json:"outage_alarm_time"`
	Remarks                      *model.OrderBy `json:"remarks"`
	SpeedAlarmTime               *model.OrderBy `json:"speed_alarm_time"`
	SpeedingSpeed                *model.OrderBy `json:"speeding_speed"`
	SupervisionDetailID          *model.OrderBy `json:"supervision_detail_id"`
	SupervisionID                *model.OrderBy `json:"supervision_id"`
	TachographDataException      *model.OrderBy `json:"tachograph_data_exception"`
	TachographSpeed              *model.OrderBy `json:"tachograph_speed"`
	TaxiState                    *model.OrderBy `json:"taxi_state"`
	Trail                        *model.OrderBy `json:"trail"`
	TreatmentTime                *model.OrderBy `json:"treatment_time"`
	UpdatedAt                    *model.OrderBy `json:"updated_at"`
	UpdatedBy                    *model.OrderBy `json:"updated_by"`
	VehicleID                    *model.OrderBy `json:"vehicle_id"`
}

// primary key columns input for table: "dynamic_supervision_detail"
type DynamicSupervisionDetailPkColumnsInput struct {
	// 主键
	ID int64 `json:"id"`
	// 联合主键
	SupervisionDetailID string `json:"supervision_detail_id"`
}

// input type for updating data in table "dynamic_supervision_detail"
type DynamicSupervisionDetailSetInput struct {
	GpsSpeed                     *string    `json:"GPS_speed"`
	Assignee                     *string    `json:"assignee"`
	BusinessScope                *int       `json:"business_scope"`
	Coordinate                   *string    `json:"coordinate"`
	CreatedAt                    *time.Time `json:"created_at"`
	CreatedBy                    *string    `json:"created_by"`
	Curve                        *int       `json:"curve"`
	DeletedAt                    *time.Time `json:"deleted_at"`
	DeletedBy                    *string    `json:"deleted_by"`
	DisposalMeasures             *string    `json:"disposal_measures"`
	DisposalMeasures1            *string    `json:"disposal_measures1"`
	DisposalMeasures2            *string    `json:"disposal_measures2"`
	DisposalMeasures3            *string    `json:"disposal_measures3"`
	DisposalMeasures4            *string    `json:"disposal_measures4"`
	DisposalMeasures5            *string    `json:"disposal_measures5"`
	DisposalMeasures6            *string    `json:"disposal_measures6"`
	DisposalMeasures7            *string    `json:"disposal_measures7"`
	DisposalResults              *string    `json:"disposal_results"`
	DisposalResults1             *string    `json:"disposal_results1"`
	DisposalResults2             *string    `json:"disposal_results2"`
	DisposalResults3             *string    `json:"disposal_results3"`
	DisposalResults4             *string    `json:"disposal_results4"`
	DisposalResults5             *string    `json:"disposal_results5"`
	DisposalResults6             *string    `json:"disposal_results6"`
	DisposalResults7             *string    `json:"disposal_results7"`
	DriverID                     *string    `json:"driver_id"`
	EnterpriseID                 *string    `json:"enterprise_id"`
	Equipment                    *int       `json:"equipment"`
	FatigueAlarmTime             *time.Time `json:"fatigue_alarm_time"`
	FeedbackTime                 *time.Time `json:"feedback_time"`
	ID                           *int64     `json:"id"`
	IsDelete                     *bool      `json:"is_delete"`
	IsFatigueDriving             *bool      `json:"is_fatigue_driving"`
	IsLocate                     *bool      `json:"is_locate"`
	IsMorningOutage              *bool      `json:"is_morning_outage"`
	IsOnline                     *bool      `json:"is_online"`
	IsSend                       *bool      `json:"is_send"`
	IsSpeeding                   *bool      `json:"is_speeding"`
	IsTachographRecordNormal     *bool      `json:"is_tachograph_record_normal"`
	LatitudeLongitudeDescription *string    `json:"latitude_longitude_description"`
	LensOn                       *string    `json:"lens_on"`
	LensPosition                 *int       `json:"lens_position"`
	MonitorEndTime               *time.Time `json:"monitor_end_time"`
	MonitoringLocation           *string    `json:"monitoring_location"`
	MonitoringTime               *time.Time `json:"monitoring_time"`
	OtherInfraction              *string    `json:"other_infraction"`
	Others                       *string    `json:"others"`
	OutageAlarmTime              *time.Time `json:"outage_alarm_time"`
	Remarks                      *string    `json:"remarks"`
	SpeedAlarmTime               *time.Time `json:"speed_alarm_time"`
	SpeedingSpeed                *string    `json:"speeding_speed"`
	SupervisionDetailID          *string    `json:"supervision_detail_id"`
	SupervisionID                *string    `json:"supervision_id"`
	TachographDataException      *string    `json:"tachograph_data_exception"`
	TachographSpeed              *string    `json:"tachograph_speed"`
	TaxiState                    *int       `json:"taxi_state"`
	Trail                        *int       `json:"trail"`
	TreatmentTime                *time.Time `json:"treatment_time"`
	UpdatedAt                    *time.Time `json:"updated_at"`
	UpdatedBy                    *string    `json:"updated_by"`
	VehicleID                    *string    `json:"vehicle_id"`
}

// aggregate stddev on columns
type DynamicSupervisionDetailStddevFields struct {
	BusinessScope *float64 `json:"business_scope"`
	Curve         *float64 `json:"curve"`
	Equipment     *float64 `json:"equipment"`
	ID            *float64 `json:"id"`
	LensPosition  *float64 `json:"lens_position"`
	TaxiState     *float64 `json:"taxi_state"`
	Trail         *float64 `json:"trail"`
}

// order by stddev() on columns of table "dynamic_supervision_detail"
type DynamicSupervisionDetailStddevOrderBy struct {
	BusinessScope *model.OrderBy `json:"business_scope"`
	Curve         *model.OrderBy `json:"curve"`
	Equipment     *model.OrderBy `json:"equipment"`
	ID            *model.OrderBy `json:"id"`
	LensPosition  *model.OrderBy `json:"lens_position"`
	TaxiState     *model.OrderBy `json:"taxi_state"`
	Trail         *model.OrderBy `json:"trail"`
}

// aggregate stddev_pop on columns
type DynamicSupervisionDetailStddevPopFields struct {
	BusinessScope *float64 `json:"business_scope"`
	Curve         *float64 `json:"curve"`
	Equipment     *float64 `json:"equipment"`
	ID            *float64 `json:"id"`
	LensPosition  *float64 `json:"lens_position"`
	TaxiState     *float64 `json:"taxi_state"`
	Trail         *float64 `json:"trail"`
}

// order by stddev_pop() on columns of table "dynamic_supervision_detail"
type DynamicSupervisionDetailStddevPopOrderBy struct {
	BusinessScope *model.OrderBy `json:"business_scope"`
	Curve         *model.OrderBy `json:"curve"`
	Equipment     *model.OrderBy `json:"equipment"`
	ID            *model.OrderBy `json:"id"`
	LensPosition  *model.OrderBy `json:"lens_position"`
	TaxiState     *model.OrderBy `json:"taxi_state"`
	Trail         *model.OrderBy `json:"trail"`
}

// aggregate stddev_samp on columns
type DynamicSupervisionDetailStddevSampFields struct {
	BusinessScope *float64 `json:"business_scope"`
	Curve         *float64 `json:"curve"`
	Equipment     *float64 `json:"equipment"`
	ID            *float64 `json:"id"`
	LensPosition  *float64 `json:"lens_position"`
	TaxiState     *float64 `json:"taxi_state"`
	Trail         *float64 `json:"trail"`
}

// order by stddev_samp() on columns of table "dynamic_supervision_detail"
type DynamicSupervisionDetailStddevSampOrderBy struct {
	BusinessScope *model.OrderBy `json:"business_scope"`
	Curve         *model.OrderBy `json:"curve"`
	Equipment     *model.OrderBy `json:"equipment"`
	ID            *model.OrderBy `json:"id"`
	LensPosition  *model.OrderBy `json:"lens_position"`
	TaxiState     *model.OrderBy `json:"taxi_state"`
	Trail         *model.OrderBy `json:"trail"`
}

// aggregate sum on columns
type DynamicSupervisionDetailSumFields struct {
	BusinessScope *int   `json:"business_scope"`
	Curve         *int   `json:"curve"`
	Equipment     *int   `json:"equipment"`
	ID            *int64 `json:"id"`
	LensPosition  *int   `json:"lens_position"`
	TaxiState     *int   `json:"taxi_state"`
	Trail         *int   `json:"trail"`
}

// order by sum() on columns of table "dynamic_supervision_detail"
type DynamicSupervisionDetailSumOrderBy struct {
	BusinessScope *model.OrderBy `json:"business_scope"`
	Curve         *model.OrderBy `json:"curve"`
	Equipment     *model.OrderBy `json:"equipment"`
	ID            *model.OrderBy `json:"id"`
	LensPosition  *model.OrderBy `json:"lens_position"`
	TaxiState     *model.OrderBy `json:"taxi_state"`
	Trail         *model.OrderBy `json:"trail"`
}

// aggregate var_pop on columns
type DynamicSupervisionDetailVarPopFields struct {
	BusinessScope *float64 `json:"business_scope"`
	Curve         *float64 `json:"curve"`
	Equipment     *float64 `json:"equipment"`
	ID            *float64 `json:"id"`
	LensPosition  *float64 `json:"lens_position"`
	TaxiState     *float64 `json:"taxi_state"`
	Trail         *float64 `json:"trail"`
}

// order by var_pop() on columns of table "dynamic_supervision_detail"
type DynamicSupervisionDetailVarPopOrderBy struct {
	BusinessScope *model.OrderBy `json:"business_scope"`
	Curve         *model.OrderBy `json:"curve"`
	Equipment     *model.OrderBy `json:"equipment"`
	ID            *model.OrderBy `json:"id"`
	LensPosition  *model.OrderBy `json:"lens_position"`
	TaxiState     *model.OrderBy `json:"taxi_state"`
	Trail         *model.OrderBy `json:"trail"`
}

// aggregate var_samp on columns
type DynamicSupervisionDetailVarSampFields struct {
	BusinessScope *float64 `json:"business_scope"`
	Curve         *float64 `json:"curve"`
	Equipment     *float64 `json:"equipment"`
	ID            *float64 `json:"id"`
	LensPosition  *float64 `json:"lens_position"`
	TaxiState     *float64 `json:"taxi_state"`
	Trail         *float64 `json:"trail"`
}

// order by var_samp() on columns of table "dynamic_supervision_detail"
type DynamicSupervisionDetailVarSampOrderBy struct {
	BusinessScope *model.OrderBy `json:"business_scope"`
	Curve         *model.OrderBy `json:"curve"`
	Equipment     *model.OrderBy `json:"equipment"`
	ID            *model.OrderBy `json:"id"`
	LensPosition  *model.OrderBy `json:"lens_position"`
	TaxiState     *model.OrderBy `json:"taxi_state"`
	Trail         *model.OrderBy `json:"trail"`
}

// aggregate variance on columns
type DynamicSupervisionDetailVarianceFields struct {
	BusinessScope *float64 `json:"business_scope"`
	Curve         *float64 `json:"curve"`
	Equipment     *float64 `json:"equipment"`
	ID            *float64 `json:"id"`
	LensPosition  *float64 `json:"lens_position"`
	TaxiState     *float64 `json:"taxi_state"`
	Trail         *float64 `json:"trail"`
}

// order by variance() on columns of table "dynamic_supervision_detail"
type DynamicSupervisionDetailVarianceOrderBy struct {
	BusinessScope *model.OrderBy `json:"business_scope"`
	Curve         *model.OrderBy `json:"curve"`
	Equipment     *model.OrderBy `json:"equipment"`
	ID            *model.OrderBy `json:"id"`
	LensPosition  *model.OrderBy `json:"lens_position"`
	TaxiState     *model.OrderBy `json:"taxi_state"`
	Trail         *model.OrderBy `json:"trail"`
}

// input type for incrementing integer column in table "dynamic_supervision"
type DynamicSupervisionIncInput struct {
	Day                  *int     `json:"day"`
	ID                   *int64   `json:"id"`
	Month                *int     `json:"month"`
	SpotCheckNumber      *int     `json:"spot_check_number"`
	SpotCheckRatio       *float64 `json:"spot_check_ratio"`
	SpotCheckTotalNumber *int     `json:"spot_check_total_number"`
	TotalNumberVehicle   *int     `json:"total_number_vehicle"`
	Year                 *int     `json:"year"`
}

// input type for inserting data into table "dynamic_supervision"
type DynamicSupervisionInsertInput struct {
	CheckUserID          *string    `json:"check_user_id"`
	CityID               *string    `json:"city_id"`
	CreatedAt            *time.Time `json:"created_at"`
	CreatedBy            *string    `json:"created_by"`
	Day                  *int       `json:"day"`
	DeletedAt            *time.Time `json:"deleted_at"`
	DeletedBy            *string    `json:"deleted_by"`
	DistrictID           *string    `json:"district_id"`
	ID                   *int64     `json:"id"`
	IsDelete             *bool      `json:"is_delete"`
	Month                *int       `json:"month"`
	ProvinceID           *string    `json:"province_id"`
	SpotCheckDate        *time.Time `json:"spot_check_date"`
	SpotCheckNumber      *int       `json:"spot_check_number"`
	SpotCheckRatio       *float64   `json:"spot_check_ratio"`
	SpotCheckTotalNumber *int       `json:"spot_check_total_number"`
	SupervisionID        *string    `json:"supervision_id"`
	TotalNumberVehicle   *int       `json:"total_number_vehicle"`
	UpdatedAt            *time.Time `json:"updated_at"`
	UpdatedBy            *string    `json:"updated_by"`
	Year                 *int       `json:"year"`
}

// aggregate max on columns
type DynamicSupervisionMaxFields struct {
	CheckUserID          *string    `json:"check_user_id"`
	CityID               *string    `json:"city_id"`
	CreatedAt            *time.Time `json:"created_at"`
	CreatedBy            *string    `json:"created_by"`
	Day                  *int       `json:"day"`
	DeletedAt            *time.Time `json:"deleted_at"`
	DeletedBy            *string    `json:"deleted_by"`
	DistrictID           *string    `json:"district_id"`
	ID                   *int64     `json:"id"`
	Month                *int       `json:"month"`
	ProvinceID           *string    `json:"province_id"`
	SpotCheckDate        *time.Time `json:"spot_check_date"`
	SpotCheckNumber      *int       `json:"spot_check_number"`
	SpotCheckRatio       *float64   `json:"spot_check_ratio"`
	SpotCheckTotalNumber *int       `json:"spot_check_total_number"`
	SupervisionID        *string    `json:"supervision_id"`
	TotalNumberVehicle   *int       `json:"total_number_vehicle"`
	UpdatedAt            *time.Time `json:"updated_at"`
	UpdatedBy            *string    `json:"updated_by"`
	Year                 *int       `json:"year"`
}

// order by max() on columns of table "dynamic_supervision"
type DynamicSupervisionMaxOrderBy struct {
	CheckUserID          *model.OrderBy `json:"check_user_id"`
	CityID               *model.OrderBy `json:"city_id"`
	CreatedAt            *model.OrderBy `json:"created_at"`
	CreatedBy            *model.OrderBy `json:"created_by"`
	Day                  *model.OrderBy `json:"day"`
	DeletedAt            *model.OrderBy `json:"deleted_at"`
	DeletedBy            *model.OrderBy `json:"deleted_by"`
	DistrictID           *model.OrderBy `json:"district_id"`
	ID                   *model.OrderBy `json:"id"`
	Month                *model.OrderBy `json:"month"`
	ProvinceID           *model.OrderBy `json:"province_id"`
	SpotCheckDate        *model.OrderBy `json:"spot_check_date"`
	SpotCheckNumber      *model.OrderBy `json:"spot_check_number"`
	SpotCheckRatio       *model.OrderBy `json:"spot_check_ratio"`
	SpotCheckTotalNumber *model.OrderBy `json:"spot_check_total_number"`
	SupervisionID        *model.OrderBy `json:"supervision_id"`
	TotalNumberVehicle   *model.OrderBy `json:"total_number_vehicle"`
	UpdatedAt            *model.OrderBy `json:"updated_at"`
	UpdatedBy            *model.OrderBy `json:"updated_by"`
	Year                 *model.OrderBy `json:"year"`
}

// aggregate min on columns
type DynamicSupervisionMinFields struct {
	CheckUserID          *string    `json:"check_user_id"`
	CityID               *string    `json:"city_id"`
	CreatedAt            *time.Time `json:"created_at"`
	CreatedBy            *string    `json:"created_by"`
	Day                  *int       `json:"day"`
	DeletedAt            *time.Time `json:"deleted_at"`
	DeletedBy            *string    `json:"deleted_by"`
	DistrictID           *string    `json:"district_id"`
	ID                   *int64     `json:"id"`
	Month                *int       `json:"month"`
	ProvinceID           *string    `json:"province_id"`
	SpotCheckDate        *time.Time `json:"spot_check_date"`
	SpotCheckNumber      *int       `json:"spot_check_number"`
	SpotCheckRatio       *float64   `json:"spot_check_ratio"`
	SpotCheckTotalNumber *int       `json:"spot_check_total_number"`
	SupervisionID        *string    `json:"supervision_id"`
	TotalNumberVehicle   *int       `json:"total_number_vehicle"`
	UpdatedAt            *time.Time `json:"updated_at"`
	UpdatedBy            *string    `json:"updated_by"`
	Year                 *int       `json:"year"`
}

// order by min() on columns of table "dynamic_supervision"
type DynamicSupervisionMinOrderBy struct {
	CheckUserID          *model.OrderBy `json:"check_user_id"`
	CityID               *model.OrderBy `json:"city_id"`
	CreatedAt            *model.OrderBy `json:"created_at"`
	CreatedBy            *model.OrderBy `json:"created_by"`
	Day                  *model.OrderBy `json:"day"`
	DeletedAt            *model.OrderBy `json:"deleted_at"`
	DeletedBy            *model.OrderBy `json:"deleted_by"`
	DistrictID           *model.OrderBy `json:"district_id"`
	ID                   *model.OrderBy `json:"id"`
	Month                *model.OrderBy `json:"month"`
	ProvinceID           *model.OrderBy `json:"province_id"`
	SpotCheckDate        *model.OrderBy `json:"spot_check_date"`
	SpotCheckNumber      *model.OrderBy `json:"spot_check_number"`
	SpotCheckRatio       *model.OrderBy `json:"spot_check_ratio"`
	SpotCheckTotalNumber *model.OrderBy `json:"spot_check_total_number"`
	SupervisionID        *model.OrderBy `json:"supervision_id"`
	TotalNumberVehicle   *model.OrderBy `json:"total_number_vehicle"`
	UpdatedAt            *model.OrderBy `json:"updated_at"`
	UpdatedBy            *model.OrderBy `json:"updated_by"`
	Year                 *model.OrderBy `json:"year"`
}

// response of any mutation on the table "dynamic_supervision"
type DynamicSupervisionMutationResponse struct {
	// number of affected rows by the mutation
	AffectedRows int `json:"affected_rows"`
	// data of the affected rows by the mutation
	Returning []*DynamicSupervision `json:"returning"`
}

// input type for inserting object relation for remote table "dynamic_supervision"
type DynamicSupervisionObjRelInsertInput struct {
	Data       *DynamicSupervisionInsertInput `json:"data"`
	OnConflict *DynamicSupervisionOnConflict  `json:"on_conflict"`
}

// on conflict condition type for table "dynamic_supervision"
type DynamicSupervisionOnConflict struct {
	Constraint    DynamicSupervisionConstraint     `json:"constraint"`
	UpdateColumns []DynamicSupervisionUpdateColumn `json:"update_columns"`
	Where         *DynamicSupervisionBoolExp       `json:"where"`
}

// ordering options when selecting data from "dynamic_supervision"
type DynamicSupervisionOrderBy struct {
	CheckUserID          *model.OrderBy `json:"check_user_id"`
	CityID               *model.OrderBy `json:"city_id"`
	CreatedAt            *model.OrderBy `json:"created_at"`
	CreatedBy            *model.OrderBy `json:"created_by"`
	Day                  *model.OrderBy `json:"day"`
	DeletedAt            *model.OrderBy `json:"deleted_at"`
	DeletedBy            *model.OrderBy `json:"deleted_by"`
	DistrictID           *model.OrderBy `json:"district_id"`
	ID                   *model.OrderBy `json:"id"`
	IsDelete             *model.OrderBy `json:"is_delete"`
	Month                *model.OrderBy `json:"month"`
	ProvinceID           *model.OrderBy `json:"province_id"`
	SpotCheckDate        *model.OrderBy `json:"spot_check_date"`
	SpotCheckNumber      *model.OrderBy `json:"spot_check_number"`
	SpotCheckRatio       *model.OrderBy `json:"spot_check_ratio"`
	SpotCheckTotalNumber *model.OrderBy `json:"spot_check_total_number"`
	SupervisionID        *model.OrderBy `json:"supervision_id"`
	TotalNumberVehicle   *model.OrderBy `json:"total_number_vehicle"`
	UpdatedAt            *model.OrderBy `json:"updated_at"`
	UpdatedBy            *model.OrderBy `json:"updated_by"`
	Year                 *model.OrderBy `json:"year"`
}

// primary key columns input for table: "dynamic_supervision"
type DynamicSupervisionPkColumnsInput struct {
	// 主键
	ID int64 `json:"id"`
	// 联合主键
	SupervisionID string `json:"supervision_id"`
}

// input type for updating data in table "dynamic_supervision"
type DynamicSupervisionSetInput struct {
	CheckUserID          *string    `json:"check_user_id"`
	CityID               *string    `json:"city_id"`
	CreatedAt            *time.Time `json:"created_at"`
	CreatedBy            *string    `json:"created_by"`
	Day                  *int       `json:"day"`
	DeletedAt            *time.Time `json:"deleted_at"`
	DeletedBy            *string    `json:"deleted_by"`
	DistrictID           *string    `json:"district_id"`
	ID                   *int64     `json:"id"`
	IsDelete             *bool      `json:"is_delete"`
	Month                *int       `json:"month"`
	ProvinceID           *string    `json:"province_id"`
	SpotCheckDate        *time.Time `json:"spot_check_date"`
	SpotCheckNumber      *int       `json:"spot_check_number"`
	SpotCheckRatio       *float64   `json:"spot_check_ratio"`
	SpotCheckTotalNumber *int       `json:"spot_check_total_number"`
	SupervisionID        *string    `json:"supervision_id"`
	TotalNumberVehicle   *int       `json:"total_number_vehicle"`
	UpdatedAt            *time.Time `json:"updated_at"`
	UpdatedBy            *string    `json:"updated_by"`
	Year                 *int       `json:"year"`
}

// aggregate stddev on columns
type DynamicSupervisionStddevFields struct {
	Day                  *float64 `json:"day"`
	ID                   *float64 `json:"id"`
	Month                *float64 `json:"month"`
	SpotCheckNumber      *float64 `json:"spot_check_number"`
	SpotCheckRatio       *float64 `json:"spot_check_ratio"`
	SpotCheckTotalNumber *float64 `json:"spot_check_total_number"`
	TotalNumberVehicle   *float64 `json:"total_number_vehicle"`
	Year                 *float64 `json:"year"`
}

// order by stddev() on columns of table "dynamic_supervision"
type DynamicSupervisionStddevOrderBy struct {
	Day                  *model.OrderBy `json:"day"`
	ID                   *model.OrderBy `json:"id"`
	Month                *model.OrderBy `json:"month"`
	SpotCheckNumber      *model.OrderBy `json:"spot_check_number"`
	SpotCheckRatio       *model.OrderBy `json:"spot_check_ratio"`
	SpotCheckTotalNumber *model.OrderBy `json:"spot_check_total_number"`
	TotalNumberVehicle   *model.OrderBy `json:"total_number_vehicle"`
	Year                 *model.OrderBy `json:"year"`
}

// aggregate stddev_pop on columns
type DynamicSupervisionStddevPopFields struct {
	Day                  *float64 `json:"day"`
	ID                   *float64 `json:"id"`
	Month                *float64 `json:"month"`
	SpotCheckNumber      *float64 `json:"spot_check_number"`
	SpotCheckRatio       *float64 `json:"spot_check_ratio"`
	SpotCheckTotalNumber *float64 `json:"spot_check_total_number"`
	TotalNumberVehicle   *float64 `json:"total_number_vehicle"`
	Year                 *float64 `json:"year"`
}

// order by stddev_pop() on columns of table "dynamic_supervision"
type DynamicSupervisionStddevPopOrderBy struct {
	Day                  *model.OrderBy `json:"day"`
	ID                   *model.OrderBy `json:"id"`
	Month                *model.OrderBy `json:"month"`
	SpotCheckNumber      *model.OrderBy `json:"spot_check_number"`
	SpotCheckRatio       *model.OrderBy `json:"spot_check_ratio"`
	SpotCheckTotalNumber *model.OrderBy `json:"spot_check_total_number"`
	TotalNumberVehicle   *model.OrderBy `json:"total_number_vehicle"`
	Year                 *model.OrderBy `json:"year"`
}

// aggregate stddev_samp on columns
type DynamicSupervisionStddevSampFields struct {
	Day                  *float64 `json:"day"`
	ID                   *float64 `json:"id"`
	Month                *float64 `json:"month"`
	SpotCheckNumber      *float64 `json:"spot_check_number"`
	SpotCheckRatio       *float64 `json:"spot_check_ratio"`
	SpotCheckTotalNumber *float64 `json:"spot_check_total_number"`
	TotalNumberVehicle   *float64 `json:"total_number_vehicle"`
	Year                 *float64 `json:"year"`
}

// order by stddev_samp() on columns of table "dynamic_supervision"
type DynamicSupervisionStddevSampOrderBy struct {
	Day                  *model.OrderBy `json:"day"`
	ID                   *model.OrderBy `json:"id"`
	Month                *model.OrderBy `json:"month"`
	SpotCheckNumber      *model.OrderBy `json:"spot_check_number"`
	SpotCheckRatio       *model.OrderBy `json:"spot_check_ratio"`
	SpotCheckTotalNumber *model.OrderBy `json:"spot_check_total_number"`
	TotalNumberVehicle   *model.OrderBy `json:"total_number_vehicle"`
	Year                 *model.OrderBy `json:"year"`
}

// aggregate sum on columns
type DynamicSupervisionSumFields struct {
	Day                  *int     `json:"day"`
	ID                   *int64   `json:"id"`
	Month                *int     `json:"month"`
	SpotCheckNumber      *int     `json:"spot_check_number"`
	SpotCheckRatio       *float64 `json:"spot_check_ratio"`
	SpotCheckTotalNumber *int     `json:"spot_check_total_number"`
	TotalNumberVehicle   *int     `json:"total_number_vehicle"`
	Year                 *int     `json:"year"`
}

// order by sum() on columns of table "dynamic_supervision"
type DynamicSupervisionSumOrderBy struct {
	Day                  *model.OrderBy `json:"day"`
	ID                   *model.OrderBy `json:"id"`
	Month                *model.OrderBy `json:"month"`
	SpotCheckNumber      *model.OrderBy `json:"spot_check_number"`
	SpotCheckRatio       *model.OrderBy `json:"spot_check_ratio"`
	SpotCheckTotalNumber *model.OrderBy `json:"spot_check_total_number"`
	TotalNumberVehicle   *model.OrderBy `json:"total_number_vehicle"`
	Year                 *model.OrderBy `json:"year"`
}

// aggregate var_pop on columns
type DynamicSupervisionVarPopFields struct {
	Day                  *float64 `json:"day"`
	ID                   *float64 `json:"id"`
	Month                *float64 `json:"month"`
	SpotCheckNumber      *float64 `json:"spot_check_number"`
	SpotCheckRatio       *float64 `json:"spot_check_ratio"`
	SpotCheckTotalNumber *float64 `json:"spot_check_total_number"`
	TotalNumberVehicle   *float64 `json:"total_number_vehicle"`
	Year                 *float64 `json:"year"`
}

// order by var_pop() on columns of table "dynamic_supervision"
type DynamicSupervisionVarPopOrderBy struct {
	Day                  *model.OrderBy `json:"day"`
	ID                   *model.OrderBy `json:"id"`
	Month                *model.OrderBy `json:"month"`
	SpotCheckNumber      *model.OrderBy `json:"spot_check_number"`
	SpotCheckRatio       *model.OrderBy `json:"spot_check_ratio"`
	SpotCheckTotalNumber *model.OrderBy `json:"spot_check_total_number"`
	TotalNumberVehicle   *model.OrderBy `json:"total_number_vehicle"`
	Year                 *model.OrderBy `json:"year"`
}

// aggregate var_samp on columns
type DynamicSupervisionVarSampFields struct {
	Day                  *float64 `json:"day"`
	ID                   *float64 `json:"id"`
	Month                *float64 `json:"month"`
	SpotCheckNumber      *float64 `json:"spot_check_number"`
	SpotCheckRatio       *float64 `json:"spot_check_ratio"`
	SpotCheckTotalNumber *float64 `json:"spot_check_total_number"`
	TotalNumberVehicle   *float64 `json:"total_number_vehicle"`
	Year                 *float64 `json:"year"`
}

// order by var_samp() on columns of table "dynamic_supervision"
type DynamicSupervisionVarSampOrderBy struct {
	Day                  *model.OrderBy `json:"day"`
	ID                   *model.OrderBy `json:"id"`
	Month                *model.OrderBy `json:"month"`
	SpotCheckNumber      *model.OrderBy `json:"spot_check_number"`
	SpotCheckRatio       *model.OrderBy `json:"spot_check_ratio"`
	SpotCheckTotalNumber *model.OrderBy `json:"spot_check_total_number"`
	TotalNumberVehicle   *model.OrderBy `json:"total_number_vehicle"`
	Year                 *model.OrderBy `json:"year"`
}

// aggregate variance on columns
type DynamicSupervisionVarianceFields struct {
	Day                  *float64 `json:"day"`
	ID                   *float64 `json:"id"`
	Month                *float64 `json:"month"`
	SpotCheckNumber      *float64 `json:"spot_check_number"`
	SpotCheckRatio       *float64 `json:"spot_check_ratio"`
	SpotCheckTotalNumber *float64 `json:"spot_check_total_number"`
	TotalNumberVehicle   *float64 `json:"total_number_vehicle"`
	Year                 *float64 `json:"year"`
}

// order by variance() on columns of table "dynamic_supervision"
type DynamicSupervisionVarianceOrderBy struct {
	Day                  *model.OrderBy `json:"day"`
	ID                   *model.OrderBy `json:"id"`
	Month                *model.OrderBy `json:"month"`
	SpotCheckNumber      *model.OrderBy `json:"spot_check_number"`
	SpotCheckRatio       *model.OrderBy `json:"spot_check_ratio"`
	SpotCheckTotalNumber *model.OrderBy `json:"spot_check_total_number"`
	TotalNumberVehicle   *model.OrderBy `json:"total_number_vehicle"`
	Year                 *model.OrderBy `json:"year"`
}

// unique or primary key constraints on table "dynamic_spot_check_disposal"
type DynamicSpotCheckDisposalConstraint string

const (
	// unique or primary key constraint
	DynamicSpotCheckDisposalConstraintDynamicSpotCheckDisposalPkey DynamicSpotCheckDisposalConstraint = "dynamic_spot_check_disposal_pkey"
)

var AllDynamicSpotCheckDisposalConstraint = []DynamicSpotCheckDisposalConstraint{
	DynamicSpotCheckDisposalConstraintDynamicSpotCheckDisposalPkey,
}

func (e DynamicSpotCheckDisposalConstraint) IsValid() bool {
	switch e {
	case DynamicSpotCheckDisposalConstraintDynamicSpotCheckDisposalPkey:
		return true
	}
	return false
}

func (e DynamicSpotCheckDisposalConstraint) String() string {
	return string(e)
}

func (e *DynamicSpotCheckDisposalConstraint) UnmarshalGQL(v interface{}) error {
	str, ok := v.(string)
	if !ok {
		return fmt.Errorf("enums must be strings")
	}

	*e = DynamicSpotCheckDisposalConstraint(str)
	if !e.IsValid() {
		return fmt.Errorf("%s is not a valid dynamic_spot_check_disposal_constraint", str)
	}
	return nil
}

func (e DynamicSpotCheckDisposalConstraint) MarshalGQL(w io.Writer) {
	fmt.Fprint(w, strconv.Quote(e.String()))
}

// select columns of table "dynamic_spot_check_disposal"
type DynamicSpotCheckDisposalSelectColumn string

const (
	// column name
	DynamicSpotCheckDisposalSelectColumnAnnounceContent DynamicSpotCheckDisposalSelectColumn = "announce_content"
	// column name
	DynamicSpotCheckDisposalSelectColumnAppPushContent DynamicSpotCheckDisposalSelectColumn = "app_push_content"
	// column name
	DynamicSpotCheckDisposalSelectColumnCreatedAt DynamicSpotCheckDisposalSelectColumn = "created_at"
	// column name
	DynamicSpotCheckDisposalSelectColumnCreatedBy DynamicSpotCheckDisposalSelectColumn = "created_by"
	// column name
	DynamicSpotCheckDisposalSelectColumnDeletedAt DynamicSpotCheckDisposalSelectColumn = "deleted_at"
	// column name
	DynamicSpotCheckDisposalSelectColumnDeletedBy DynamicSpotCheckDisposalSelectColumn = "deleted_by"
	// column name
	DynamicSpotCheckDisposalSelectColumnDisposalContent DynamicSpotCheckDisposalSelectColumn = "disposal_content"
	// column name
	DynamicSpotCheckDisposalSelectColumnDisposalMethod DynamicSpotCheckDisposalSelectColumn = "disposal_method"
	// column name
	DynamicSpotCheckDisposalSelectColumnDisposalResult DynamicSpotCheckDisposalSelectColumn = "disposal_result"
	// column name
	DynamicSpotCheckDisposalSelectColumnEnterpriseID DynamicSpotCheckDisposalSelectColumn = "enterprise_id"
	// column name
	DynamicSpotCheckDisposalSelectColumnFeedbackTime DynamicSpotCheckDisposalSelectColumn = "feedback_time"
	// column name
	DynamicSpotCheckDisposalSelectColumnID DynamicSpotCheckDisposalSelectColumn = "id"
	// column name
	DynamicSpotCheckDisposalSelectColumnImageAbnormalHandingMeasure DynamicSpotCheckDisposalSelectColumn = "image_abnormal_handing_measure"
	// column name
	DynamicSpotCheckDisposalSelectColumnIsAnnounce DynamicSpotCheckDisposalSelectColumn = "is_announce"
	// column name
	DynamicSpotCheckDisposalSelectColumnIsAppPush DynamicSpotCheckDisposalSelectColumn = "is_app_push"
	// column name
	DynamicSpotCheckDisposalSelectColumnIsDelete DynamicSpotCheckDisposalSelectColumn = "is_delete"
	// column name
	DynamicSpotCheckDisposalSelectColumnIsNotify DynamicSpotCheckDisposalSelectColumn = "is_notify"
	// column name
	DynamicSpotCheckDisposalSelectColumnIsSmsPush DynamicSpotCheckDisposalSelectColumn = "is_sms_push"
	// column name
	DynamicSpotCheckDisposalSelectColumnNotifyContent DynamicSpotCheckDisposalSelectColumn = "notify_content"
	// column name
	DynamicSpotCheckDisposalSelectColumnOperationUser DynamicSpotCheckDisposalSelectColumn = "operation_user"
	// column name
	DynamicSpotCheckDisposalSelectColumnSendTime DynamicSpotCheckDisposalSelectColumn = "send_time"
	// column name
	DynamicSpotCheckDisposalSelectColumnSupervisionDetailID DynamicSpotCheckDisposalSelectColumn = "supervision_detail_id"
	// column name
	DynamicSpotCheckDisposalSelectColumnTachographDataDisposalMeasure DynamicSpotCheckDisposalSelectColumn = "tachograph_data_disposal_measure"
	// column name
	DynamicSpotCheckDisposalSelectColumnTelephone DynamicSpotCheckDisposalSelectColumn = "telephone"
	// column name
	DynamicSpotCheckDisposalSelectColumnUpdatedAt DynamicSpotCheckDisposalSelectColumn = "updated_at"
	// column name
	DynamicSpotCheckDisposalSelectColumnUpdatedBy DynamicSpotCheckDisposalSelectColumn = "updated_by"
	// column name
	DynamicSpotCheckDisposalSelectColumnVehicleID DynamicSpotCheckDisposalSelectColumn = "vehicle_id"
)

var AllDynamicSpotCheckDisposalSelectColumn = []DynamicSpotCheckDisposalSelectColumn{
	DynamicSpotCheckDisposalSelectColumnAnnounceContent,
	DynamicSpotCheckDisposalSelectColumnAppPushContent,
	DynamicSpotCheckDisposalSelectColumnCreatedAt,
	DynamicSpotCheckDisposalSelectColumnCreatedBy,
	DynamicSpotCheckDisposalSelectColumnDeletedAt,
	DynamicSpotCheckDisposalSelectColumnDeletedBy,
	DynamicSpotCheckDisposalSelectColumnDisposalContent,
	DynamicSpotCheckDisposalSelectColumnDisposalMethod,
	DynamicSpotCheckDisposalSelectColumnDisposalResult,
	DynamicSpotCheckDisposalSelectColumnEnterpriseID,
	DynamicSpotCheckDisposalSelectColumnFeedbackTime,
	DynamicSpotCheckDisposalSelectColumnID,
	DynamicSpotCheckDisposalSelectColumnImageAbnormalHandingMeasure,
	DynamicSpotCheckDisposalSelectColumnIsAnnounce,
	DynamicSpotCheckDisposalSelectColumnIsAppPush,
	DynamicSpotCheckDisposalSelectColumnIsDelete,
	DynamicSpotCheckDisposalSelectColumnIsNotify,
	DynamicSpotCheckDisposalSelectColumnIsSmsPush,
	DynamicSpotCheckDisposalSelectColumnNotifyContent,
	DynamicSpotCheckDisposalSelectColumnOperationUser,
	DynamicSpotCheckDisposalSelectColumnSendTime,
	DynamicSpotCheckDisposalSelectColumnSupervisionDetailID,
	DynamicSpotCheckDisposalSelectColumnTachographDataDisposalMeasure,
	DynamicSpotCheckDisposalSelectColumnTelephone,
	DynamicSpotCheckDisposalSelectColumnUpdatedAt,
	DynamicSpotCheckDisposalSelectColumnUpdatedBy,
	DynamicSpotCheckDisposalSelectColumnVehicleID,
}

func (e DynamicSpotCheckDisposalSelectColumn) IsValid() bool {
	switch e {
	case DynamicSpotCheckDisposalSelectColumnAnnounceContent, DynamicSpotCheckDisposalSelectColumnAppPushContent, DynamicSpotCheckDisposalSelectColumnCreatedAt, DynamicSpotCheckDisposalSelectColumnCreatedBy, DynamicSpotCheckDisposalSelectColumnDeletedAt, DynamicSpotCheckDisposalSelectColumnDeletedBy, DynamicSpotCheckDisposalSelectColumnDisposalContent, DynamicSpotCheckDisposalSelectColumnDisposalMethod, DynamicSpotCheckDisposalSelectColumnDisposalResult, DynamicSpotCheckDisposalSelectColumnEnterpriseID, DynamicSpotCheckDisposalSelectColumnFeedbackTime, DynamicSpotCheckDisposalSelectColumnID, DynamicSpotCheckDisposalSelectColumnImageAbnormalHandingMeasure, DynamicSpotCheckDisposalSelectColumnIsAnnounce, DynamicSpotCheckDisposalSelectColumnIsAppPush, DynamicSpotCheckDisposalSelectColumnIsDelete, DynamicSpotCheckDisposalSelectColumnIsNotify, DynamicSpotCheckDisposalSelectColumnIsSmsPush, DynamicSpotCheckDisposalSelectColumnNotifyContent, DynamicSpotCheckDisposalSelectColumnOperationUser, DynamicSpotCheckDisposalSelectColumnSendTime, DynamicSpotCheckDisposalSelectColumnSupervisionDetailID, DynamicSpotCheckDisposalSelectColumnTachographDataDisposalMeasure, DynamicSpotCheckDisposalSelectColumnTelephone, DynamicSpotCheckDisposalSelectColumnUpdatedAt, DynamicSpotCheckDisposalSelectColumnUpdatedBy, DynamicSpotCheckDisposalSelectColumnVehicleID:
		return true
	}
	return false
}

func (e DynamicSpotCheckDisposalSelectColumn) String() string {
	return string(e)
}

func (e *DynamicSpotCheckDisposalSelectColumn) UnmarshalGQL(v interface{}) error {
	str, ok := v.(string)
	if !ok {
		return fmt.Errorf("enums must be strings")
	}

	*e = DynamicSpotCheckDisposalSelectColumn(str)
	if !e.IsValid() {
		return fmt.Errorf("%s is not a valid dynamic_spot_check_disposal_select_column", str)
	}
	return nil
}

func (e DynamicSpotCheckDisposalSelectColumn) MarshalGQL(w io.Writer) {
	fmt.Fprint(w, strconv.Quote(e.String()))
}

// update columns of table "dynamic_spot_check_disposal"
type DynamicSpotCheckDisposalUpdateColumn string

const (
	// column name
	DynamicSpotCheckDisposalUpdateColumnAnnounceContent DynamicSpotCheckDisposalUpdateColumn = "announce_content"
	// column name
	DynamicSpotCheckDisposalUpdateColumnAppPushContent DynamicSpotCheckDisposalUpdateColumn = "app_push_content"
	// column name
	DynamicSpotCheckDisposalUpdateColumnCreatedAt DynamicSpotCheckDisposalUpdateColumn = "created_at"
	// column name
	DynamicSpotCheckDisposalUpdateColumnCreatedBy DynamicSpotCheckDisposalUpdateColumn = "created_by"
	// column name
	DynamicSpotCheckDisposalUpdateColumnDeletedAt DynamicSpotCheckDisposalUpdateColumn = "deleted_at"
	// column name
	DynamicSpotCheckDisposalUpdateColumnDeletedBy DynamicSpotCheckDisposalUpdateColumn = "deleted_by"
	// column name
	DynamicSpotCheckDisposalUpdateColumnDisposalContent DynamicSpotCheckDisposalUpdateColumn = "disposal_content"
	// column name
	DynamicSpotCheckDisposalUpdateColumnDisposalMethod DynamicSpotCheckDisposalUpdateColumn = "disposal_method"
	// column name
	DynamicSpotCheckDisposalUpdateColumnDisposalResult DynamicSpotCheckDisposalUpdateColumn = "disposal_result"
	// column name
	DynamicSpotCheckDisposalUpdateColumnEnterpriseID DynamicSpotCheckDisposalUpdateColumn = "enterprise_id"
	// column name
	DynamicSpotCheckDisposalUpdateColumnFeedbackTime DynamicSpotCheckDisposalUpdateColumn = "feedback_time"
	// column name
	DynamicSpotCheckDisposalUpdateColumnID DynamicSpotCheckDisposalUpdateColumn = "id"
	// column name
	DynamicSpotCheckDisposalUpdateColumnImageAbnormalHandingMeasure DynamicSpotCheckDisposalUpdateColumn = "image_abnormal_handing_measure"
	// column name
	DynamicSpotCheckDisposalUpdateColumnIsAnnounce DynamicSpotCheckDisposalUpdateColumn = "is_announce"
	// column name
	DynamicSpotCheckDisposalUpdateColumnIsAppPush DynamicSpotCheckDisposalUpdateColumn = "is_app_push"
	// column name
	DynamicSpotCheckDisposalUpdateColumnIsDelete DynamicSpotCheckDisposalUpdateColumn = "is_delete"
	// column name
	DynamicSpotCheckDisposalUpdateColumnIsNotify DynamicSpotCheckDisposalUpdateColumn = "is_notify"
	// column name
	DynamicSpotCheckDisposalUpdateColumnIsSmsPush DynamicSpotCheckDisposalUpdateColumn = "is_sms_push"
	// column name
	DynamicSpotCheckDisposalUpdateColumnNotifyContent DynamicSpotCheckDisposalUpdateColumn = "notify_content"
	// column name
	DynamicSpotCheckDisposalUpdateColumnOperationUser DynamicSpotCheckDisposalUpdateColumn = "operation_user"
	// column name
	DynamicSpotCheckDisposalUpdateColumnSendTime DynamicSpotCheckDisposalUpdateColumn = "send_time"
	// column name
	DynamicSpotCheckDisposalUpdateColumnSupervisionDetailID DynamicSpotCheckDisposalUpdateColumn = "supervision_detail_id"
	// column name
	DynamicSpotCheckDisposalUpdateColumnTachographDataDisposalMeasure DynamicSpotCheckDisposalUpdateColumn = "tachograph_data_disposal_measure"
	// column name
	DynamicSpotCheckDisposalUpdateColumnTelephone DynamicSpotCheckDisposalUpdateColumn = "telephone"
	// column name
	DynamicSpotCheckDisposalUpdateColumnUpdatedAt DynamicSpotCheckDisposalUpdateColumn = "updated_at"
	// column name
	DynamicSpotCheckDisposalUpdateColumnUpdatedBy DynamicSpotCheckDisposalUpdateColumn = "updated_by"
	// column name
	DynamicSpotCheckDisposalUpdateColumnVehicleID DynamicSpotCheckDisposalUpdateColumn = "vehicle_id"
)

var AllDynamicSpotCheckDisposalUpdateColumn = []DynamicSpotCheckDisposalUpdateColumn{
	DynamicSpotCheckDisposalUpdateColumnAnnounceContent,
	DynamicSpotCheckDisposalUpdateColumnAppPushContent,
	DynamicSpotCheckDisposalUpdateColumnCreatedAt,
	DynamicSpotCheckDisposalUpdateColumnCreatedBy,
	DynamicSpotCheckDisposalUpdateColumnDeletedAt,
	DynamicSpotCheckDisposalUpdateColumnDeletedBy,
	DynamicSpotCheckDisposalUpdateColumnDisposalContent,
	DynamicSpotCheckDisposalUpdateColumnDisposalMethod,
	DynamicSpotCheckDisposalUpdateColumnDisposalResult,
	DynamicSpotCheckDisposalUpdateColumnEnterpriseID,
	DynamicSpotCheckDisposalUpdateColumnFeedbackTime,
	DynamicSpotCheckDisposalUpdateColumnID,
	DynamicSpotCheckDisposalUpdateColumnImageAbnormalHandingMeasure,
	DynamicSpotCheckDisposalUpdateColumnIsAnnounce,
	DynamicSpotCheckDisposalUpdateColumnIsAppPush,
	DynamicSpotCheckDisposalUpdateColumnIsDelete,
	DynamicSpotCheckDisposalUpdateColumnIsNotify,
	DynamicSpotCheckDisposalUpdateColumnIsSmsPush,
	DynamicSpotCheckDisposalUpdateColumnNotifyContent,
	DynamicSpotCheckDisposalUpdateColumnOperationUser,
	DynamicSpotCheckDisposalUpdateColumnSendTime,
	DynamicSpotCheckDisposalUpdateColumnSupervisionDetailID,
	DynamicSpotCheckDisposalUpdateColumnTachographDataDisposalMeasure,
	DynamicSpotCheckDisposalUpdateColumnTelephone,
	DynamicSpotCheckDisposalUpdateColumnUpdatedAt,
	DynamicSpotCheckDisposalUpdateColumnUpdatedBy,
	DynamicSpotCheckDisposalUpdateColumnVehicleID,
}

func (e DynamicSpotCheckDisposalUpdateColumn) IsValid() bool {
	switch e {
	case DynamicSpotCheckDisposalUpdateColumnAnnounceContent, DynamicSpotCheckDisposalUpdateColumnAppPushContent, DynamicSpotCheckDisposalUpdateColumnCreatedAt, DynamicSpotCheckDisposalUpdateColumnCreatedBy, DynamicSpotCheckDisposalUpdateColumnDeletedAt, DynamicSpotCheckDisposalUpdateColumnDeletedBy, DynamicSpotCheckDisposalUpdateColumnDisposalContent, DynamicSpotCheckDisposalUpdateColumnDisposalMethod, DynamicSpotCheckDisposalUpdateColumnDisposalResult, DynamicSpotCheckDisposalUpdateColumnEnterpriseID, DynamicSpotCheckDisposalUpdateColumnFeedbackTime, DynamicSpotCheckDisposalUpdateColumnID, DynamicSpotCheckDisposalUpdateColumnImageAbnormalHandingMeasure, DynamicSpotCheckDisposalUpdateColumnIsAnnounce, DynamicSpotCheckDisposalUpdateColumnIsAppPush, DynamicSpotCheckDisposalUpdateColumnIsDelete, DynamicSpotCheckDisposalUpdateColumnIsNotify, DynamicSpotCheckDisposalUpdateColumnIsSmsPush, DynamicSpotCheckDisposalUpdateColumnNotifyContent, DynamicSpotCheckDisposalUpdateColumnOperationUser, DynamicSpotCheckDisposalUpdateColumnSendTime, DynamicSpotCheckDisposalUpdateColumnSupervisionDetailID, DynamicSpotCheckDisposalUpdateColumnTachographDataDisposalMeasure, DynamicSpotCheckDisposalUpdateColumnTelephone, DynamicSpotCheckDisposalUpdateColumnUpdatedAt, DynamicSpotCheckDisposalUpdateColumnUpdatedBy, DynamicSpotCheckDisposalUpdateColumnVehicleID:
		return true
	}
	return false
}

func (e DynamicSpotCheckDisposalUpdateColumn) String() string {
	return string(e)
}

func (e *DynamicSpotCheckDisposalUpdateColumn) UnmarshalGQL(v interface{}) error {
	str, ok := v.(string)
	if !ok {
		return fmt.Errorf("enums must be strings")
	}

	*e = DynamicSpotCheckDisposalUpdateColumn(str)
	if !e.IsValid() {
		return fmt.Errorf("%s is not a valid dynamic_spot_check_disposal_update_column", str)
	}
	return nil
}

func (e DynamicSpotCheckDisposalUpdateColumn) MarshalGQL(w io.Writer) {
	fmt.Fprint(w, strconv.Quote(e.String()))
}

// unique or primary key constraints on table "dynamic_supervision"
type DynamicSupervisionConstraint string

const (
	// unique or primary key constraint
	DynamicSupervisionConstraintDynamicSupervisionPkey DynamicSupervisionConstraint = "dynamic_supervision_pkey"
)

var AllDynamicSupervisionConstraint = []DynamicSupervisionConstraint{
	DynamicSupervisionConstraintDynamicSupervisionPkey,
}

func (e DynamicSupervisionConstraint) IsValid() bool {
	switch e {
	case DynamicSupervisionConstraintDynamicSupervisionPkey:
		return true
	}
	return false
}

func (e DynamicSupervisionConstraint) String() string {
	return string(e)
}

func (e *DynamicSupervisionConstraint) UnmarshalGQL(v interface{}) error {
	str, ok := v.(string)
	if !ok {
		return fmt.Errorf("enums must be strings")
	}

	*e = DynamicSupervisionConstraint(str)
	if !e.IsValid() {
		return fmt.Errorf("%s is not a valid dynamic_supervision_constraint", str)
	}
	return nil
}

func (e DynamicSupervisionConstraint) MarshalGQL(w io.Writer) {
	fmt.Fprint(w, strconv.Quote(e.String()))
}

// unique or primary key constraints on table "dynamic_supervision_detail"
type DynamicSupervisionDetailConstraint string

const (
	// unique or primary key constraint
	DynamicSupervisionDetailConstraintDynamicSupervisionDetailPkey DynamicSupervisionDetailConstraint = "dynamic_supervision_detail_pkey"
)

var AllDynamicSupervisionDetailConstraint = []DynamicSupervisionDetailConstraint{
	DynamicSupervisionDetailConstraintDynamicSupervisionDetailPkey,
}

func (e DynamicSupervisionDetailConstraint) IsValid() bool {
	switch e {
	case DynamicSupervisionDetailConstraintDynamicSupervisionDetailPkey:
		return true
	}
	return false
}

func (e DynamicSupervisionDetailConstraint) String() string {
	return string(e)
}

func (e *DynamicSupervisionDetailConstraint) UnmarshalGQL(v interface{}) error {
	str, ok := v.(string)
	if !ok {
		return fmt.Errorf("enums must be strings")
	}

	*e = DynamicSupervisionDetailConstraint(str)
	if !e.IsValid() {
		return fmt.Errorf("%s is not a valid dynamic_supervision_detail_constraint", str)
	}
	return nil
}

func (e DynamicSupervisionDetailConstraint) MarshalGQL(w io.Writer) {
	fmt.Fprint(w, strconv.Quote(e.String()))
}

// select columns of table "dynamic_supervision_detail"
type DynamicSupervisionDetailSelectColumn string

const (
	// column name
	DynamicSupervisionDetailSelectColumnGpsSpeed DynamicSupervisionDetailSelectColumn = "GPS_speed"
	// column name
	DynamicSupervisionDetailSelectColumnAssignee DynamicSupervisionDetailSelectColumn = "assignee"
	// column name
	DynamicSupervisionDetailSelectColumnBusinessScope DynamicSupervisionDetailSelectColumn = "business_scope"
	// column name
	DynamicSupervisionDetailSelectColumnCoordinate DynamicSupervisionDetailSelectColumn = "coordinate"
	// column name
	DynamicSupervisionDetailSelectColumnCreatedAt DynamicSupervisionDetailSelectColumn = "created_at"
	// column name
	DynamicSupervisionDetailSelectColumnCreatedBy DynamicSupervisionDetailSelectColumn = "created_by"
	// column name
	DynamicSupervisionDetailSelectColumnCurve DynamicSupervisionDetailSelectColumn = "curve"
	// column name
	DynamicSupervisionDetailSelectColumnDeletedAt DynamicSupervisionDetailSelectColumn = "deleted_at"
	// column name
	DynamicSupervisionDetailSelectColumnDeletedBy DynamicSupervisionDetailSelectColumn = "deleted_by"
	// column name
	DynamicSupervisionDetailSelectColumnDisposalMeasures DynamicSupervisionDetailSelectColumn = "disposal_measures"
	// column name
	DynamicSupervisionDetailSelectColumnDisposalMeasures1 DynamicSupervisionDetailSelectColumn = "disposal_measures1"
	// column name
	DynamicSupervisionDetailSelectColumnDisposalMeasures2 DynamicSupervisionDetailSelectColumn = "disposal_measures2"
	// column name
	DynamicSupervisionDetailSelectColumnDisposalMeasures3 DynamicSupervisionDetailSelectColumn = "disposal_measures3"
	// column name
	DynamicSupervisionDetailSelectColumnDisposalMeasures4 DynamicSupervisionDetailSelectColumn = "disposal_measures4"
	// column name
	DynamicSupervisionDetailSelectColumnDisposalMeasures5 DynamicSupervisionDetailSelectColumn = "disposal_measures5"
	// column name
	DynamicSupervisionDetailSelectColumnDisposalMeasures6 DynamicSupervisionDetailSelectColumn = "disposal_measures6"
	// column name
	DynamicSupervisionDetailSelectColumnDisposalMeasures7 DynamicSupervisionDetailSelectColumn = "disposal_measures7"
	// column name
	DynamicSupervisionDetailSelectColumnDisposalResults DynamicSupervisionDetailSelectColumn = "disposal_results"
	// column name
	DynamicSupervisionDetailSelectColumnDisposalResults1 DynamicSupervisionDetailSelectColumn = "disposal_results1"
	// column name
	DynamicSupervisionDetailSelectColumnDisposalResults2 DynamicSupervisionDetailSelectColumn = "disposal_results2"
	// column name
	DynamicSupervisionDetailSelectColumnDisposalResults3 DynamicSupervisionDetailSelectColumn = "disposal_results3"
	// column name
	DynamicSupervisionDetailSelectColumnDisposalResults4 DynamicSupervisionDetailSelectColumn = "disposal_results4"
	// column name
	DynamicSupervisionDetailSelectColumnDisposalResults5 DynamicSupervisionDetailSelectColumn = "disposal_results5"
	// column name
	DynamicSupervisionDetailSelectColumnDisposalResults6 DynamicSupervisionDetailSelectColumn = "disposal_results6"
	// column name
	DynamicSupervisionDetailSelectColumnDisposalResults7 DynamicSupervisionDetailSelectColumn = "disposal_results7"
	// column name
	DynamicSupervisionDetailSelectColumnDriverID DynamicSupervisionDetailSelectColumn = "driver_id"
	// column name
	DynamicSupervisionDetailSelectColumnEnterpriseID DynamicSupervisionDetailSelectColumn = "enterprise_id"
	// column name
	DynamicSupervisionDetailSelectColumnEquipment DynamicSupervisionDetailSelectColumn = "equipment"
	// column name
	DynamicSupervisionDetailSelectColumnFatigueAlarmTime DynamicSupervisionDetailSelectColumn = "fatigue_alarm_time"
	// column name
	DynamicSupervisionDetailSelectColumnFeedbackTime DynamicSupervisionDetailSelectColumn = "feedback_time"
	// column name
	DynamicSupervisionDetailSelectColumnID DynamicSupervisionDetailSelectColumn = "id"
	// column name
	DynamicSupervisionDetailSelectColumnIsDelete DynamicSupervisionDetailSelectColumn = "is_delete"
	// column name
	DynamicSupervisionDetailSelectColumnIsFatigueDriving DynamicSupervisionDetailSelectColumn = "is_fatigue_driving"
	// column name
	DynamicSupervisionDetailSelectColumnIsLocate DynamicSupervisionDetailSelectColumn = "is_locate"
	// column name
	DynamicSupervisionDetailSelectColumnIsMorningOutage DynamicSupervisionDetailSelectColumn = "is_morning_outage"
	// column name
	DynamicSupervisionDetailSelectColumnIsOnline DynamicSupervisionDetailSelectColumn = "is_online"
	// column name
	DynamicSupervisionDetailSelectColumnIsSend DynamicSupervisionDetailSelectColumn = "is_send"
	// column name
	DynamicSupervisionDetailSelectColumnIsSpeeding DynamicSupervisionDetailSelectColumn = "is_speeding"
	// column name
	DynamicSupervisionDetailSelectColumnIsTachographRecordNormal DynamicSupervisionDetailSelectColumn = "is_tachograph_record_normal"
	// column name
	DynamicSupervisionDetailSelectColumnLatitudeLongitudeDescription DynamicSupervisionDetailSelectColumn = "latitude_longitude_description"
	// column name
	DynamicSupervisionDetailSelectColumnLensOn DynamicSupervisionDetailSelectColumn = "lens_on"
	// column name
	DynamicSupervisionDetailSelectColumnLensPosition DynamicSupervisionDetailSelectColumn = "lens_position"
	// column name
	DynamicSupervisionDetailSelectColumnMonitorEndTime DynamicSupervisionDetailSelectColumn = "monitor_end_time"
	// column name
	DynamicSupervisionDetailSelectColumnMonitoringLocation DynamicSupervisionDetailSelectColumn = "monitoring_location"
	// column name
	DynamicSupervisionDetailSelectColumnMonitoringTime DynamicSupervisionDetailSelectColumn = "monitoring_time"
	// column name
	DynamicSupervisionDetailSelectColumnOtherInfraction DynamicSupervisionDetailSelectColumn = "other_infraction"
	// column name
	DynamicSupervisionDetailSelectColumnOthers DynamicSupervisionDetailSelectColumn = "others"
	// column name
	DynamicSupervisionDetailSelectColumnOutageAlarmTime DynamicSupervisionDetailSelectColumn = "outage_alarm_time"
	// column name
	DynamicSupervisionDetailSelectColumnRemarks DynamicSupervisionDetailSelectColumn = "remarks"
	// column name
	DynamicSupervisionDetailSelectColumnSpeedAlarmTime DynamicSupervisionDetailSelectColumn = "speed_alarm_time"
	// column name
	DynamicSupervisionDetailSelectColumnSpeedingSpeed DynamicSupervisionDetailSelectColumn = "speeding_speed"
	// column name
	DynamicSupervisionDetailSelectColumnSupervisionDetailID DynamicSupervisionDetailSelectColumn = "supervision_detail_id"
	// column name
	DynamicSupervisionDetailSelectColumnSupervisionID DynamicSupervisionDetailSelectColumn = "supervision_id"
	// column name
	DynamicSupervisionDetailSelectColumnTachographDataException DynamicSupervisionDetailSelectColumn = "tachograph_data_exception"
	// column name
	DynamicSupervisionDetailSelectColumnTachographSpeed DynamicSupervisionDetailSelectColumn = "tachograph_speed"
	// column name
	DynamicSupervisionDetailSelectColumnTaxiState DynamicSupervisionDetailSelectColumn = "taxi_state"
	// column name
	DynamicSupervisionDetailSelectColumnTrail DynamicSupervisionDetailSelectColumn = "trail"
	// column name
	DynamicSupervisionDetailSelectColumnTreatmentTime DynamicSupervisionDetailSelectColumn = "treatment_time"
	// column name
	DynamicSupervisionDetailSelectColumnUpdatedAt DynamicSupervisionDetailSelectColumn = "updated_at"
	// column name
	DynamicSupervisionDetailSelectColumnUpdatedBy DynamicSupervisionDetailSelectColumn = "updated_by"
	// column name
	DynamicSupervisionDetailSelectColumnVehicleID DynamicSupervisionDetailSelectColumn = "vehicle_id"
)

var AllDynamicSupervisionDetailSelectColumn = []DynamicSupervisionDetailSelectColumn{
	DynamicSupervisionDetailSelectColumnGpsSpeed,
	DynamicSupervisionDetailSelectColumnAssignee,
	DynamicSupervisionDetailSelectColumnBusinessScope,
	DynamicSupervisionDetailSelectColumnCoordinate,
	DynamicSupervisionDetailSelectColumnCreatedAt,
	DynamicSupervisionDetailSelectColumnCreatedBy,
	DynamicSupervisionDetailSelectColumnCurve,
	DynamicSupervisionDetailSelectColumnDeletedAt,
	DynamicSupervisionDetailSelectColumnDeletedBy,
	DynamicSupervisionDetailSelectColumnDisposalMeasures,
	DynamicSupervisionDetailSelectColumnDisposalMeasures1,
	DynamicSupervisionDetailSelectColumnDisposalMeasures2,
	DynamicSupervisionDetailSelectColumnDisposalMeasures3,
	DynamicSupervisionDetailSelectColumnDisposalMeasures4,
	DynamicSupervisionDetailSelectColumnDisposalMeasures5,
	DynamicSupervisionDetailSelectColumnDisposalMeasures6,
	DynamicSupervisionDetailSelectColumnDisposalMeasures7,
	DynamicSupervisionDetailSelectColumnDisposalResults,
	DynamicSupervisionDetailSelectColumnDisposalResults1,
	DynamicSupervisionDetailSelectColumnDisposalResults2,
	DynamicSupervisionDetailSelectColumnDisposalResults3,
	DynamicSupervisionDetailSelectColumnDisposalResults4,
	DynamicSupervisionDetailSelectColumnDisposalResults5,
	DynamicSupervisionDetailSelectColumnDisposalResults6,
	DynamicSupervisionDetailSelectColumnDisposalResults7,
	DynamicSupervisionDetailSelectColumnDriverID,
	DynamicSupervisionDetailSelectColumnEnterpriseID,
	DynamicSupervisionDetailSelectColumnEquipment,
	DynamicSupervisionDetailSelectColumnFatigueAlarmTime,
	DynamicSupervisionDetailSelectColumnFeedbackTime,
	DynamicSupervisionDetailSelectColumnID,
	DynamicSupervisionDetailSelectColumnIsDelete,
	DynamicSupervisionDetailSelectColumnIsFatigueDriving,
	DynamicSupervisionDetailSelectColumnIsLocate,
	DynamicSupervisionDetailSelectColumnIsMorningOutage,
	DynamicSupervisionDetailSelectColumnIsOnline,
	DynamicSupervisionDetailSelectColumnIsSend,
	DynamicSupervisionDetailSelectColumnIsSpeeding,
	DynamicSupervisionDetailSelectColumnIsTachographRecordNormal,
	DynamicSupervisionDetailSelectColumnLatitudeLongitudeDescription,
	DynamicSupervisionDetailSelectColumnLensOn,
	DynamicSupervisionDetailSelectColumnLensPosition,
	DynamicSupervisionDetailSelectColumnMonitorEndTime,
	DynamicSupervisionDetailSelectColumnMonitoringLocation,
	DynamicSupervisionDetailSelectColumnMonitoringTime,
	DynamicSupervisionDetailSelectColumnOtherInfraction,
	DynamicSupervisionDetailSelectColumnOthers,
	DynamicSupervisionDetailSelectColumnOutageAlarmTime,
	DynamicSupervisionDetailSelectColumnRemarks,
	DynamicSupervisionDetailSelectColumnSpeedAlarmTime,
	DynamicSupervisionDetailSelectColumnSpeedingSpeed,
	DynamicSupervisionDetailSelectColumnSupervisionDetailID,
	DynamicSupervisionDetailSelectColumnSupervisionID,
	DynamicSupervisionDetailSelectColumnTachographDataException,
	DynamicSupervisionDetailSelectColumnTachographSpeed,
	DynamicSupervisionDetailSelectColumnTaxiState,
	DynamicSupervisionDetailSelectColumnTrail,
	DynamicSupervisionDetailSelectColumnTreatmentTime,
	DynamicSupervisionDetailSelectColumnUpdatedAt,
	DynamicSupervisionDetailSelectColumnUpdatedBy,
	DynamicSupervisionDetailSelectColumnVehicleID,
}

func (e DynamicSupervisionDetailSelectColumn) IsValid() bool {
	switch e {
	case DynamicSupervisionDetailSelectColumnGpsSpeed, DynamicSupervisionDetailSelectColumnAssignee, DynamicSupervisionDetailSelectColumnBusinessScope, DynamicSupervisionDetailSelectColumnCoordinate, DynamicSupervisionDetailSelectColumnCreatedAt, DynamicSupervisionDetailSelectColumnCreatedBy, DynamicSupervisionDetailSelectColumnCurve, DynamicSupervisionDetailSelectColumnDeletedAt, DynamicSupervisionDetailSelectColumnDeletedBy, DynamicSupervisionDetailSelectColumnDisposalMeasures, DynamicSupervisionDetailSelectColumnDisposalMeasures1, DynamicSupervisionDetailSelectColumnDisposalMeasures2, DynamicSupervisionDetailSelectColumnDisposalMeasures3, DynamicSupervisionDetailSelectColumnDisposalMeasures4, DynamicSupervisionDetailSelectColumnDisposalMeasures5, DynamicSupervisionDetailSelectColumnDisposalMeasures6, DynamicSupervisionDetailSelectColumnDisposalMeasures7, DynamicSupervisionDetailSelectColumnDisposalResults, DynamicSupervisionDetailSelectColumnDisposalResults1, DynamicSupervisionDetailSelectColumnDisposalResults2, DynamicSupervisionDetailSelectColumnDisposalResults3, DynamicSupervisionDetailSelectColumnDisposalResults4, DynamicSupervisionDetailSelectColumnDisposalResults5, DynamicSupervisionDetailSelectColumnDisposalResults6, DynamicSupervisionDetailSelectColumnDisposalResults7, DynamicSupervisionDetailSelectColumnDriverID, DynamicSupervisionDetailSelectColumnEnterpriseID, DynamicSupervisionDetailSelectColumnEquipment, DynamicSupervisionDetailSelectColumnFatigueAlarmTime, DynamicSupervisionDetailSelectColumnFeedbackTime, DynamicSupervisionDetailSelectColumnID, DynamicSupervisionDetailSelectColumnIsDelete, DynamicSupervisionDetailSelectColumnIsFatigueDriving, DynamicSupervisionDetailSelectColumnIsLocate, DynamicSupervisionDetailSelectColumnIsMorningOutage, DynamicSupervisionDetailSelectColumnIsOnline, DynamicSupervisionDetailSelectColumnIsSend, DynamicSupervisionDetailSelectColumnIsSpeeding, DynamicSupervisionDetailSelectColumnIsTachographRecordNormal, DynamicSupervisionDetailSelectColumnLatitudeLongitudeDescription, DynamicSupervisionDetailSelectColumnLensOn, DynamicSupervisionDetailSelectColumnLensPosition, DynamicSupervisionDetailSelectColumnMonitorEndTime, DynamicSupervisionDetailSelectColumnMonitoringLocation, DynamicSupervisionDetailSelectColumnMonitoringTime, DynamicSupervisionDetailSelectColumnOtherInfraction, DynamicSupervisionDetailSelectColumnOthers, DynamicSupervisionDetailSelectColumnOutageAlarmTime, DynamicSupervisionDetailSelectColumnRemarks, DynamicSupervisionDetailSelectColumnSpeedAlarmTime, DynamicSupervisionDetailSelectColumnSpeedingSpeed, DynamicSupervisionDetailSelectColumnSupervisionDetailID, DynamicSupervisionDetailSelectColumnSupervisionID, DynamicSupervisionDetailSelectColumnTachographDataException, DynamicSupervisionDetailSelectColumnTachographSpeed, DynamicSupervisionDetailSelectColumnTaxiState, DynamicSupervisionDetailSelectColumnTrail, DynamicSupervisionDetailSelectColumnTreatmentTime, DynamicSupervisionDetailSelectColumnUpdatedAt, DynamicSupervisionDetailSelectColumnUpdatedBy, DynamicSupervisionDetailSelectColumnVehicleID:
		return true
	}
	return false
}

func (e DynamicSupervisionDetailSelectColumn) String() string {
	return string(e)
}

func (e *DynamicSupervisionDetailSelectColumn) UnmarshalGQL(v interface{}) error {
	str, ok := v.(string)
	if !ok {
		return fmt.Errorf("enums must be strings")
	}

	*e = DynamicSupervisionDetailSelectColumn(str)
	if !e.IsValid() {
		return fmt.Errorf("%s is not a valid dynamic_supervision_detail_select_column", str)
	}
	return nil
}

func (e DynamicSupervisionDetailSelectColumn) MarshalGQL(w io.Writer) {
	fmt.Fprint(w, strconv.Quote(e.String()))
}

// update columns of table "dynamic_supervision_detail"
type DynamicSupervisionDetailUpdateColumn string

const (
	// column name
	DynamicSupervisionDetailUpdateColumnGpsSpeed DynamicSupervisionDetailUpdateColumn = "GPS_speed"
	// column name
	DynamicSupervisionDetailUpdateColumnAssignee DynamicSupervisionDetailUpdateColumn = "assignee"
	// column name
	DynamicSupervisionDetailUpdateColumnBusinessScope DynamicSupervisionDetailUpdateColumn = "business_scope"
	// column name
	DynamicSupervisionDetailUpdateColumnCoordinate DynamicSupervisionDetailUpdateColumn = "coordinate"
	// column name
	DynamicSupervisionDetailUpdateColumnCreatedAt DynamicSupervisionDetailUpdateColumn = "created_at"
	// column name
	DynamicSupervisionDetailUpdateColumnCreatedBy DynamicSupervisionDetailUpdateColumn = "created_by"
	// column name
	DynamicSupervisionDetailUpdateColumnCurve DynamicSupervisionDetailUpdateColumn = "curve"
	// column name
	DynamicSupervisionDetailUpdateColumnDeletedAt DynamicSupervisionDetailUpdateColumn = "deleted_at"
	// column name
	DynamicSupervisionDetailUpdateColumnDeletedBy DynamicSupervisionDetailUpdateColumn = "deleted_by"
	// column name
	DynamicSupervisionDetailUpdateColumnDisposalMeasures DynamicSupervisionDetailUpdateColumn = "disposal_measures"
	// column name
	DynamicSupervisionDetailUpdateColumnDisposalMeasures1 DynamicSupervisionDetailUpdateColumn = "disposal_measures1"
	// column name
	DynamicSupervisionDetailUpdateColumnDisposalMeasures2 DynamicSupervisionDetailUpdateColumn = "disposal_measures2"
	// column name
	DynamicSupervisionDetailUpdateColumnDisposalMeasures3 DynamicSupervisionDetailUpdateColumn = "disposal_measures3"
	// column name
	DynamicSupervisionDetailUpdateColumnDisposalMeasures4 DynamicSupervisionDetailUpdateColumn = "disposal_measures4"
	// column name
	DynamicSupervisionDetailUpdateColumnDisposalMeasures5 DynamicSupervisionDetailUpdateColumn = "disposal_measures5"
	// column name
	DynamicSupervisionDetailUpdateColumnDisposalMeasures6 DynamicSupervisionDetailUpdateColumn = "disposal_measures6"
	// column name
	DynamicSupervisionDetailUpdateColumnDisposalMeasures7 DynamicSupervisionDetailUpdateColumn = "disposal_measures7"
	// column name
	DynamicSupervisionDetailUpdateColumnDisposalResults DynamicSupervisionDetailUpdateColumn = "disposal_results"
	// column name
	DynamicSupervisionDetailUpdateColumnDisposalResults1 DynamicSupervisionDetailUpdateColumn = "disposal_results1"
	// column name
	DynamicSupervisionDetailUpdateColumnDisposalResults2 DynamicSupervisionDetailUpdateColumn = "disposal_results2"
	// column name
	DynamicSupervisionDetailUpdateColumnDisposalResults3 DynamicSupervisionDetailUpdateColumn = "disposal_results3"
	// column name
	DynamicSupervisionDetailUpdateColumnDisposalResults4 DynamicSupervisionDetailUpdateColumn = "disposal_results4"
	// column name
	DynamicSupervisionDetailUpdateColumnDisposalResults5 DynamicSupervisionDetailUpdateColumn = "disposal_results5"
	// column name
	DynamicSupervisionDetailUpdateColumnDisposalResults6 DynamicSupervisionDetailUpdateColumn = "disposal_results6"
	// column name
	DynamicSupervisionDetailUpdateColumnDisposalResults7 DynamicSupervisionDetailUpdateColumn = "disposal_results7"
	// column name
	DynamicSupervisionDetailUpdateColumnDriverID DynamicSupervisionDetailUpdateColumn = "driver_id"
	// column name
	DynamicSupervisionDetailUpdateColumnEnterpriseID DynamicSupervisionDetailUpdateColumn = "enterprise_id"
	// column name
	DynamicSupervisionDetailUpdateColumnEquipment DynamicSupervisionDetailUpdateColumn = "equipment"
	// column name
	DynamicSupervisionDetailUpdateColumnFatigueAlarmTime DynamicSupervisionDetailUpdateColumn = "fatigue_alarm_time"
	// column name
	DynamicSupervisionDetailUpdateColumnFeedbackTime DynamicSupervisionDetailUpdateColumn = "feedback_time"
	// column name
	DynamicSupervisionDetailUpdateColumnID DynamicSupervisionDetailUpdateColumn = "id"
	// column name
	DynamicSupervisionDetailUpdateColumnIsDelete DynamicSupervisionDetailUpdateColumn = "is_delete"
	// column name
	DynamicSupervisionDetailUpdateColumnIsFatigueDriving DynamicSupervisionDetailUpdateColumn = "is_fatigue_driving"
	// column name
	DynamicSupervisionDetailUpdateColumnIsLocate DynamicSupervisionDetailUpdateColumn = "is_locate"
	// column name
	DynamicSupervisionDetailUpdateColumnIsMorningOutage DynamicSupervisionDetailUpdateColumn = "is_morning_outage"
	// column name
	DynamicSupervisionDetailUpdateColumnIsOnline DynamicSupervisionDetailUpdateColumn = "is_online"
	// column name
	DynamicSupervisionDetailUpdateColumnIsSend DynamicSupervisionDetailUpdateColumn = "is_send"
	// column name
	DynamicSupervisionDetailUpdateColumnIsSpeeding DynamicSupervisionDetailUpdateColumn = "is_speeding"
	// column name
	DynamicSupervisionDetailUpdateColumnIsTachographRecordNormal DynamicSupervisionDetailUpdateColumn = "is_tachograph_record_normal"
	// column name
	DynamicSupervisionDetailUpdateColumnLatitudeLongitudeDescription DynamicSupervisionDetailUpdateColumn = "latitude_longitude_description"
	// column name
	DynamicSupervisionDetailUpdateColumnLensOn DynamicSupervisionDetailUpdateColumn = "lens_on"
	// column name
	DynamicSupervisionDetailUpdateColumnLensPosition DynamicSupervisionDetailUpdateColumn = "lens_position"
	// column name
	DynamicSupervisionDetailUpdateColumnMonitorEndTime DynamicSupervisionDetailUpdateColumn = "monitor_end_time"
	// column name
	DynamicSupervisionDetailUpdateColumnMonitoringLocation DynamicSupervisionDetailUpdateColumn = "monitoring_location"
	// column name
	DynamicSupervisionDetailUpdateColumnMonitoringTime DynamicSupervisionDetailUpdateColumn = "monitoring_time"
	// column name
	DynamicSupervisionDetailUpdateColumnOtherInfraction DynamicSupervisionDetailUpdateColumn = "other_infraction"
	// column name
	DynamicSupervisionDetailUpdateColumnOthers DynamicSupervisionDetailUpdateColumn = "others"
	// column name
	DynamicSupervisionDetailUpdateColumnOutageAlarmTime DynamicSupervisionDetailUpdateColumn = "outage_alarm_time"
	// column name
	DynamicSupervisionDetailUpdateColumnRemarks DynamicSupervisionDetailUpdateColumn = "remarks"
	// column name
	DynamicSupervisionDetailUpdateColumnSpeedAlarmTime DynamicSupervisionDetailUpdateColumn = "speed_alarm_time"
	// column name
	DynamicSupervisionDetailUpdateColumnSpeedingSpeed DynamicSupervisionDetailUpdateColumn = "speeding_speed"
	// column name
	DynamicSupervisionDetailUpdateColumnSupervisionDetailID DynamicSupervisionDetailUpdateColumn = "supervision_detail_id"
	// column name
	DynamicSupervisionDetailUpdateColumnSupervisionID DynamicSupervisionDetailUpdateColumn = "supervision_id"
	// column name
	DynamicSupervisionDetailUpdateColumnTachographDataException DynamicSupervisionDetailUpdateColumn = "tachograph_data_exception"
	// column name
	DynamicSupervisionDetailUpdateColumnTachographSpeed DynamicSupervisionDetailUpdateColumn = "tachograph_speed"
	// column name
	DynamicSupervisionDetailUpdateColumnTaxiState DynamicSupervisionDetailUpdateColumn = "taxi_state"
	// column name
	DynamicSupervisionDetailUpdateColumnTrail DynamicSupervisionDetailUpdateColumn = "trail"
	// column name
	DynamicSupervisionDetailUpdateColumnTreatmentTime DynamicSupervisionDetailUpdateColumn = "treatment_time"
	// column name
	DynamicSupervisionDetailUpdateColumnUpdatedAt DynamicSupervisionDetailUpdateColumn = "updated_at"
	// column name
	DynamicSupervisionDetailUpdateColumnUpdatedBy DynamicSupervisionDetailUpdateColumn = "updated_by"
	// column name
	DynamicSupervisionDetailUpdateColumnVehicleID DynamicSupervisionDetailUpdateColumn = "vehicle_id"
)

var AllDynamicSupervisionDetailUpdateColumn = []DynamicSupervisionDetailUpdateColumn{
	DynamicSupervisionDetailUpdateColumnGpsSpeed,
	DynamicSupervisionDetailUpdateColumnAssignee,
	DynamicSupervisionDetailUpdateColumnBusinessScope,
	DynamicSupervisionDetailUpdateColumnCoordinate,
	DynamicSupervisionDetailUpdateColumnCreatedAt,
	DynamicSupervisionDetailUpdateColumnCreatedBy,
	DynamicSupervisionDetailUpdateColumnCurve,
	DynamicSupervisionDetailUpdateColumnDeletedAt,
	DynamicSupervisionDetailUpdateColumnDeletedBy,
	DynamicSupervisionDetailUpdateColumnDisposalMeasures,
	DynamicSupervisionDetailUpdateColumnDisposalMeasures1,
	DynamicSupervisionDetailUpdateColumnDisposalMeasures2,
	DynamicSupervisionDetailUpdateColumnDisposalMeasures3,
	DynamicSupervisionDetailUpdateColumnDisposalMeasures4,
	DynamicSupervisionDetailUpdateColumnDisposalMeasures5,
	DynamicSupervisionDetailUpdateColumnDisposalMeasures6,
	DynamicSupervisionDetailUpdateColumnDisposalMeasures7,
	DynamicSupervisionDetailUpdateColumnDisposalResults,
	DynamicSupervisionDetailUpdateColumnDisposalResults1,
	DynamicSupervisionDetailUpdateColumnDisposalResults2,
	DynamicSupervisionDetailUpdateColumnDisposalResults3,
	DynamicSupervisionDetailUpdateColumnDisposalResults4,
	DynamicSupervisionDetailUpdateColumnDisposalResults5,
	DynamicSupervisionDetailUpdateColumnDisposalResults6,
	DynamicSupervisionDetailUpdateColumnDisposalResults7,
	DynamicSupervisionDetailUpdateColumnDriverID,
	DynamicSupervisionDetailUpdateColumnEnterpriseID,
	DynamicSupervisionDetailUpdateColumnEquipment,
	DynamicSupervisionDetailUpdateColumnFatigueAlarmTime,
	DynamicSupervisionDetailUpdateColumnFeedbackTime,
	DynamicSupervisionDetailUpdateColumnID,
	DynamicSupervisionDetailUpdateColumnIsDelete,
	DynamicSupervisionDetailUpdateColumnIsFatigueDriving,
	DynamicSupervisionDetailUpdateColumnIsLocate,
	DynamicSupervisionDetailUpdateColumnIsMorningOutage,
	DynamicSupervisionDetailUpdateColumnIsOnline,
	DynamicSupervisionDetailUpdateColumnIsSend,
	DynamicSupervisionDetailUpdateColumnIsSpeeding,
	DynamicSupervisionDetailUpdateColumnIsTachographRecordNormal,
	DynamicSupervisionDetailUpdateColumnLatitudeLongitudeDescription,
	DynamicSupervisionDetailUpdateColumnLensOn,
	DynamicSupervisionDetailUpdateColumnLensPosition,
	DynamicSupervisionDetailUpdateColumnMonitorEndTime,
	DynamicSupervisionDetailUpdateColumnMonitoringLocation,
	DynamicSupervisionDetailUpdateColumnMonitoringTime,
	DynamicSupervisionDetailUpdateColumnOtherInfraction,
	DynamicSupervisionDetailUpdateColumnOthers,
	DynamicSupervisionDetailUpdateColumnOutageAlarmTime,
	DynamicSupervisionDetailUpdateColumnRemarks,
	DynamicSupervisionDetailUpdateColumnSpeedAlarmTime,
	DynamicSupervisionDetailUpdateColumnSpeedingSpeed,
	DynamicSupervisionDetailUpdateColumnSupervisionDetailID,
	DynamicSupervisionDetailUpdateColumnSupervisionID,
	DynamicSupervisionDetailUpdateColumnTachographDataException,
	DynamicSupervisionDetailUpdateColumnTachographSpeed,
	DynamicSupervisionDetailUpdateColumnTaxiState,
	DynamicSupervisionDetailUpdateColumnTrail,
	DynamicSupervisionDetailUpdateColumnTreatmentTime,
	DynamicSupervisionDetailUpdateColumnUpdatedAt,
	DynamicSupervisionDetailUpdateColumnUpdatedBy,
	DynamicSupervisionDetailUpdateColumnVehicleID,
}

func (e DynamicSupervisionDetailUpdateColumn) IsValid() bool {
	switch e {
	case DynamicSupervisionDetailUpdateColumnGpsSpeed, DynamicSupervisionDetailUpdateColumnAssignee, DynamicSupervisionDetailUpdateColumnBusinessScope, DynamicSupervisionDetailUpdateColumnCoordinate, DynamicSupervisionDetailUpdateColumnCreatedAt, DynamicSupervisionDetailUpdateColumnCreatedBy, DynamicSupervisionDetailUpdateColumnCurve, DynamicSupervisionDetailUpdateColumnDeletedAt, DynamicSupervisionDetailUpdateColumnDeletedBy, DynamicSupervisionDetailUpdateColumnDisposalMeasures, DynamicSupervisionDetailUpdateColumnDisposalMeasures1, DynamicSupervisionDetailUpdateColumnDisposalMeasures2, DynamicSupervisionDetailUpdateColumnDisposalMeasures3, DynamicSupervisionDetailUpdateColumnDisposalMeasures4, DynamicSupervisionDetailUpdateColumnDisposalMeasures5, DynamicSupervisionDetailUpdateColumnDisposalMeasures6, DynamicSupervisionDetailUpdateColumnDisposalMeasures7, DynamicSupervisionDetailUpdateColumnDisposalResults, DynamicSupervisionDetailUpdateColumnDisposalResults1, DynamicSupervisionDetailUpdateColumnDisposalResults2, DynamicSupervisionDetailUpdateColumnDisposalResults3, DynamicSupervisionDetailUpdateColumnDisposalResults4, DynamicSupervisionDetailUpdateColumnDisposalResults5, DynamicSupervisionDetailUpdateColumnDisposalResults6, DynamicSupervisionDetailUpdateColumnDisposalResults7, DynamicSupervisionDetailUpdateColumnDriverID, DynamicSupervisionDetailUpdateColumnEnterpriseID, DynamicSupervisionDetailUpdateColumnEquipment, DynamicSupervisionDetailUpdateColumnFatigueAlarmTime, DynamicSupervisionDetailUpdateColumnFeedbackTime, DynamicSupervisionDetailUpdateColumnID, DynamicSupervisionDetailUpdateColumnIsDelete, DynamicSupervisionDetailUpdateColumnIsFatigueDriving, DynamicSupervisionDetailUpdateColumnIsLocate, DynamicSupervisionDetailUpdateColumnIsMorningOutage, DynamicSupervisionDetailUpdateColumnIsOnline, DynamicSupervisionDetailUpdateColumnIsSend, DynamicSupervisionDetailUpdateColumnIsSpeeding, DynamicSupervisionDetailUpdateColumnIsTachographRecordNormal, DynamicSupervisionDetailUpdateColumnLatitudeLongitudeDescription, DynamicSupervisionDetailUpdateColumnLensOn, DynamicSupervisionDetailUpdateColumnLensPosition, DynamicSupervisionDetailUpdateColumnMonitorEndTime, DynamicSupervisionDetailUpdateColumnMonitoringLocation, DynamicSupervisionDetailUpdateColumnMonitoringTime, DynamicSupervisionDetailUpdateColumnOtherInfraction, DynamicSupervisionDetailUpdateColumnOthers, DynamicSupervisionDetailUpdateColumnOutageAlarmTime, DynamicSupervisionDetailUpdateColumnRemarks, DynamicSupervisionDetailUpdateColumnSpeedAlarmTime, DynamicSupervisionDetailUpdateColumnSpeedingSpeed, DynamicSupervisionDetailUpdateColumnSupervisionDetailID, DynamicSupervisionDetailUpdateColumnSupervisionID, DynamicSupervisionDetailUpdateColumnTachographDataException, DynamicSupervisionDetailUpdateColumnTachographSpeed, DynamicSupervisionDetailUpdateColumnTaxiState, DynamicSupervisionDetailUpdateColumnTrail, DynamicSupervisionDetailUpdateColumnTreatmentTime, DynamicSupervisionDetailUpdateColumnUpdatedAt, DynamicSupervisionDetailUpdateColumnUpdatedBy, DynamicSupervisionDetailUpdateColumnVehicleID:
		return true
	}
	return false
}

func (e DynamicSupervisionDetailUpdateColumn) String() string {
	return string(e)
}

func (e *DynamicSupervisionDetailUpdateColumn) UnmarshalGQL(v interface{}) error {
	str, ok := v.(string)
	if !ok {
		return fmt.Errorf("enums must be strings")
	}

	*e = DynamicSupervisionDetailUpdateColumn(str)
	if !e.IsValid() {
		return fmt.Errorf("%s is not a valid dynamic_supervision_detail_update_column", str)
	}
	return nil
}

func (e DynamicSupervisionDetailUpdateColumn) MarshalGQL(w io.Writer) {
	fmt.Fprint(w, strconv.Quote(e.String()))
}

// select columns of table "dynamic_supervision"
type DynamicSupervisionSelectColumn string

const (
	// column name
	DynamicSupervisionSelectColumnCheckUserID DynamicSupervisionSelectColumn = "check_user_id"
	// column name
	DynamicSupervisionSelectColumnCityID DynamicSupervisionSelectColumn = "city_id"
	// column name
	DynamicSupervisionSelectColumnCreatedAt DynamicSupervisionSelectColumn = "created_at"
	// column name
	DynamicSupervisionSelectColumnCreatedBy DynamicSupervisionSelectColumn = "created_by"
	// column name
	DynamicSupervisionSelectColumnDay DynamicSupervisionSelectColumn = "day"
	// column name
	DynamicSupervisionSelectColumnDeletedAt DynamicSupervisionSelectColumn = "deleted_at"
	// column name
	DynamicSupervisionSelectColumnDeletedBy DynamicSupervisionSelectColumn = "deleted_by"
	// column name
	DynamicSupervisionSelectColumnDistrictID DynamicSupervisionSelectColumn = "district_id"
	// column name
	DynamicSupervisionSelectColumnID DynamicSupervisionSelectColumn = "id"
	// column name
	DynamicSupervisionSelectColumnIsDelete DynamicSupervisionSelectColumn = "is_delete"
	// column name
	DynamicSupervisionSelectColumnMonth DynamicSupervisionSelectColumn = "month"
	// column name
	DynamicSupervisionSelectColumnProvinceID DynamicSupervisionSelectColumn = "province_id"
	// column name
	DynamicSupervisionSelectColumnSpotCheckDate DynamicSupervisionSelectColumn = "spot_check_date"
	// column name
	DynamicSupervisionSelectColumnSpotCheckNumber DynamicSupervisionSelectColumn = "spot_check_number"
	// column name
	DynamicSupervisionSelectColumnSpotCheckRatio DynamicSupervisionSelectColumn = "spot_check_ratio"
	// column name
	DynamicSupervisionSelectColumnSpotCheckTotalNumber DynamicSupervisionSelectColumn = "spot_check_total_number"
	// column name
	DynamicSupervisionSelectColumnSupervisionID DynamicSupervisionSelectColumn = "supervision_id"
	// column name
	DynamicSupervisionSelectColumnTotalNumberVehicle DynamicSupervisionSelectColumn = "total_number_vehicle"
	// column name
	DynamicSupervisionSelectColumnUpdatedAt DynamicSupervisionSelectColumn = "updated_at"
	// column name
	DynamicSupervisionSelectColumnUpdatedBy DynamicSupervisionSelectColumn = "updated_by"
	// column name
	DynamicSupervisionSelectColumnYear DynamicSupervisionSelectColumn = "year"
)

var AllDynamicSupervisionSelectColumn = []DynamicSupervisionSelectColumn{
	DynamicSupervisionSelectColumnCheckUserID,
	DynamicSupervisionSelectColumnCityID,
	DynamicSupervisionSelectColumnCreatedAt,
	DynamicSupervisionSelectColumnCreatedBy,
	DynamicSupervisionSelectColumnDay,
	DynamicSupervisionSelectColumnDeletedAt,
	DynamicSupervisionSelectColumnDeletedBy,
	DynamicSupervisionSelectColumnDistrictID,
	DynamicSupervisionSelectColumnID,
	DynamicSupervisionSelectColumnIsDelete,
	DynamicSupervisionSelectColumnMonth,
	DynamicSupervisionSelectColumnProvinceID,
	DynamicSupervisionSelectColumnSpotCheckDate,
	DynamicSupervisionSelectColumnSpotCheckNumber,
	DynamicSupervisionSelectColumnSpotCheckRatio,
	DynamicSupervisionSelectColumnSpotCheckTotalNumber,
	DynamicSupervisionSelectColumnSupervisionID,
	DynamicSupervisionSelectColumnTotalNumberVehicle,
	DynamicSupervisionSelectColumnUpdatedAt,
	DynamicSupervisionSelectColumnUpdatedBy,
	DynamicSupervisionSelectColumnYear,
}

func (e DynamicSupervisionSelectColumn) IsValid() bool {
	switch e {
	case DynamicSupervisionSelectColumnCheckUserID, DynamicSupervisionSelectColumnCityID, DynamicSupervisionSelectColumnCreatedAt, DynamicSupervisionSelectColumnCreatedBy, DynamicSupervisionSelectColumnDay, DynamicSupervisionSelectColumnDeletedAt, DynamicSupervisionSelectColumnDeletedBy, DynamicSupervisionSelectColumnDistrictID, DynamicSupervisionSelectColumnID, DynamicSupervisionSelectColumnIsDelete, DynamicSupervisionSelectColumnMonth, DynamicSupervisionSelectColumnProvinceID, DynamicSupervisionSelectColumnSpotCheckDate, DynamicSupervisionSelectColumnSpotCheckNumber, DynamicSupervisionSelectColumnSpotCheckRatio, DynamicSupervisionSelectColumnSpotCheckTotalNumber, DynamicSupervisionSelectColumnSupervisionID, DynamicSupervisionSelectColumnTotalNumberVehicle, DynamicSupervisionSelectColumnUpdatedAt, DynamicSupervisionSelectColumnUpdatedBy, DynamicSupervisionSelectColumnYear:
		return true
	}
	return false
}

func (e DynamicSupervisionSelectColumn) String() string {
	return string(e)
}

func (e *DynamicSupervisionSelectColumn) UnmarshalGQL(v interface{}) error {
	str, ok := v.(string)
	if !ok {
		return fmt.Errorf("enums must be strings")
	}

	*e = DynamicSupervisionSelectColumn(str)
	if !e.IsValid() {
		return fmt.Errorf("%s is not a valid dynamic_supervision_select_column", str)
	}
	return nil
}

func (e DynamicSupervisionSelectColumn) MarshalGQL(w io.Writer) {
	fmt.Fprint(w, strconv.Quote(e.String()))
}

// update columns of table "dynamic_supervision"
type DynamicSupervisionUpdateColumn string

const (
	// column name
	DynamicSupervisionUpdateColumnCheckUserID DynamicSupervisionUpdateColumn = "check_user_id"
	// column name
	DynamicSupervisionUpdateColumnCityID DynamicSupervisionUpdateColumn = "city_id"
	// column name
	DynamicSupervisionUpdateColumnCreatedAt DynamicSupervisionUpdateColumn = "created_at"
	// column name
	DynamicSupervisionUpdateColumnCreatedBy DynamicSupervisionUpdateColumn = "created_by"
	// column name
	DynamicSupervisionUpdateColumnDay DynamicSupervisionUpdateColumn = "day"
	// column name
	DynamicSupervisionUpdateColumnDeletedAt DynamicSupervisionUpdateColumn = "deleted_at"
	// column name
	DynamicSupervisionUpdateColumnDeletedBy DynamicSupervisionUpdateColumn = "deleted_by"
	// column name
	DynamicSupervisionUpdateColumnDistrictID DynamicSupervisionUpdateColumn = "district_id"
	// column name
	DynamicSupervisionUpdateColumnID DynamicSupervisionUpdateColumn = "id"
	// column name
	DynamicSupervisionUpdateColumnIsDelete DynamicSupervisionUpdateColumn = "is_delete"
	// column name
	DynamicSupervisionUpdateColumnMonth DynamicSupervisionUpdateColumn = "month"
	// column name
	DynamicSupervisionUpdateColumnProvinceID DynamicSupervisionUpdateColumn = "province_id"
	// column name
	DynamicSupervisionUpdateColumnSpotCheckDate DynamicSupervisionUpdateColumn = "spot_check_date"
	// column name
	DynamicSupervisionUpdateColumnSpotCheckNumber DynamicSupervisionUpdateColumn = "spot_check_number"
	// column name
	DynamicSupervisionUpdateColumnSpotCheckRatio DynamicSupervisionUpdateColumn = "spot_check_ratio"
	// column name
	DynamicSupervisionUpdateColumnSpotCheckTotalNumber DynamicSupervisionUpdateColumn = "spot_check_total_number"
	// column name
	DynamicSupervisionUpdateColumnSupervisionID DynamicSupervisionUpdateColumn = "supervision_id"
	// column name
	DynamicSupervisionUpdateColumnTotalNumberVehicle DynamicSupervisionUpdateColumn = "total_number_vehicle"
	// column name
	DynamicSupervisionUpdateColumnUpdatedAt DynamicSupervisionUpdateColumn = "updated_at"
	// column name
	DynamicSupervisionUpdateColumnUpdatedBy DynamicSupervisionUpdateColumn = "updated_by"
	// column name
	DynamicSupervisionUpdateColumnYear DynamicSupervisionUpdateColumn = "year"
)

var AllDynamicSupervisionUpdateColumn = []DynamicSupervisionUpdateColumn{
	DynamicSupervisionUpdateColumnCheckUserID,
	DynamicSupervisionUpdateColumnCityID,
	DynamicSupervisionUpdateColumnCreatedAt,
	DynamicSupervisionUpdateColumnCreatedBy,
	DynamicSupervisionUpdateColumnDay,
	DynamicSupervisionUpdateColumnDeletedAt,
	DynamicSupervisionUpdateColumnDeletedBy,
	DynamicSupervisionUpdateColumnDistrictID,
	DynamicSupervisionUpdateColumnID,
	DynamicSupervisionUpdateColumnIsDelete,
	DynamicSupervisionUpdateColumnMonth,
	DynamicSupervisionUpdateColumnProvinceID,
	DynamicSupervisionUpdateColumnSpotCheckDate,
	DynamicSupervisionUpdateColumnSpotCheckNumber,
	DynamicSupervisionUpdateColumnSpotCheckRatio,
	DynamicSupervisionUpdateColumnSpotCheckTotalNumber,
	DynamicSupervisionUpdateColumnSupervisionID,
	DynamicSupervisionUpdateColumnTotalNumberVehicle,
	DynamicSupervisionUpdateColumnUpdatedAt,
	DynamicSupervisionUpdateColumnUpdatedBy,
	DynamicSupervisionUpdateColumnYear,
}

func (e DynamicSupervisionUpdateColumn) IsValid() bool {
	switch e {
	case DynamicSupervisionUpdateColumnCheckUserID, DynamicSupervisionUpdateColumnCityID, DynamicSupervisionUpdateColumnCreatedAt, DynamicSupervisionUpdateColumnCreatedBy, DynamicSupervisionUpdateColumnDay, DynamicSupervisionUpdateColumnDeletedAt, DynamicSupervisionUpdateColumnDeletedBy, DynamicSupervisionUpdateColumnDistrictID, DynamicSupervisionUpdateColumnID, DynamicSupervisionUpdateColumnIsDelete, DynamicSupervisionUpdateColumnMonth, DynamicSupervisionUpdateColumnProvinceID, DynamicSupervisionUpdateColumnSpotCheckDate, DynamicSupervisionUpdateColumnSpotCheckNumber, DynamicSupervisionUpdateColumnSpotCheckRatio, DynamicSupervisionUpdateColumnSpotCheckTotalNumber, DynamicSupervisionUpdateColumnSupervisionID, DynamicSupervisionUpdateColumnTotalNumberVehicle, DynamicSupervisionUpdateColumnUpdatedAt, DynamicSupervisionUpdateColumnUpdatedBy, DynamicSupervisionUpdateColumnYear:
		return true
	}
	return false
}

func (e DynamicSupervisionUpdateColumn) String() string {
	return string(e)
}

func (e *DynamicSupervisionUpdateColumn) UnmarshalGQL(v interface{}) error {
	str, ok := v.(string)
	if !ok {
		return fmt.Errorf("enums must be strings")
	}

	*e = DynamicSupervisionUpdateColumn(str)
	if !e.IsValid() {
		return fmt.Errorf("%s is not a valid dynamic_supervision_update_column", str)
	}
	return nil
}

func (e DynamicSupervisionUpdateColumn) MarshalGQL(w io.Writer) {
	fmt.Fprint(w, strconv.Quote(e.String()))
}
