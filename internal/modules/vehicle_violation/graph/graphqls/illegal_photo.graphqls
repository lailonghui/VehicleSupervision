

"""
违法照片表


columns and relationships of "illegal_photo"

"""
type illegal_photo {
    """创建时间"""
    created_at: timestamptz!

    """创建人"""
    created_by: String!

    """删除时间"""
    deleted_at: timestamptz

    """删除人"""
    deleted_by: String

    """主键"""
    id: bigint!

    """联合主键"""
    illegal_photo_id: String!

    """是否删除"""
    is_delete: Boolean

    """是否同步"""
    is_synchronized: Boolean

    """违法照片地址"""
    picture_address: String

    """违法照片名称"""
    picture_name: String

    """修改时间"""
    updated_at: timestamptz

    """修改人"""
    updated_by: String
}

"""
aggregated selection of "illegal_photo"
"""
type illegal_photo_aggregate {
    aggregate: illegal_photo_aggregate_fields
    nodes: [illegal_photo!]!
}

"""
aggregate fields of "illegal_photo"
"""
type illegal_photo_aggregate_fields {
    avg: illegal_photo_avg_fields
    count(columns: [illegal_photo_select_column!], distinct: Boolean): Int
    max: illegal_photo_max_fields
    min: illegal_photo_min_fields
    stddev: illegal_photo_stddev_fields
    stddev_pop: illegal_photo_stddev_pop_fields
    stddev_samp: illegal_photo_stddev_samp_fields
    sum: illegal_photo_sum_fields
    var_pop: illegal_photo_var_pop_fields
    var_samp: illegal_photo_var_samp_fields
    variance: illegal_photo_variance_fields
}

"""
order by aggregate values of table "illegal_photo"
"""
input illegal_photo_aggregate_order_by {
    avg: illegal_photo_avg_order_by
    count: order_by
    max: illegal_photo_max_order_by
    min: illegal_photo_min_order_by
    stddev: illegal_photo_stddev_order_by
    stddev_pop: illegal_photo_stddev_pop_order_by
    stddev_samp: illegal_photo_stddev_samp_order_by
    sum: illegal_photo_sum_order_by
    var_pop: illegal_photo_var_pop_order_by
    var_samp: illegal_photo_var_samp_order_by
    variance: illegal_photo_variance_order_by
}

"""
input type for inserting array relation for remote table "illegal_photo"
"""
input illegal_photo_arr_rel_insert_input {
    data: [illegal_photo_insert_input!]!
    on_conflict: illegal_photo_on_conflict
}

"""aggregate avg on columns"""
type illegal_photo_avg_fields {
    id: Float
}

"""
order by avg() on columns of table "illegal_photo"
"""
input illegal_photo_avg_order_by {
    id: order_by
}

"""
Boolean expression to filter rows from the table "illegal_photo". All fields are combined with a logical 'AND'.
"""
input illegal_photo_bool_exp {
    _and: [illegal_photo_bool_exp]
    _not: illegal_photo_bool_exp
    _or: [illegal_photo_bool_exp]
    created_at: timestamptz_comparison_exp
    created_by: String_comparison_exp
    deleted_at: timestamptz_comparison_exp
    deleted_by: String_comparison_exp
    id: bigint_comparison_exp
    illegal_photo_id: String_comparison_exp
    is_delete: Boolean_comparison_exp
    is_synchronized: Boolean_comparison_exp
    picture_address: String_comparison_exp
    picture_name: String_comparison_exp
    updated_at: timestamptz_comparison_exp
    updated_by: String_comparison_exp
}

"""
unique or primary key constraints on table "illegal_photo"
"""
enum illegal_photo_constraint {
    """unique or primary key constraint"""
    illegal_photo_pkey
}

"""
input type for incrementing integer column in table "illegal_photo"
"""
input illegal_photo_inc_input {
    id: bigint
}

"""
input type for inserting data into table "illegal_photo"
"""
input illegal_photo_insert_input {
    created_at: timestamptz
    created_by: String
    deleted_at: timestamptz
    deleted_by: String
    id: bigint
    illegal_photo_id: String
    is_delete: Boolean
    is_synchronized: Boolean
    picture_address: String
    picture_name: String
    updated_at: timestamptz
    updated_by: String
}

"""aggregate max on columns"""
type illegal_photo_max_fields {
    created_at: timestamptz
    created_by: String
    deleted_at: timestamptz
    deleted_by: String
    id: bigint
    illegal_photo_id: String
    picture_address: String
    picture_name: String
    updated_at: timestamptz
    updated_by: String
}

"""
order by max() on columns of table "illegal_photo"
"""
input illegal_photo_max_order_by {
    created_at: order_by
    created_by: order_by
    deleted_at: order_by
    deleted_by: order_by
    id: order_by
    illegal_photo_id: order_by
    picture_address: order_by
    picture_name: order_by
    updated_at: order_by
    updated_by: order_by
}

"""aggregate min on columns"""
type illegal_photo_min_fields {
    created_at: timestamptz
    created_by: String
    deleted_at: timestamptz
    deleted_by: String
    id: bigint
    illegal_photo_id: String
    picture_address: String
    picture_name: String
    updated_at: timestamptz
    updated_by: String
}

"""
order by min() on columns of table "illegal_photo"
"""
input illegal_photo_min_order_by {
    created_at: order_by
    created_by: order_by
    deleted_at: order_by
    deleted_by: order_by
    id: order_by
    illegal_photo_id: order_by
    picture_address: order_by
    picture_name: order_by
    updated_at: order_by
    updated_by: order_by
}

"""
response of any mutation on the table "illegal_photo"
"""
type illegal_photo_mutation_response {
    """number of affected rows by the mutation"""
    affected_rows: Int!

    """data of the affected rows by the mutation"""
    returning: [illegal_photo!]!
}

"""
input type for inserting object relation for remote table "illegal_photo"
"""
input illegal_photo_obj_rel_insert_input {
    data: illegal_photo_insert_input!
    on_conflict: illegal_photo_on_conflict
}

"""
on conflict condition type for table "illegal_photo"
"""
input illegal_photo_on_conflict {
    constraint: illegal_photo_constraint!
    update_columns: [illegal_photo_update_column!]!
    where: illegal_photo_bool_exp
}

"""
ordering options when selecting data from "illegal_photo"
"""
input illegal_photo_order_by {
    created_at: order_by
    created_by: order_by
    deleted_at: order_by
    deleted_by: order_by
    id: order_by
    illegal_photo_id: order_by
    is_delete: order_by
    is_synchronized: order_by
    picture_address: order_by
    picture_name: order_by
    updated_at: order_by
    updated_by: order_by
}

"""
primary key columns input for table: "illegal_photo"
"""
input illegal_photo_pk_columns_input {
    """主键"""
    id: bigint!

    """联合主键"""
    illegal_photo_id: String!
}

"""
select columns of table "illegal_photo"
"""
enum illegal_photo_select_column {
    """column name"""
    created_at

    """column name"""
    created_by

    """column name"""
    deleted_at

    """column name"""
    deleted_by

    """column name"""
    id

    """column name"""
    illegal_photo_id

    """column name"""
    is_delete

    """column name"""
    is_synchronized

    """column name"""
    picture_address

    """column name"""
    picture_name

    """column name"""
    updated_at

    """column name"""
    updated_by
}

"""
input type for updating data in table "illegal_photo"
"""
input illegal_photo_set_input {
    created_at: timestamptz
    created_by: String
    deleted_at: timestamptz
    deleted_by: String
    id: bigint
    illegal_photo_id: String
    is_delete: Boolean
    is_synchronized: Boolean
    picture_address: String
    picture_name: String
    updated_at: timestamptz
    updated_by: String
}

"""aggregate stddev on columns"""
type illegal_photo_stddev_fields {
    id: Float
}

"""
order by stddev() on columns of table "illegal_photo"
"""
input illegal_photo_stddev_order_by {
    id: order_by
}

"""aggregate stddev_pop on columns"""
type illegal_photo_stddev_pop_fields {
    id: Float
}

"""
order by stddev_pop() on columns of table "illegal_photo"
"""
input illegal_photo_stddev_pop_order_by {
    id: order_by
}

"""aggregate stddev_samp on columns"""
type illegal_photo_stddev_samp_fields {
    id: Float
}

"""
order by stddev_samp() on columns of table "illegal_photo"
"""
input illegal_photo_stddev_samp_order_by {
    id: order_by
}

"""aggregate sum on columns"""
type illegal_photo_sum_fields {
    id: bigint
}

"""
order by sum() on columns of table "illegal_photo"
"""
input illegal_photo_sum_order_by {
    id: order_by
}

"""
update columns of table "illegal_photo"
"""
enum illegal_photo_update_column {
    """column name"""
    created_at

    """column name"""
    created_by

    """column name"""
    deleted_at

    """column name"""
    deleted_by

    """column name"""
    id

    """column name"""
    illegal_photo_id

    """column name"""
    is_delete

    """column name"""
    is_synchronized

    """column name"""
    picture_address

    """column name"""
    picture_name

    """column name"""
    updated_at

    """column name"""
    updated_by
}

"""aggregate var_pop on columns"""
type illegal_photo_var_pop_fields {
    id: Float
}

"""
order by var_pop() on columns of table "illegal_photo"
"""
input illegal_photo_var_pop_order_by {
    id: order_by
}

"""aggregate var_samp on columns"""
type illegal_photo_var_samp_fields {
    id: Float
}

"""
order by var_samp() on columns of table "illegal_photo"
"""
input illegal_photo_var_samp_order_by {
    id: order_by
}

"""aggregate variance on columns"""
type illegal_photo_variance_fields {
    id: Float
}

"""
order by variance() on columns of table "illegal_photo"
"""
input illegal_photo_variance_order_by {
    id: order_by
}

extend type Mutation {
    """
    delete data from the table: "illegal_photo"
  """
    delete_illegal_photo(
        """filter the rows which have to be deleted"""
        where: illegal_photo_bool_exp!
    ): illegal_photo_mutation_response

    """
    delete single row from the table: "illegal_photo"
  """
    delete_illegal_photo_by_pk(
        """主键"""
        id: bigint!

        """联合主键"""
        illegal_photo_id: String!
    ): illegal_photo

    """
    insert data into the table: "illegal_photo"
  """
    insert_illegal_photo(
        """the rows to be inserted"""
        objects: [illegal_photo_insert_input!]!

        """on conflict condition"""
        on_conflict: illegal_photo_on_conflict
    ): illegal_photo_mutation_response

    """
    insert a single row into the table: "illegal_photo"
  """
    insert_illegal_photo_one(
        """the row to be inserted"""
        object: illegal_photo_insert_input!

        """on conflict condition"""
        on_conflict: illegal_photo_on_conflict
    ): illegal_photo

    """
    update data of the table: "illegal_photo"
  """
    update_illegal_photo(
        """increments the integer columns with given value of the filtered values"""
        _inc: illegal_photo_inc_input

        """sets the columns of the filtered rows to the given values"""
        _set: illegal_photo_set_input

        """filter the rows which have to be updated"""
        where: illegal_photo_bool_exp!
    ): illegal_photo_mutation_response

    """
    update single row of the table: "illegal_photo"
  """
    update_illegal_photo_by_pk(
        """increments the integer columns with given value of the filtered values"""
        _inc: illegal_photo_inc_input

        """sets the columns of the filtered rows to the given values"""
        _set: illegal_photo_set_input
        pk_columns: illegal_photo_pk_columns_input!
    ): illegal_photo
}



extend type Query {
    """
    fetch data from the table: "illegal_photo"
  """
    illegal_photo(
        """distinct select on columns"""
        distinct_on: [illegal_photo_select_column!]

        """limit the number of rows returned"""
        limit: Int

        """skip the first n rows. Use only with order_by"""
        offset: Int

        """sort the rows by one or more columns"""
        order_by: [illegal_photo_order_by!]

        """filter the rows returned"""
        where: illegal_photo_bool_exp
    ): [illegal_photo!]!

    """
    fetch aggregated fields from the table: "illegal_photo"
  """
    illegal_photo_aggregate(
        """distinct select on columns"""
        distinct_on: [illegal_photo_select_column!]

        """limit the number of rows returned"""
        limit: Int

        """skip the first n rows. Use only with order_by"""
        offset: Int

        """sort the rows by one or more columns"""
        order_by: [illegal_photo_order_by!]

        """filter the rows returned"""
        where: illegal_photo_bool_exp
    ): illegal_photo_aggregate!

    """fetch data from the table: "illegal_photo" using primary key columns"""
    illegal_photo_by_pk(
        """主键"""
        id: bigint!

        """联合主键"""
        illegal_photo_id: String!
    ): illegal_photo
}

extend type Subscription {
    """
    fetch data from the table: "illegal_photo"
  """
    illegal_photo(
        """distinct select on columns"""
        distinct_on: [illegal_photo_select_column!]

        """limit the number of rows returned"""
        limit: Int

        """skip the first n rows. Use only with order_by"""
        offset: Int

        """sort the rows by one or more columns"""
        order_by: [illegal_photo_order_by!]

        """filter the rows returned"""
        where: illegal_photo_bool_exp
    ): [illegal_photo!]!

    """
    fetch aggregated fields from the table: "illegal_photo"
  """
    illegal_photo_aggregate(
        """distinct select on columns"""
        distinct_on: [illegal_photo_select_column!]

        """limit the number of rows returned"""
        limit: Int

        """skip the first n rows. Use only with order_by"""
        offset: Int

        """sort the rows by one or more columns"""
        order_by: [illegal_photo_order_by!]

        """filter the rows returned"""
        where: illegal_photo_bool_exp
    ): illegal_photo_aggregate!

    """fetch data from the table: "illegal_photo" using primary key columns"""
    illegal_photo_by_pk(
        """主键"""
        id: bigint!

        """联合主键"""
        illegal_photo_id: String!
    ): illegal_photo
}


