"""
违法照片表
"""
type IllegalPhoto {
	"""
	 按指定方法生成                                            ( 主键                       )
	"""
	id: Bigint!
	"""
	 违法照片表外部编码，由golang程序生成的xid，暴露到外部使用 ( 联合主键                   )
	"""
	illegal_photo_id: String!
	"""
	 违法照片名称                                              
	"""
	picture_name: String
	"""
	 违法照片地址                                              
	"""
	picture_address: String
	"""
	 是否同步                                                  ( false                      )
	"""
	is_synchronized: Boolean
	"""
	 是否删除                                                  ( false                      )
	"""
	is_deleted: Boolean
	"""
	 创建时间                                                  
	"""
	created_at: Timestamptz!
	"""
	 创建人                                                    ( system_user表的user_id )
	"""
	created_by: String!
	"""
	 修改时间                                                  
	"""
	updated_at: Timestamptz
	"""
	 修改人                                                    ( system_user表的user_id )
	"""
	updated_by: String
	"""
	 删除时间                                                  
	"""
	deleted_at: Timestamptz
	"""
	 删除人                                                    ( system_user表的user_id )
	"""
	deleted_by: String
}
"""
aggregated selection of "illegal_photo"
"""
type IllegalPhotoAggregate {
	aggregate: IllegalPhotoAggregateFields
}
"""
aggregate fields of "illegal_photo"
"""
type IllegalPhotoAggregateFields {
	avg: IllegalPhotoAvgFields
	count: Int
	max: IllegalPhotoMaxFields
	min: IllegalPhotoMinFields
	stddev: IllegalPhotoStddevFields
	stddev_pop: IllegalPhotoStddevPopFields
	stddev_samp: IllegalPhotoStddevSampFields
	sum: IllegalPhotoSumFields
	var_pop: IllegalPhotoVarPopFields
	var_samp: IllegalPhotoVarSampFields
	variance: IllegalPhotoVarianceFields
}
"""
aggregate avg on columns of table "illegal_photo"
"""
type IllegalPhotoAvgFields {
	id: Bigint
}
"""
aggregate max on columns of table "illegal_photo"
"""
type IllegalPhotoMaxFields {
	id: Bigint
	illegal_photo_id: String
	picture_name: String
	picture_address: String
	is_synchronized: Boolean
	is_deleted: Boolean
	created_at: Timestamptz
	created_by: String
	updated_at: Timestamptz
	updated_by: String
	deleted_at: Timestamptz
	deleted_by: String
}
"""
aggregate min on columns of table "illegal_photo"
"""
type IllegalPhotoMinFields {
	id: Bigint
	illegal_photo_id: String
	picture_name: String
	picture_address: String
	is_synchronized: Boolean
	is_deleted: Boolean
	created_at: Timestamptz
	created_by: String
	updated_at: Timestamptz
	updated_by: String
	deleted_at: Timestamptz
	deleted_by: String
}
"""
aggregate stddev on columns of table "illegal_photo"
"""
type IllegalPhotoStddevFields {
	id: Bigint
}
"""
aggregate stddev_pop on columns of table "illegal_photo"
"""
type IllegalPhotoStddevPopFields {
	id: Bigint
}
"""
aggregate stddev_samp on columns of table "illegal_photo"
"""
type IllegalPhotoStddevSampFields {
	id: Bigint
}
"""
aggregate sum on columns of table "illegal_photo"
"""
type IllegalPhotoSumFields {
	id: Bigint
}
"""
aggregate var_pop on columns of table "illegal_photo"
"""
type IllegalPhotoVarPopFields {
	id: Bigint
}
"""
aggregate var_samp on columns of table "illegal_photo"
"""
type IllegalPhotoVarSampFields {
	id: Bigint
}
"""
aggregate variance on columns of table "illegal_photo"
"""
type IllegalPhotoVarianceFields {
	id: Bigint
}
"""
response of any mutation on the table "illegal_photo"
"""
type IllegalPhotoMutationResponse {
	affected_rows: Int!
	returning: [IllegalPhoto!]!
}
"""
ordering options when selecting data from "illegal_photo"
"""
input IllegalPhotoOrderBy {
	id: OrderBy
	illegal_photo_id: OrderBy
	picture_name: OrderBy
	picture_address: OrderBy
	is_synchronized: OrderBy
	is_deleted: OrderBy
	created_at: OrderBy
	created_by: OrderBy
	updated_at: OrderBy
	updated_by: OrderBy
	deleted_at: OrderBy
	deleted_by: OrderBy
}
"""
Boolean expression to filter rows from the table "blacklist_operation_record". All fields are combined with a logical 'illegal_photo'.
"""
input IllegalPhotoBoolExp {
	_and: [IllegalPhotoBoolExp]
	_not: IllegalPhotoBoolExp
	_or: [IllegalPhotoBoolExp]
	id: BigintComparisonExp
	illegal_photo_id: StringComparisonExp
	picture_name: StringComparisonExp
	picture_address: StringComparisonExp
	is_synchronized: BooleanComparisonExp
	is_deleted: BooleanComparisonExp
	created_at: TimestamptzComparisonExp
	created_by: StringComparisonExp
	updated_at: TimestamptzComparisonExp
	updated_by: StringComparisonExp
	deleted_at: TimestamptzComparisonExp
	deleted_by: StringComparisonExp
}
"""
input type for inserting data into table "illegal_photo"
"""
input IllegalPhotoInsertInput {
	illegal_photo_id: String!
	picture_name: String
	picture_address: String
	is_synchronized: Boolean
	is_deleted: Boolean
	created_at: Timestamptz!
	created_by: String!
	updated_at: Timestamptz
	updated_by: String
	deleted_at: Timestamptz
	deleted_by: String
}
"""
input type for incrementing integer column in table "illegal_photo"
"""
input IllegalPhotoIncInput {
	id: Bigint
}
"""
input type for updating data in table "illegal_photo"
"""
input IllegalPhotoSetInput {
	id: Bigint
	illegal_photo_id: String
	picture_name: String
	picture_address: String
	is_synchronized: Boolean
	is_deleted: Boolean
	created_at: Timestamptz
	created_by: String
	updated_at: Timestamptz
	updated_by: String
	deleted_at: Timestamptz
	deleted_by: String
}
"""
可选select
"""
enum IllegalPhotoSelectColumn {
	"""
	 按指定方法生成                                            ( 主键                       )
	"""
	id
	"""
	 违法照片表外部编码，由golang程序生成的xid，暴露到外部使用 ( 联合主键                   )
	"""
	illegal_photo_id
	"""
	 违法照片名称                                              
	"""
	picture_name
	"""
	 违法照片地址                                              
	"""
	picture_address
	"""
	 是否同步                                                  ( false                      )
	"""
	is_synchronized
	"""
	 是否删除                                                  ( false                      )
	"""
	is_deleted
	"""
	 创建时间                                                  
	"""
	created_at
	"""
	 创建人                                                    ( system_user表的user_id )
	"""
	created_by
	"""
	 修改时间                                                  
	"""
	updated_at
	"""
	 修改人                                                    ( system_user表的user_id )
	"""
	updated_by
	"""
	 删除时间                                                  
	"""
	deleted_at
	"""
	 删除人                                                    ( system_user表的user_id )
	"""
	deleted_by
}
extend type Query {
	"""
	列表查询
	"""
	illegal_photo(distinct_on: [IllegalPhotoSelectColumn!], limit: Int, offset: Int, order_by: [IllegalPhotoOrderBy!], where: IllegalPhotoBoolExp): [IllegalPhoto!]!
	"""
	聚合查询
	"""
	illegal_photo_aggregate(distinct_on: [IllegalPhotoSelectColumn!], limit: Int, offset: Int, order_by: [IllegalPhotoOrderBy!], where: IllegalPhotoBoolExp): IllegalPhotoAggregate!
	"""
	主键查询
	"""
	illegal_photo_by_pk(id: Bigint!): IllegalPhoto
	"""
	联合主键查询
	"""
	illegal_photo_by_union_pk(illegal_photo_id: String!): IllegalPhoto
}
extend type Mutation {
	"""
	删除记录
	"""
	delete_illegal_photo(where: IllegalPhotoBoolExp!): IllegalPhotoMutationResponse
	"""
	根据主键删除记录
	"""
	delete_illegal_photo_by_pk(id: Bigint!): IllegalPhoto
	"""
	插入
	"""
	insert_illegal_photo(objects: [IllegalPhotoInsertInput!]!): IllegalPhotoMutationResponse
	"""
	插入一条记录
	"""
	insert_illegal_photo_one(objects: IllegalPhotoInsertInput!): IllegalPhoto
	"""
	更新
	"""
	update_illegal_photo(_inc: IllegalPhotoIncInput, _set: IllegalPhotoSetInput, where: IllegalPhotoBoolExp!): IllegalPhotoMutationResponse
	"""
	根据主键更新
	"""
	update_illegal_photo_by_pk(_inc: IllegalPhotoIncInput, _set: IllegalPhotoSetInput, id: Bigint!): IllegalPhoto
	"""
	根据联合主键更新
	"""
	update_illegal_photo_by_union_pk(_inc: IllegalPhotoIncInput, _set: IllegalPhotoSetInput, illegal_photo_id: String!): IllegalPhoto
	"""
	根据联合主键删除记录
	"""
	delete_illegal_photo_by_union_pk(illegal_photo_id: String!): IllegalPhoto
}
