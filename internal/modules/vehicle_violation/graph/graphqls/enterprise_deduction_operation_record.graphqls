

"""
企业扣分操作记录表


columns and relationships of "enterprise_deduction_operation_record"

"""
type enterprise_deduction_operation_record {
    """创建时间"""
    created_at: timestamptz!

    """创建人"""
    created_by: String!

    """删除时间"""
    deleted_at: timestamptz

    """删除人"""
    deleted_by: String

    """扣分分值"""
    demerit_points: numeric

    """企业扣分事项表id(enterprise_deduction_ items表的enterprise_deduction_ item_id)"""
    enterprise_deduction_item_id: String

    """联合主键"""
    enterprise_duduction_operation_id: String!

    """所在企业id"""
    enterprise_id: String

    """主键"""
    id: bigint!

    """是否删除"""
    is_delete: Boolean

    """备注"""
    remarks: String

    """修改时间"""
    updated_at: timestamptz

    """修改人"""
    updated_by: String
}

"""
aggregated selection of "enterprise_deduction_operation_record"
"""
type enterprise_deduction_operation_record_aggregate {
    aggregate: enterprise_deduction_operation_record_aggregate_fields
    nodes: [enterprise_deduction_operation_record!]!
}

"""
aggregate fields of "enterprise_deduction_operation_record"
"""
type enterprise_deduction_operation_record_aggregate_fields {
    avg: enterprise_deduction_operation_record_avg_fields
    count(columns: [enterprise_deduction_operation_record_select_column!], distinct: Boolean): Int
    max: enterprise_deduction_operation_record_max_fields
    min: enterprise_deduction_operation_record_min_fields
    stddev: enterprise_deduction_operation_record_stddev_fields
    stddev_pop: enterprise_deduction_operation_record_stddev_pop_fields
    stddev_samp: enterprise_deduction_operation_record_stddev_samp_fields
    sum: enterprise_deduction_operation_record_sum_fields
    var_pop: enterprise_deduction_operation_record_var_pop_fields
    var_samp: enterprise_deduction_operation_record_var_samp_fields
    variance: enterprise_deduction_operation_record_variance_fields
}

"""
order by aggregate values of table "enterprise_deduction_operation_record"
"""
input enterprise_deduction_operation_record_aggregate_order_by {
    avg: enterprise_deduction_operation_record_avg_order_by
    count: order_by
    max: enterprise_deduction_operation_record_max_order_by
    min: enterprise_deduction_operation_record_min_order_by
    stddev: enterprise_deduction_operation_record_stddev_order_by
    stddev_pop: enterprise_deduction_operation_record_stddev_pop_order_by
    stddev_samp: enterprise_deduction_operation_record_stddev_samp_order_by
    sum: enterprise_deduction_operation_record_sum_order_by
    var_pop: enterprise_deduction_operation_record_var_pop_order_by
    var_samp: enterprise_deduction_operation_record_var_samp_order_by
    variance: enterprise_deduction_operation_record_variance_order_by
}

"""
input type for inserting array relation for remote table "enterprise_deduction_operation_record"
"""
input enterprise_deduction_operation_record_arr_rel_insert_input {
    data: [enterprise_deduction_operation_record_insert_input!]!
    on_conflict: enterprise_deduction_operation_record_on_conflict
}

"""aggregate avg on columns"""
type enterprise_deduction_operation_record_avg_fields {
    demerit_points: Float
    id: Float
}

"""
order by avg() on columns of table "enterprise_deduction_operation_record"
"""
input enterprise_deduction_operation_record_avg_order_by {
    demerit_points: order_by
    id: order_by
}

"""
Boolean expression to filter rows from the table
"enterprise_deduction_operation_record". All fields are combined with a logical 'AND'.
"""
input enterprise_deduction_operation_record_bool_exp {
    _and: [enterprise_deduction_operation_record_bool_exp]
    _not: enterprise_deduction_operation_record_bool_exp
    _or: [enterprise_deduction_operation_record_bool_exp]
    created_at: timestamptz_comparison_exp
    created_by: String_comparison_exp
    deleted_at: timestamptz_comparison_exp
    deleted_by: String_comparison_exp
    demerit_points: numeric_comparison_exp
    enterprise_deduction_item_id: String_comparison_exp
    enterprise_duduction_operation_id: String_comparison_exp
    enterprise_id: String_comparison_exp
    id: bigint_comparison_exp
    is_delete: Boolean_comparison_exp
    remarks: String_comparison_exp
    updated_at: timestamptz_comparison_exp
    updated_by: String_comparison_exp
}

"""
unique or primary key constraints on table "enterprise_deduction_operation_record"
"""
enum enterprise_deduction_operation_record_constraint {
    """unique or primary key constraint"""
    enterprise_deduction_operation_record_pkey
}

"""
input type for incrementing integer column in table "enterprise_deduction_operation_record"
"""
input enterprise_deduction_operation_record_inc_input {
    demerit_points: numeric
    id: bigint
}

"""
input type for inserting data into table "enterprise_deduction_operation_record"
"""
input enterprise_deduction_operation_record_insert_input {
    created_at: timestamptz
    created_by: String
    deleted_at: timestamptz
    deleted_by: String
    demerit_points: numeric
    enterprise_deduction_item_id: String
    enterprise_duduction_operation_id: String
    enterprise_id: String
    id: bigint
    is_delete: Boolean
    remarks: String
    updated_at: timestamptz
    updated_by: String
}

"""aggregate max on columns"""
type enterprise_deduction_operation_record_max_fields {
    created_at: timestamptz
    created_by: String
    deleted_at: timestamptz
    deleted_by: String
    demerit_points: numeric
    enterprise_deduction_item_id: String
    enterprise_duduction_operation_id: String
    enterprise_id: String
    id: bigint
    remarks: String
    updated_at: timestamptz
    updated_by: String
}

"""
order by max() on columns of table "enterprise_deduction_operation_record"
"""
input enterprise_deduction_operation_record_max_order_by {
    created_at: order_by
    created_by: order_by
    deleted_at: order_by
    deleted_by: order_by
    demerit_points: order_by
    enterprise_deduction_item_id: order_by
    enterprise_duduction_operation_id: order_by
    enterprise_id: order_by
    id: order_by
    remarks: order_by
    updated_at: order_by
    updated_by: order_by
}

"""aggregate min on columns"""
type enterprise_deduction_operation_record_min_fields {
    created_at: timestamptz
    created_by: String
    deleted_at: timestamptz
    deleted_by: String
    demerit_points: numeric
    enterprise_deduction_item_id: String
    enterprise_duduction_operation_id: String
    enterprise_id: String
    id: bigint
    remarks: String
    updated_at: timestamptz
    updated_by: String
}

"""
order by min() on columns of table "enterprise_deduction_operation_record"
"""
input enterprise_deduction_operation_record_min_order_by {
    created_at: order_by
    created_by: order_by
    deleted_at: order_by
    deleted_by: order_by
    demerit_points: order_by
    enterprise_deduction_item_id: order_by
    enterprise_duduction_operation_id: order_by
    enterprise_id: order_by
    id: order_by
    remarks: order_by
    updated_at: order_by
    updated_by: order_by
}

"""
response of any mutation on the table "enterprise_deduction_operation_record"
"""
type enterprise_deduction_operation_record_mutation_response {
    """number of affected rows by the mutation"""
    affected_rows: Int!

    """data of the affected rows by the mutation"""
    returning: [enterprise_deduction_operation_record!]!
}

"""
input type for inserting object relation for remote table "enterprise_deduction_operation_record"
"""
input enterprise_deduction_operation_record_obj_rel_insert_input {
    data: enterprise_deduction_operation_record_insert_input!
    on_conflict: enterprise_deduction_operation_record_on_conflict
}

"""
on conflict condition type for table "enterprise_deduction_operation_record"
"""
input enterprise_deduction_operation_record_on_conflict {
    constraint: enterprise_deduction_operation_record_constraint!
    update_columns: [enterprise_deduction_operation_record_update_column!]!
    where: enterprise_deduction_operation_record_bool_exp
}

"""
ordering options when selecting data from "enterprise_deduction_operation_record"
"""
input enterprise_deduction_operation_record_order_by {
    created_at: order_by
    created_by: order_by
    deleted_at: order_by
    deleted_by: order_by
    demerit_points: order_by
    enterprise_deduction_item_id: order_by
    enterprise_duduction_operation_id: order_by
    enterprise_id: order_by
    id: order_by
    is_delete: order_by
    remarks: order_by
    updated_at: order_by
    updated_by: order_by
}

"""
primary key columns input for table: "enterprise_deduction_operation_record"
"""
input enterprise_deduction_operation_record_pk_columns_input {
    """联合主键"""
    enterprise_duduction_operation_id: String!

    """主键"""
    id: bigint!
}

"""
select columns of table "enterprise_deduction_operation_record"
"""
enum enterprise_deduction_operation_record_select_column {
    """column name"""
    created_at

    """column name"""
    created_by

    """column name"""
    deleted_at

    """column name"""
    deleted_by

    """column name"""
    demerit_points

    """column name"""
    enterprise_deduction_item_id

    """column name"""
    enterprise_duduction_operation_id

    """column name"""
    enterprise_id

    """column name"""
    id

    """column name"""
    is_delete

    """column name"""
    remarks

    """column name"""
    updated_at

    """column name"""
    updated_by
}

"""
input type for updating data in table "enterprise_deduction_operation_record"
"""
input enterprise_deduction_operation_record_set_input {
    created_at: timestamptz
    created_by: String
    deleted_at: timestamptz
    deleted_by: String
    demerit_points: numeric
    enterprise_deduction_item_id: String
    enterprise_duduction_operation_id: String
    enterprise_id: String
    id: bigint
    is_delete: Boolean
    remarks: String
    updated_at: timestamptz
    updated_by: String
}

"""aggregate stddev on columns"""
type enterprise_deduction_operation_record_stddev_fields {
    demerit_points: Float
    id: Float
}

"""
order by stddev() on columns of table "enterprise_deduction_operation_record"
"""
input enterprise_deduction_operation_record_stddev_order_by {
    demerit_points: order_by
    id: order_by
}

"""aggregate stddev_pop on columns"""
type enterprise_deduction_operation_record_stddev_pop_fields {
    demerit_points: Float
    id: Float
}

"""
order by stddev_pop() on columns of table "enterprise_deduction_operation_record"
"""
input enterprise_deduction_operation_record_stddev_pop_order_by {
    demerit_points: order_by
    id: order_by
}

"""aggregate stddev_samp on columns"""
type enterprise_deduction_operation_record_stddev_samp_fields {
    demerit_points: Float
    id: Float
}

"""
order by stddev_samp() on columns of table "enterprise_deduction_operation_record"
"""
input enterprise_deduction_operation_record_stddev_samp_order_by {
    demerit_points: order_by
    id: order_by
}

"""aggregate sum on columns"""
type enterprise_deduction_operation_record_sum_fields {
    demerit_points: numeric
    id: bigint
}

"""
order by sum() on columns of table "enterprise_deduction_operation_record"
"""
input enterprise_deduction_operation_record_sum_order_by {
    demerit_points: order_by
    id: order_by
}

"""
update columns of table "enterprise_deduction_operation_record"
"""
enum enterprise_deduction_operation_record_update_column {
    """column name"""
    created_at

    """column name"""
    created_by

    """column name"""
    deleted_at

    """column name"""
    deleted_by

    """column name"""
    demerit_points

    """column name"""
    enterprise_deduction_item_id

    """column name"""
    enterprise_duduction_operation_id

    """column name"""
    enterprise_id

    """column name"""
    id

    """column name"""
    is_delete

    """column name"""
    remarks

    """column name"""
    updated_at

    """column name"""
    updated_by
}

"""aggregate var_pop on columns"""
type enterprise_deduction_operation_record_var_pop_fields {
    demerit_points: Float
    id: Float
}

"""
order by var_pop() on columns of table "enterprise_deduction_operation_record"
"""
input enterprise_deduction_operation_record_var_pop_order_by {
    demerit_points: order_by
    id: order_by
}

"""aggregate var_samp on columns"""
type enterprise_deduction_operation_record_var_samp_fields {
    demerit_points: Float
    id: Float
}

"""
order by var_samp() on columns of table "enterprise_deduction_operation_record"
"""
input enterprise_deduction_operation_record_var_samp_order_by {
    demerit_points: order_by
    id: order_by
}

"""aggregate variance on columns"""
type enterprise_deduction_operation_record_variance_fields {
    demerit_points: Float
    id: Float
}

"""
order by variance() on columns of table "enterprise_deduction_operation_record"
"""
input enterprise_deduction_operation_record_variance_order_by {
    demerit_points: order_by
    id: order_by
}

extend type Mutation {
    """
    delete data from the table: "enterprise_deduction_operation_record"
  """
    delete_enterprise_deduction_operation_record(
        """filter the rows which have to be deleted"""
        where: enterprise_deduction_operation_record_bool_exp!
    ): enterprise_deduction_operation_record_mutation_response

    """
    delete single row from the table: "enterprise_deduction_operation_record"
  """
    delete_enterprise_deduction_operation_record_by_pk(
        """联合主键"""
        enterprise_duduction_operation_id: String!

        """主键"""
        id: bigint!
    ): enterprise_deduction_operation_record

    """
    insert data into the table: "enterprise_deduction_operation_record"
  """
    insert_enterprise_deduction_operation_record(
        """the rows to be inserted"""
        objects: [enterprise_deduction_operation_record_insert_input!]!

        """on conflict condition"""
        on_conflict: enterprise_deduction_operation_record_on_conflict
    ): enterprise_deduction_operation_record_mutation_response

    """
    insert a single row into the table: "enterprise_deduction_operation_record"
  """
    insert_enterprise_deduction_operation_record_one(
        """the row to be inserted"""
        object: enterprise_deduction_operation_record_insert_input!

        """on conflict condition"""
        on_conflict: enterprise_deduction_operation_record_on_conflict
    ): enterprise_deduction_operation_record

    """
    update data of the table: "enterprise_deduction_operation_record"
  """
    update_enterprise_deduction_operation_record(
        """increments the integer columns with given value of the filtered values"""
        _inc: enterprise_deduction_operation_record_inc_input

        """sets the columns of the filtered rows to the given values"""
        _set: enterprise_deduction_operation_record_set_input

        """filter the rows which have to be updated"""
        where: enterprise_deduction_operation_record_bool_exp!
    ): enterprise_deduction_operation_record_mutation_response

    """
    update single row of the table: "enterprise_deduction_operation_record"
  """
    update_enterprise_deduction_operation_record_by_pk(
        """increments the integer columns with given value of the filtered values"""
        _inc: enterprise_deduction_operation_record_inc_input

        """sets the columns of the filtered rows to the given values"""
        _set: enterprise_deduction_operation_record_set_input
        pk_columns: enterprise_deduction_operation_record_pk_columns_input!
    ): enterprise_deduction_operation_record
}



extend type Query {
    """
    fetch data from the table: "enterprise_deduction_operation_record"
  """
    enterprise_deduction_operation_record(
        """distinct select on columns"""
        distinct_on: [enterprise_deduction_operation_record_select_column!]

        """limit the number of rows returned"""
        limit: Int

        """skip the first n rows. Use only with order_by"""
        offset: Int

        """sort the rows by one or more columns"""
        order_by: [enterprise_deduction_operation_record_order_by!]

        """filter the rows returned"""
        where: enterprise_deduction_operation_record_bool_exp
    ): [enterprise_deduction_operation_record!]!

    """
    fetch aggregated fields from the table: "enterprise_deduction_operation_record"
  """
    enterprise_deduction_operation_record_aggregate(
        """distinct select on columns"""
        distinct_on: [enterprise_deduction_operation_record_select_column!]

        """limit the number of rows returned"""
        limit: Int

        """skip the first n rows. Use only with order_by"""
        offset: Int

        """sort the rows by one or more columns"""
        order_by: [enterprise_deduction_operation_record_order_by!]

        """filter the rows returned"""
        where: enterprise_deduction_operation_record_bool_exp
    ): enterprise_deduction_operation_record_aggregate!

    """
    fetch data from the table: "enterprise_deduction_operation_record" using primary key columns
    """
    enterprise_deduction_operation_record_by_pk(
        """联合主键"""
        enterprise_duduction_operation_id: String!

        """主键"""
        id: bigint!
    ): enterprise_deduction_operation_record
}

extend type Subscription {
    """
    fetch data from the table: "enterprise_deduction_operation_record"
  """
    enterprise_deduction_operation_record(
        """distinct select on columns"""
        distinct_on: [enterprise_deduction_operation_record_select_column!]

        """limit the number of rows returned"""
        limit: Int

        """skip the first n rows. Use only with order_by"""
        offset: Int

        """sort the rows by one or more columns"""
        order_by: [enterprise_deduction_operation_record_order_by!]

        """filter the rows returned"""
        where: enterprise_deduction_operation_record_bool_exp
    ): [enterprise_deduction_operation_record!]!

    """
    fetch aggregated fields from the table: "enterprise_deduction_operation_record"
  """
    enterprise_deduction_operation_record_aggregate(
        """distinct select on columns"""
        distinct_on: [enterprise_deduction_operation_record_select_column!]

        """limit the number of rows returned"""
        limit: Int

        """skip the first n rows. Use only with order_by"""
        offset: Int

        """sort the rows by one or more columns"""
        order_by: [enterprise_deduction_operation_record_order_by!]

        """filter the rows returned"""
        where: enterprise_deduction_operation_record_bool_exp
    ): enterprise_deduction_operation_record_aggregate!

    """
    fetch data from the table: "enterprise_deduction_operation_record" using primary key columns
    """
    enterprise_deduction_operation_record_by_pk(
        """联合主键"""
        enterprise_duduction_operation_id: String!

        """主键"""
        id: bigint!
    ): enterprise_deduction_operation_record
}

