// Code generated by github.com/99designs/gqlgen, DO NOT EDIT.

package model

import (
	model1 "VehicleSupervision/internal/modules/vehicle_alarm/model"
	"VehicleSupervision/pkg/graphql/model"
	"fmt"
	"io"
	"strconv"
	"time"
)

// aggregated selection of "alarm_processing_record"
type AlarmProcessingRecordAggregate struct {
	Aggregate *AlarmProcessingRecordAggregateFields `json:"aggregate"`
}

// aggregate fields of "alarm_processing_record"
type AlarmProcessingRecordAggregateFields struct {
	Avg        *AlarmProcessingRecordAvgFields        `json:"avg"`
	Count      *int                                   `json:"count"`
	Max        *AlarmProcessingRecordMaxFields        `json:"max"`
	Min        *AlarmProcessingRecordMinFields        `json:"min"`
	Stddev     *AlarmProcessingRecordStddevFields     `json:"stddev"`
	StddevPop  *AlarmProcessingRecordStddevPopFields  `json:"stddev_pop"`
	StddevSamp *AlarmProcessingRecordStddevSampFields `json:"stddev_samp"`
	Sum        *AlarmProcessingRecordSumFields        `json:"sum"`
	VarPop     *AlarmProcessingRecordVarPopFields     `json:"var_pop"`
	VarSamp    *AlarmProcessingRecordVarSampFields    `json:"var_samp"`
	Variance   *AlarmProcessingRecordVarianceFields   `json:"variance"`
}

// aggregate avg on columns of table "alarm_processing_record"
type AlarmProcessingRecordAvgFields struct {
	ID                        *int64 `json:"id"`
	AlarmSupervisionPictureID *int64 `json:"alarm_supervision_picture_id"`
	ProcessingType            *int   `json:"processing_type"`
	DisposalMethod            *int   `json:"disposal_method"`
}

// Boolean expression to filter rows from the table "blacklist_operation_record". All fields are combined with a logical 'alarm_processing_record'.
type AlarmProcessingRecordBoolExp struct {
	And                       []*AlarmProcessingRecordBoolExp `json:"_and"`
	Not                       *AlarmProcessingRecordBoolExp   `json:"_not"`
	Or                        []*AlarmProcessingRecordBoolExp `json:"_or"`
	ID                        *model.BigintComparisonExp      `json:"id"`
	AlarmDataID               *model.StringComparisonExp      `json:"alarm_data_id"`
	AlarmSupervisionPictureID *model.BigintComparisonExp      `json:"alarm_supervision_picture_id"`
	ProcessingContent         *model.StringComparisonExp      `json:"processing_content"`
	ProcessingTime            *model.TimestamptzComparisonExp `json:"processing_time"`
	ProcessingType            *model.IntComparisonExp         `json:"processing_type"`
	OperationUser             *model.StringComparisonExp      `json:"operation_user"`
	IsSmsPush                 *model.BooleanComparisonExp     `json:"is_sms_push"`
	IsNotify                  *model.BooleanComparisonExp     `json:"is_notify"`
	IsAnnounce                *model.BooleanComparisonExp     `json:"is_announce"`
	IsAppPush                 *model.BooleanComparisonExp     `json:"is_app_push"`
	NotifyContent             *model.StringComparisonExp      `json:"notify_content"`
	AnnounceContent           *model.StringComparisonExp      `json:"announce_content"`
	AppPushContent            *model.StringComparisonExp      `json:"app_push_content"`
	DisposalMethod            *model.IntComparisonExp         `json:"disposal_method"`
	DisposalResult            *model.StringComparisonExp      `json:"disposal_result"`
	IsDeleted                 *model.BooleanComparisonExp     `json:"is_deleted"`
	CreatedAt                 *model.TimestamptzComparisonExp `json:"created_at"`
	CreatedBy                 *model.StringComparisonExp      `json:"created_by"`
	UpdatedAt                 *model.TimestamptzComparisonExp `json:"updated_at"`
	UpdatedBy                 *model.StringComparisonExp      `json:"updated_by"`
	DeletedAt                 *model.TimestamptzComparisonExp `json:"deleted_at"`
	DeletedBy                 *model.StringComparisonExp      `json:"deleted_by"`
}

// input type for incrementing integer column in table "alarm_processing_record"
type AlarmProcessingRecordIncInput struct {
	ID                        *int64 `json:"id"`
	AlarmSupervisionPictureID *int64 `json:"alarm_supervision_picture_id"`
	ProcessingType            *int   `json:"processing_type"`
	DisposalMethod            *int   `json:"disposal_method"`
}

// input type for inserting data into table "alarm_processing_record"
type AlarmProcessingRecordInsertInput struct {
	ID                        *int64     `json:"id"`
	AlarmDataID               *string    `json:"alarm_data_id"`
	AlarmSupervisionPictureID *int64     `json:"alarm_supervision_picture_id"`
	ProcessingContent         *string    `json:"processing_content"`
	ProcessingTime            *time.Time `json:"processing_time"`
	ProcessingType            *int       `json:"processing_type"`
	OperationUser             *string    `json:"operation_user"`
	IsSmsPush                 *bool      `json:"is_sms_push"`
	IsNotify                  *bool      `json:"is_notify"`
	IsAnnounce                *bool      `json:"is_announce"`
	IsAppPush                 *bool      `json:"is_app_push"`
	NotifyContent             *string    `json:"notify_content"`
	AnnounceContent           *string    `json:"announce_content"`
	AppPushContent            *string    `json:"app_push_content"`
	DisposalMethod            *int       `json:"disposal_method"`
	DisposalResult            *string    `json:"disposal_result"`
	IsDeleted                 *bool      `json:"is_deleted"`
	CreatedAt                 *time.Time `json:"created_at"`
	CreatedBy                 *string    `json:"created_by"`
	UpdatedAt                 *time.Time `json:"updated_at"`
	UpdatedBy                 *string    `json:"updated_by"`
	DeletedAt                 *time.Time `json:"deleted_at"`
	DeletedBy                 *string    `json:"deleted_by"`
}

// aggregate max on columns of table "alarm_processing_record"
type AlarmProcessingRecordMaxFields struct {
	ID                        *int64     `json:"id"`
	AlarmDataID               *string    `json:"alarm_data_id"`
	AlarmSupervisionPictureID *int64     `json:"alarm_supervision_picture_id"`
	ProcessingContent         *string    `json:"processing_content"`
	ProcessingTime            *time.Time `json:"processing_time"`
	ProcessingType            *int       `json:"processing_type"`
	OperationUser             *string    `json:"operation_user"`
	IsSmsPush                 *bool      `json:"is_sms_push"`
	IsNotify                  *bool      `json:"is_notify"`
	IsAnnounce                *bool      `json:"is_announce"`
	IsAppPush                 *bool      `json:"is_app_push"`
	NotifyContent             *string    `json:"notify_content"`
	AnnounceContent           *string    `json:"announce_content"`
	AppPushContent            *string    `json:"app_push_content"`
	DisposalMethod            *int       `json:"disposal_method"`
	DisposalResult            *string    `json:"disposal_result"`
	IsDeleted                 *bool      `json:"is_deleted"`
	CreatedAt                 *time.Time `json:"created_at"`
	CreatedBy                 *string    `json:"created_by"`
	UpdatedAt                 *time.Time `json:"updated_at"`
	UpdatedBy                 *string    `json:"updated_by"`
	DeletedAt                 *time.Time `json:"deleted_at"`
	DeletedBy                 *string    `json:"deleted_by"`
}

// aggregate min on columns of table "alarm_processing_record"
type AlarmProcessingRecordMinFields struct {
	ID                        *int64     `json:"id"`
	AlarmDataID               *string    `json:"alarm_data_id"`
	AlarmSupervisionPictureID *int64     `json:"alarm_supervision_picture_id"`
	ProcessingContent         *string    `json:"processing_content"`
	ProcessingTime            *time.Time `json:"processing_time"`
	ProcessingType            *int       `json:"processing_type"`
	OperationUser             *string    `json:"operation_user"`
	IsSmsPush                 *bool      `json:"is_sms_push"`
	IsNotify                  *bool      `json:"is_notify"`
	IsAnnounce                *bool      `json:"is_announce"`
	IsAppPush                 *bool      `json:"is_app_push"`
	NotifyContent             *string    `json:"notify_content"`
	AnnounceContent           *string    `json:"announce_content"`
	AppPushContent            *string    `json:"app_push_content"`
	DisposalMethod            *int       `json:"disposal_method"`
	DisposalResult            *string    `json:"disposal_result"`
	IsDeleted                 *bool      `json:"is_deleted"`
	CreatedAt                 *time.Time `json:"created_at"`
	CreatedBy                 *string    `json:"created_by"`
	UpdatedAt                 *time.Time `json:"updated_at"`
	UpdatedBy                 *string    `json:"updated_by"`
	DeletedAt                 *time.Time `json:"deleted_at"`
	DeletedBy                 *string    `json:"deleted_by"`
}

// response of any mutation on the table "alarm_processing_record"
type AlarmProcessingRecordMutationResponse struct {
	AffectedRows int                             `json:"affected_rows"`
	Returning    []*model1.AlarmProcessingRecord `json:"returning"`
}

// ordering options when selecting data from "alarm_processing_record"
type AlarmProcessingRecordOrderBy struct {
	ID                        *model.OrderBy `json:"id"`
	AlarmDataID               *model.OrderBy `json:"alarm_data_id"`
	AlarmSupervisionPictureID *model.OrderBy `json:"alarm_supervision_picture_id"`
	ProcessingContent         *model.OrderBy `json:"processing_content"`
	ProcessingTime            *model.OrderBy `json:"processing_time"`
	ProcessingType            *model.OrderBy `json:"processing_type"`
	OperationUser             *model.OrderBy `json:"operation_user"`
	IsSmsPush                 *model.OrderBy `json:"is_sms_push"`
	IsNotify                  *model.OrderBy `json:"is_notify"`
	IsAnnounce                *model.OrderBy `json:"is_announce"`
	IsAppPush                 *model.OrderBy `json:"is_app_push"`
	NotifyContent             *model.OrderBy `json:"notify_content"`
	AnnounceContent           *model.OrderBy `json:"announce_content"`
	AppPushContent            *model.OrderBy `json:"app_push_content"`
	DisposalMethod            *model.OrderBy `json:"disposal_method"`
	DisposalResult            *model.OrderBy `json:"disposal_result"`
	IsDeleted                 *model.OrderBy `json:"is_deleted"`
	CreatedAt                 *model.OrderBy `json:"created_at"`
	CreatedBy                 *model.OrderBy `json:"created_by"`
	UpdatedAt                 *model.OrderBy `json:"updated_at"`
	UpdatedBy                 *model.OrderBy `json:"updated_by"`
	DeletedAt                 *model.OrderBy `json:"deleted_at"`
	DeletedBy                 *model.OrderBy `json:"deleted_by"`
}

// input type for updating data in table "alarm_processing_record"
type AlarmProcessingRecordSetInput struct {
	ID                        *int64     `json:"id"`
	AlarmDataID               *string    `json:"alarm_data_id"`
	AlarmSupervisionPictureID *int64     `json:"alarm_supervision_picture_id"`
	ProcessingContent         *string    `json:"processing_content"`
	ProcessingTime            *time.Time `json:"processing_time"`
	ProcessingType            *int       `json:"processing_type"`
	OperationUser             *string    `json:"operation_user"`
	IsSmsPush                 *bool      `json:"is_sms_push"`
	IsNotify                  *bool      `json:"is_notify"`
	IsAnnounce                *bool      `json:"is_announce"`
	IsAppPush                 *bool      `json:"is_app_push"`
	NotifyContent             *string    `json:"notify_content"`
	AnnounceContent           *string    `json:"announce_content"`
	AppPushContent            *string    `json:"app_push_content"`
	DisposalMethod            *int       `json:"disposal_method"`
	DisposalResult            *string    `json:"disposal_result"`
	IsDeleted                 *bool      `json:"is_deleted"`
	CreatedAt                 *time.Time `json:"created_at"`
	CreatedBy                 *string    `json:"created_by"`
	UpdatedAt                 *time.Time `json:"updated_at"`
	UpdatedBy                 *string    `json:"updated_by"`
	DeletedAt                 *time.Time `json:"deleted_at"`
	DeletedBy                 *string    `json:"deleted_by"`
}

// aggregate stddev on columns of table "alarm_processing_record"
type AlarmProcessingRecordStddevFields struct {
	ID                        *int64 `json:"id"`
	AlarmSupervisionPictureID *int64 `json:"alarm_supervision_picture_id"`
	ProcessingType            *int   `json:"processing_type"`
	DisposalMethod            *int   `json:"disposal_method"`
}

// aggregate stddev_pop on columns of table "alarm_processing_record"
type AlarmProcessingRecordStddevPopFields struct {
	ID                        *int64 `json:"id"`
	AlarmSupervisionPictureID *int64 `json:"alarm_supervision_picture_id"`
	ProcessingType            *int   `json:"processing_type"`
	DisposalMethod            *int   `json:"disposal_method"`
}

// aggregate stddev_samp on columns of table "alarm_processing_record"
type AlarmProcessingRecordStddevSampFields struct {
	ID                        *int64 `json:"id"`
	AlarmSupervisionPictureID *int64 `json:"alarm_supervision_picture_id"`
	ProcessingType            *int   `json:"processing_type"`
	DisposalMethod            *int   `json:"disposal_method"`
}

// aggregate sum on columns of table "alarm_processing_record"
type AlarmProcessingRecordSumFields struct {
	ID                        *int64 `json:"id"`
	AlarmSupervisionPictureID *int64 `json:"alarm_supervision_picture_id"`
	ProcessingType            *int   `json:"processing_type"`
	DisposalMethod            *int   `json:"disposal_method"`
}

// aggregate var_pop on columns of table "alarm_processing_record"
type AlarmProcessingRecordVarPopFields struct {
	ID                        *int64 `json:"id"`
	AlarmSupervisionPictureID *int64 `json:"alarm_supervision_picture_id"`
	ProcessingType            *int   `json:"processing_type"`
	DisposalMethod            *int   `json:"disposal_method"`
}

// aggregate var_samp on columns of table "alarm_processing_record"
type AlarmProcessingRecordVarSampFields struct {
	ID                        *int64 `json:"id"`
	AlarmSupervisionPictureID *int64 `json:"alarm_supervision_picture_id"`
	ProcessingType            *int   `json:"processing_type"`
	DisposalMethod            *int   `json:"disposal_method"`
}

// aggregate variance on columns of table "alarm_processing_record"
type AlarmProcessingRecordVarianceFields struct {
	ID                        *int64 `json:"id"`
	AlarmSupervisionPictureID *int64 `json:"alarm_supervision_picture_id"`
	ProcessingType            *int   `json:"processing_type"`
	DisposalMethod            *int   `json:"disposal_method"`
}

// aggregated selection of "alarm_supervision_picture_upload"
type AlarmSupervisionPictureUploadAggregate struct {
	Aggregate *AlarmSupervisionPictureUploadAggregateFields `json:"aggregate"`
}

// aggregate fields of "alarm_supervision_picture_upload"
type AlarmSupervisionPictureUploadAggregateFields struct {
	Avg        *AlarmSupervisionPictureUploadAvgFields        `json:"avg"`
	Count      *int                                           `json:"count"`
	Max        *AlarmSupervisionPictureUploadMaxFields        `json:"max"`
	Min        *AlarmSupervisionPictureUploadMinFields        `json:"min"`
	Stddev     *AlarmSupervisionPictureUploadStddevFields     `json:"stddev"`
	StddevPop  *AlarmSupervisionPictureUploadStddevPopFields  `json:"stddev_pop"`
	StddevSamp *AlarmSupervisionPictureUploadStddevSampFields `json:"stddev_samp"`
	Sum        *AlarmSupervisionPictureUploadSumFields        `json:"sum"`
	VarPop     *AlarmSupervisionPictureUploadVarPopFields     `json:"var_pop"`
	VarSamp    *AlarmSupervisionPictureUploadVarSampFields    `json:"var_samp"`
	Variance   *AlarmSupervisionPictureUploadVarianceFields   `json:"variance"`
}

// aggregate avg on columns of table "alarm_supervision_picture_upload"
type AlarmSupervisionPictureUploadAvgFields struct {
	ID       *int64 `json:"id"`
	CameraID *int   `json:"camera_id"`
}

// Boolean expression to filter rows from the table "blacklist_operation_record". All fields are combined with a logical 'alarm_supervision_picture_upload'.
type AlarmSupervisionPictureUploadBoolExp struct {
	And                       []*AlarmSupervisionPictureUploadBoolExp `json:"_and"`
	Not                       *AlarmSupervisionPictureUploadBoolExp   `json:"_not"`
	Or                        []*AlarmSupervisionPictureUploadBoolExp `json:"_or"`
	ID                        *model.BigintComparisonExp              `json:"id"`
	AlarmSupervisionPictureID *model.StringComparisonExp              `json:"alarm_supervision_picture_id"`
	VehicleID                 *model.StringComparisonExp              `json:"vehicle_id"`
	DriverID                  *model.StringComparisonExp              `json:"driver_id"`
	EnterpriseID              *model.StringComparisonExp              `json:"enterprise_id"`
	CameraID                  *model.IntComparisonExp                 `json:"camera_id"`
	PhotoCondition            *model.StringComparisonExp              `json:"photo_condition"`
	UpdateTime                *model.TimestamptzComparisonExp         `json:"update_time"`
	MonitoringPicName         *model.StringComparisonExp              `json:"monitoring_pic_name"`
	MonitoringPicAddress      *model.StringComparisonExp              `json:"monitoring_pic_address"`
	MonitoringPicUploadTime   *model.TimestamptzComparisonExp         `json:"monitoring_pic_upload_time"`
	Imel                      *model.StringComparisonExp              `json:"imel"`
	SimNumber                 *model.StringComparisonExp              `json:"sim_number"`
	CreatedAt                 *model.TimestamptzComparisonExp         `json:"created_at"`
	CreatedBy                 *model.StringComparisonExp              `json:"created_by"`
	UpdatedAt                 *model.TimestamptzComparisonExp         `json:"updated_at"`
	UpdatedBy                 *model.StringComparisonExp              `json:"updated_by"`
	DeletedAt                 *model.TimestamptzComparisonExp         `json:"deleted_at"`
	DeletedBy                 *model.StringComparisonExp              `json:"deleted_by"`
}

// input type for incrementing integer column in table "alarm_supervision_picture_upload"
type AlarmSupervisionPictureUploadIncInput struct {
	ID       *int64 `json:"id"`
	CameraID *int   `json:"camera_id"`
}

// input type for inserting data into table "alarm_supervision_picture_upload"
type AlarmSupervisionPictureUploadInsertInput struct {
	ID                        *int64     `json:"id"`
	AlarmSupervisionPictureID *string    `json:"alarm_supervision_picture_id"`
	VehicleID                 *string    `json:"vehicle_id"`
	DriverID                  *string    `json:"driver_id"`
	EnterpriseID              *string    `json:"enterprise_id"`
	CameraID                  *int       `json:"camera_id"`
	PhotoCondition            *string    `json:"photo_condition"`
	UpdateTime                *time.Time `json:"update_time"`
	MonitoringPicName         *string    `json:"monitoring_pic_name"`
	MonitoringPicAddress      *string    `json:"monitoring_pic_address"`
	MonitoringPicUploadTime   *time.Time `json:"monitoring_pic_upload_time"`
	Imel                      *string    `json:"imel"`
	SimNumber                 *string    `json:"sim_number"`
	CreatedAt                 *time.Time `json:"created_at"`
	CreatedBy                 *string    `json:"created_by"`
	UpdatedAt                 *time.Time `json:"updated_at"`
	UpdatedBy                 *string    `json:"updated_by"`
	DeletedAt                 *time.Time `json:"deleted_at"`
	DeletedBy                 *string    `json:"deleted_by"`
}

// aggregate max on columns of table "alarm_supervision_picture_upload"
type AlarmSupervisionPictureUploadMaxFields struct {
	ID                        *int64     `json:"id"`
	AlarmSupervisionPictureID *string    `json:"alarm_supervision_picture_id"`
	VehicleID                 *string    `json:"vehicle_id"`
	DriverID                  *string    `json:"driver_id"`
	EnterpriseID              *string    `json:"enterprise_id"`
	CameraID                  *int       `json:"camera_id"`
	PhotoCondition            *string    `json:"photo_condition"`
	UpdateTime                *time.Time `json:"update_time"`
	MonitoringPicName         *string    `json:"monitoring_pic_name"`
	MonitoringPicAddress      *string    `json:"monitoring_pic_address"`
	MonitoringPicUploadTime   *time.Time `json:"monitoring_pic_upload_time"`
	Imel                      *string    `json:"imel"`
	SimNumber                 *string    `json:"sim_number"`
	CreatedAt                 *time.Time `json:"created_at"`
	CreatedBy                 *string    `json:"created_by"`
	UpdatedAt                 *time.Time `json:"updated_at"`
	UpdatedBy                 *string    `json:"updated_by"`
	DeletedAt                 *time.Time `json:"deleted_at"`
	DeletedBy                 *string    `json:"deleted_by"`
}

// aggregate min on columns of table "alarm_supervision_picture_upload"
type AlarmSupervisionPictureUploadMinFields struct {
	ID                        *int64     `json:"id"`
	AlarmSupervisionPictureID *string    `json:"alarm_supervision_picture_id"`
	VehicleID                 *string    `json:"vehicle_id"`
	DriverID                  *string    `json:"driver_id"`
	EnterpriseID              *string    `json:"enterprise_id"`
	CameraID                  *int       `json:"camera_id"`
	PhotoCondition            *string    `json:"photo_condition"`
	UpdateTime                *time.Time `json:"update_time"`
	MonitoringPicName         *string    `json:"monitoring_pic_name"`
	MonitoringPicAddress      *string    `json:"monitoring_pic_address"`
	MonitoringPicUploadTime   *time.Time `json:"monitoring_pic_upload_time"`
	Imel                      *string    `json:"imel"`
	SimNumber                 *string    `json:"sim_number"`
	CreatedAt                 *time.Time `json:"created_at"`
	CreatedBy                 *string    `json:"created_by"`
	UpdatedAt                 *time.Time `json:"updated_at"`
	UpdatedBy                 *string    `json:"updated_by"`
	DeletedAt                 *time.Time `json:"deleted_at"`
	DeletedBy                 *string    `json:"deleted_by"`
}

// response of any mutation on the table "alarm_supervision_picture_upload"
type AlarmSupervisionPictureUploadMutationResponse struct {
	AffectedRows int                                     `json:"affected_rows"`
	Returning    []*model1.AlarmSupervisionPictureUpload `json:"returning"`
}

// ordering options when selecting data from "alarm_supervision_picture_upload"
type AlarmSupervisionPictureUploadOrderBy struct {
	ID                        *model.OrderBy `json:"id"`
	AlarmSupervisionPictureID *model.OrderBy `json:"alarm_supervision_picture_id"`
	VehicleID                 *model.OrderBy `json:"vehicle_id"`
	DriverID                  *model.OrderBy `json:"driver_id"`
	EnterpriseID              *model.OrderBy `json:"enterprise_id"`
	CameraID                  *model.OrderBy `json:"camera_id"`
	PhotoCondition            *model.OrderBy `json:"photo_condition"`
	UpdateTime                *model.OrderBy `json:"update_time"`
	MonitoringPicName         *model.OrderBy `json:"monitoring_pic_name"`
	MonitoringPicAddress      *model.OrderBy `json:"monitoring_pic_address"`
	MonitoringPicUploadTime   *model.OrderBy `json:"monitoring_pic_upload_time"`
	Imel                      *model.OrderBy `json:"imel"`
	SimNumber                 *model.OrderBy `json:"sim_number"`
	CreatedAt                 *model.OrderBy `json:"created_at"`
	CreatedBy                 *model.OrderBy `json:"created_by"`
	UpdatedAt                 *model.OrderBy `json:"updated_at"`
	UpdatedBy                 *model.OrderBy `json:"updated_by"`
	DeletedAt                 *model.OrderBy `json:"deleted_at"`
	DeletedBy                 *model.OrderBy `json:"deleted_by"`
}

// input type for updating data in table "alarm_supervision_picture_upload"
type AlarmSupervisionPictureUploadSetInput struct {
	ID                        *int64     `json:"id"`
	AlarmSupervisionPictureID *string    `json:"alarm_supervision_picture_id"`
	VehicleID                 *string    `json:"vehicle_id"`
	DriverID                  *string    `json:"driver_id"`
	EnterpriseID              *string    `json:"enterprise_id"`
	CameraID                  *int       `json:"camera_id"`
	PhotoCondition            *string    `json:"photo_condition"`
	UpdateTime                *time.Time `json:"update_time"`
	MonitoringPicName         *string    `json:"monitoring_pic_name"`
	MonitoringPicAddress      *string    `json:"monitoring_pic_address"`
	MonitoringPicUploadTime   *time.Time `json:"monitoring_pic_upload_time"`
	Imel                      *string    `json:"imel"`
	SimNumber                 *string    `json:"sim_number"`
	CreatedAt                 *time.Time `json:"created_at"`
	CreatedBy                 *string    `json:"created_by"`
	UpdatedAt                 *time.Time `json:"updated_at"`
	UpdatedBy                 *string    `json:"updated_by"`
	DeletedAt                 *time.Time `json:"deleted_at"`
	DeletedBy                 *string    `json:"deleted_by"`
}

// aggregate stddev on columns of table "alarm_supervision_picture_upload"
type AlarmSupervisionPictureUploadStddevFields struct {
	ID       *int64 `json:"id"`
	CameraID *int   `json:"camera_id"`
}

// aggregate stddev_pop on columns of table "alarm_supervision_picture_upload"
type AlarmSupervisionPictureUploadStddevPopFields struct {
	ID       *int64 `json:"id"`
	CameraID *int   `json:"camera_id"`
}

// aggregate stddev_samp on columns of table "alarm_supervision_picture_upload"
type AlarmSupervisionPictureUploadStddevSampFields struct {
	ID       *int64 `json:"id"`
	CameraID *int   `json:"camera_id"`
}

// aggregate sum on columns of table "alarm_supervision_picture_upload"
type AlarmSupervisionPictureUploadSumFields struct {
	ID       *int64 `json:"id"`
	CameraID *int   `json:"camera_id"`
}

// aggregate var_pop on columns of table "alarm_supervision_picture_upload"
type AlarmSupervisionPictureUploadVarPopFields struct {
	ID       *int64 `json:"id"`
	CameraID *int   `json:"camera_id"`
}

// aggregate var_samp on columns of table "alarm_supervision_picture_upload"
type AlarmSupervisionPictureUploadVarSampFields struct {
	ID       *int64 `json:"id"`
	CameraID *int   `json:"camera_id"`
}

// aggregate variance on columns of table "alarm_supervision_picture_upload"
type AlarmSupervisionPictureUploadVarianceFields struct {
	ID       *int64 `json:"id"`
	CameraID *int   `json:"camera_id"`
}

// aggregated selection of "district_alarm_content_push"
type DistrictAlarmContentPushAggregate struct {
	Aggregate *DistrictAlarmContentPushAggregateFields `json:"aggregate"`
}

// aggregate fields of "district_alarm_content_push"
type DistrictAlarmContentPushAggregateFields struct {
	Avg        *DistrictAlarmContentPushAvgFields        `json:"avg"`
	Count      *int                                      `json:"count"`
	Max        *DistrictAlarmContentPushMaxFields        `json:"max"`
	Min        *DistrictAlarmContentPushMinFields        `json:"min"`
	Stddev     *DistrictAlarmContentPushStddevFields     `json:"stddev"`
	StddevPop  *DistrictAlarmContentPushStddevPopFields  `json:"stddev_pop"`
	StddevSamp *DistrictAlarmContentPushStddevSampFields `json:"stddev_samp"`
	Sum        *DistrictAlarmContentPushSumFields        `json:"sum"`
	VarPop     *DistrictAlarmContentPushVarPopFields     `json:"var_pop"`
	VarSamp    *DistrictAlarmContentPushVarSampFields    `json:"var_samp"`
	Variance   *DistrictAlarmContentPushVarianceFields   `json:"variance"`
}

// aggregate avg on columns of table "district_alarm_content_push"
type DistrictAlarmContentPushAvgFields struct {
	ID *int64 `json:"id"`
}

// Boolean expression to filter rows from the table "blacklist_operation_record". All fields are combined with a logical 'district_alarm_content_push'.
type DistrictAlarmContentPushBoolExp struct {
	And          []*DistrictAlarmContentPushBoolExp `json:"_and"`
	Not          *DistrictAlarmContentPushBoolExp   `json:"_not"`
	Or           []*DistrictAlarmContentPushBoolExp `json:"_or"`
	ID           *model.BigintComparisonExp         `json:"id"`
	AlarmDataID  *model.StringComparisonExp         `json:"alarm_data_id"`
	AlarmType    *model.StringComparisonExp         `json:"alarm_type"`
	AlarmContent *model.StringComparisonExp         `json:"alarm_content"`
	ProvinceID   *model.StringComparisonExp         `json:"province_id"`
	CityID       *model.StringComparisonExp         `json:"city_id"`
	DistrictID   *model.StringComparisonExp         `json:"district_id"`
	IsDeleted    *model.BooleanComparisonExp        `json:"is_deleted"`
	CreatedAt    *model.TimestamptzComparisonExp    `json:"created_at"`
	CreatedBy    *model.StringComparisonExp         `json:"created_by"`
	UpdatedAt    *model.TimestamptzComparisonExp    `json:"updated_at"`
	UpdatedBy    *model.StringComparisonExp         `json:"updated_by"`
	DeletedAt    *model.TimestamptzComparisonExp    `json:"deleted_at"`
	DeletedBy    *model.StringComparisonExp         `json:"deleted_by"`
}

// input type for incrementing integer column in table "district_alarm_content_push"
type DistrictAlarmContentPushIncInput struct {
	ID *int64 `json:"id"`
}

// input type for inserting data into table "district_alarm_content_push"
type DistrictAlarmContentPushInsertInput struct {
	ID           *int64     `json:"id"`
	AlarmDataID  *string    `json:"alarm_data_id"`
	AlarmType    *string    `json:"alarm_type"`
	AlarmContent *string    `json:"alarm_content"`
	ProvinceID   *string    `json:"province_id"`
	CityID       *string    `json:"city_id"`
	DistrictID   *string    `json:"district_id"`
	IsDeleted    *bool      `json:"is_deleted"`
	CreatedAt    *time.Time `json:"created_at"`
	CreatedBy    *string    `json:"created_by"`
	UpdatedAt    *time.Time `json:"updated_at"`
	UpdatedBy    *string    `json:"updated_by"`
	DeletedAt    *time.Time `json:"deleted_at"`
	DeletedBy    *string    `json:"deleted_by"`
}

// aggregate max on columns of table "district_alarm_content_push"
type DistrictAlarmContentPushMaxFields struct {
	ID           *int64     `json:"id"`
	AlarmDataID  *string    `json:"alarm_data_id"`
	AlarmType    *string    `json:"alarm_type"`
	AlarmContent *string    `json:"alarm_content"`
	ProvinceID   *string    `json:"province_id"`
	CityID       *string    `json:"city_id"`
	DistrictID   *string    `json:"district_id"`
	IsDeleted    *bool      `json:"is_deleted"`
	CreatedAt    *time.Time `json:"created_at"`
	CreatedBy    *string    `json:"created_by"`
	UpdatedAt    *time.Time `json:"updated_at"`
	UpdatedBy    *string    `json:"updated_by"`
	DeletedAt    *time.Time `json:"deleted_at"`
	DeletedBy    *string    `json:"deleted_by"`
}

// aggregate min on columns of table "district_alarm_content_push"
type DistrictAlarmContentPushMinFields struct {
	ID           *int64     `json:"id"`
	AlarmDataID  *string    `json:"alarm_data_id"`
	AlarmType    *string    `json:"alarm_type"`
	AlarmContent *string    `json:"alarm_content"`
	ProvinceID   *string    `json:"province_id"`
	CityID       *string    `json:"city_id"`
	DistrictID   *string    `json:"district_id"`
	IsDeleted    *bool      `json:"is_deleted"`
	CreatedAt    *time.Time `json:"created_at"`
	CreatedBy    *string    `json:"created_by"`
	UpdatedAt    *time.Time `json:"updated_at"`
	UpdatedBy    *string    `json:"updated_by"`
	DeletedAt    *time.Time `json:"deleted_at"`
	DeletedBy    *string    `json:"deleted_by"`
}

// response of any mutation on the table "district_alarm_content_push"
type DistrictAlarmContentPushMutationResponse struct {
	AffectedRows int                                `json:"affected_rows"`
	Returning    []*model1.DistrictAlarmContentPush `json:"returning"`
}

// ordering options when selecting data from "district_alarm_content_push"
type DistrictAlarmContentPushOrderBy struct {
	ID           *model.OrderBy `json:"id"`
	AlarmDataID  *model.OrderBy `json:"alarm_data_id"`
	AlarmType    *model.OrderBy `json:"alarm_type"`
	AlarmContent *model.OrderBy `json:"alarm_content"`
	ProvinceID   *model.OrderBy `json:"province_id"`
	CityID       *model.OrderBy `json:"city_id"`
	DistrictID   *model.OrderBy `json:"district_id"`
	IsDeleted    *model.OrderBy `json:"is_deleted"`
	CreatedAt    *model.OrderBy `json:"created_at"`
	CreatedBy    *model.OrderBy `json:"created_by"`
	UpdatedAt    *model.OrderBy `json:"updated_at"`
	UpdatedBy    *model.OrderBy `json:"updated_by"`
	DeletedAt    *model.OrderBy `json:"deleted_at"`
	DeletedBy    *model.OrderBy `json:"deleted_by"`
}

// input type for updating data in table "district_alarm_content_push"
type DistrictAlarmContentPushSetInput struct {
	ID           *int64     `json:"id"`
	AlarmDataID  *string    `json:"alarm_data_id"`
	AlarmType    *string    `json:"alarm_type"`
	AlarmContent *string    `json:"alarm_content"`
	ProvinceID   *string    `json:"province_id"`
	CityID       *string    `json:"city_id"`
	DistrictID   *string    `json:"district_id"`
	IsDeleted    *bool      `json:"is_deleted"`
	CreatedAt    *time.Time `json:"created_at"`
	CreatedBy    *string    `json:"created_by"`
	UpdatedAt    *time.Time `json:"updated_at"`
	UpdatedBy    *string    `json:"updated_by"`
	DeletedAt    *time.Time `json:"deleted_at"`
	DeletedBy    *string    `json:"deleted_by"`
}

// aggregate stddev on columns of table "district_alarm_content_push"
type DistrictAlarmContentPushStddevFields struct {
	ID *int64 `json:"id"`
}

// aggregate stddev_pop on columns of table "district_alarm_content_push"
type DistrictAlarmContentPushStddevPopFields struct {
	ID *int64 `json:"id"`
}

// aggregate stddev_samp on columns of table "district_alarm_content_push"
type DistrictAlarmContentPushStddevSampFields struct {
	ID *int64 `json:"id"`
}

// aggregate sum on columns of table "district_alarm_content_push"
type DistrictAlarmContentPushSumFields struct {
	ID *int64 `json:"id"`
}

// aggregate var_pop on columns of table "district_alarm_content_push"
type DistrictAlarmContentPushVarPopFields struct {
	ID *int64 `json:"id"`
}

// aggregate var_samp on columns of table "district_alarm_content_push"
type DistrictAlarmContentPushVarSampFields struct {
	ID *int64 `json:"id"`
}

// aggregate variance on columns of table "district_alarm_content_push"
type DistrictAlarmContentPushVarianceFields struct {
	ID *int64 `json:"id"`
}

// aggregated selection of "enterprise_alarm_send_police"
type EnterpriseAlarmSendPoliceAggregate struct {
	Aggregate *EnterpriseAlarmSendPoliceAggregateFields `json:"aggregate"`
}

// aggregate fields of "enterprise_alarm_send_police"
type EnterpriseAlarmSendPoliceAggregateFields struct {
	Avg        *EnterpriseAlarmSendPoliceAvgFields        `json:"avg"`
	Count      *int                                       `json:"count"`
	Max        *EnterpriseAlarmSendPoliceMaxFields        `json:"max"`
	Min        *EnterpriseAlarmSendPoliceMinFields        `json:"min"`
	Stddev     *EnterpriseAlarmSendPoliceStddevFields     `json:"stddev"`
	StddevPop  *EnterpriseAlarmSendPoliceStddevPopFields  `json:"stddev_pop"`
	StddevSamp *EnterpriseAlarmSendPoliceStddevSampFields `json:"stddev_samp"`
	Sum        *EnterpriseAlarmSendPoliceSumFields        `json:"sum"`
	VarPop     *EnterpriseAlarmSendPoliceVarPopFields     `json:"var_pop"`
	VarSamp    *EnterpriseAlarmSendPoliceVarSampFields    `json:"var_samp"`
	Variance   *EnterpriseAlarmSendPoliceVarianceFields   `json:"variance"`
}

// aggregate avg on columns of table "enterprise_alarm_send_police"
type EnterpriseAlarmSendPoliceAvgFields struct {
	ID *int64 `json:"id"`
}

// Boolean expression to filter rows from the table "blacklist_operation_record". All fields are combined with a logical 'enterprise_alarm_send_police'.
type EnterpriseAlarmSendPoliceBoolExp struct {
	And                         []*EnterpriseAlarmSendPoliceBoolExp `json:"_and"`
	Not                         *EnterpriseAlarmSendPoliceBoolExp   `json:"_not"`
	Or                          []*EnterpriseAlarmSendPoliceBoolExp `json:"_or"`
	ID                          *model.BigintComparisonExp          `json:"id"`
	EnterpriseAlarmSendPoliceID *model.StringComparisonExp          `json:"enterprise_alarm_send_police_id"`
	EnterpriseID                *model.StringComparisonExp          `json:"enterprise_id"`
	EnterpriseName              *model.StringComparisonExp          `json:"enterprise_name"`
	EnterpriseContact           *model.StringComparisonExp          `json:"enterprise_contact"`
	EnterprisePhone             *model.StringComparisonExp          `json:"enterprise_phone"`
	Police                      *model.StringComparisonExp          `json:"police"`
	PolicePhone                 *model.StringComparisonExp          `json:"police_phone"`
	PhliceDepartment            *model.StringComparisonExp          `json:"phlice_department"`
	CreatedAt                   *model.TimestamptzComparisonExp     `json:"created_at"`
	CreatedBy                   *model.StringComparisonExp          `json:"created_by"`
	UpdatedAt                   *model.TimestamptzComparisonExp     `json:"updated_at"`
	UpdatedBy                   *model.StringComparisonExp          `json:"updated_by"`
	DeletedAt                   *model.TimestamptzComparisonExp     `json:"deleted_at"`
	DeletedBy                   *model.StringComparisonExp          `json:"deleted_by"`
}

// input type for incrementing integer column in table "enterprise_alarm_send_police"
type EnterpriseAlarmSendPoliceIncInput struct {
	ID *int64 `json:"id"`
}

// input type for inserting data into table "enterprise_alarm_send_police"
type EnterpriseAlarmSendPoliceInsertInput struct {
	ID                          *int64     `json:"id"`
	EnterpriseAlarmSendPoliceID *string    `json:"enterprise_alarm_send_police_id"`
	EnterpriseID                *string    `json:"enterprise_id"`
	EnterpriseName              *string    `json:"enterprise_name"`
	EnterpriseContact           *string    `json:"enterprise_contact"`
	EnterprisePhone             *string    `json:"enterprise_phone"`
	Police                      *string    `json:"police"`
	PolicePhone                 *string    `json:"police_phone"`
	PhliceDepartment            *string    `json:"phlice_department"`
	CreatedAt                   *time.Time `json:"created_at"`
	CreatedBy                   *string    `json:"created_by"`
	UpdatedAt                   *time.Time `json:"updated_at"`
	UpdatedBy                   *string    `json:"updated_by"`
	DeletedAt                   *time.Time `json:"deleted_at"`
	DeletedBy                   *string    `json:"deleted_by"`
}

// aggregate max on columns of table "enterprise_alarm_send_police"
type EnterpriseAlarmSendPoliceMaxFields struct {
	ID                          *int64     `json:"id"`
	EnterpriseAlarmSendPoliceID *string    `json:"enterprise_alarm_send_police_id"`
	EnterpriseID                *string    `json:"enterprise_id"`
	EnterpriseName              *string    `json:"enterprise_name"`
	EnterpriseContact           *string    `json:"enterprise_contact"`
	EnterprisePhone             *string    `json:"enterprise_phone"`
	Police                      *string    `json:"police"`
	PolicePhone                 *string    `json:"police_phone"`
	PhliceDepartment            *string    `json:"phlice_department"`
	CreatedAt                   *time.Time `json:"created_at"`
	CreatedBy                   *string    `json:"created_by"`
	UpdatedAt                   *time.Time `json:"updated_at"`
	UpdatedBy                   *string    `json:"updated_by"`
	DeletedAt                   *time.Time `json:"deleted_at"`
	DeletedBy                   *string    `json:"deleted_by"`
}

// aggregate min on columns of table "enterprise_alarm_send_police"
type EnterpriseAlarmSendPoliceMinFields struct {
	ID                          *int64     `json:"id"`
	EnterpriseAlarmSendPoliceID *string    `json:"enterprise_alarm_send_police_id"`
	EnterpriseID                *string    `json:"enterprise_id"`
	EnterpriseName              *string    `json:"enterprise_name"`
	EnterpriseContact           *string    `json:"enterprise_contact"`
	EnterprisePhone             *string    `json:"enterprise_phone"`
	Police                      *string    `json:"police"`
	PolicePhone                 *string    `json:"police_phone"`
	PhliceDepartment            *string    `json:"phlice_department"`
	CreatedAt                   *time.Time `json:"created_at"`
	CreatedBy                   *string    `json:"created_by"`
	UpdatedAt                   *time.Time `json:"updated_at"`
	UpdatedBy                   *string    `json:"updated_by"`
	DeletedAt                   *time.Time `json:"deleted_at"`
	DeletedBy                   *string    `json:"deleted_by"`
}

// response of any mutation on the table "enterprise_alarm_send_police"
type EnterpriseAlarmSendPoliceMutationResponse struct {
	AffectedRows int                                 `json:"affected_rows"`
	Returning    []*model1.EnterpriseAlarmSendPolice `json:"returning"`
}

// ordering options when selecting data from "enterprise_alarm_send_police"
type EnterpriseAlarmSendPoliceOrderBy struct {
	ID                          *model.OrderBy `json:"id"`
	EnterpriseAlarmSendPoliceID *model.OrderBy `json:"enterprise_alarm_send_police_id"`
	EnterpriseID                *model.OrderBy `json:"enterprise_id"`
	EnterpriseName              *model.OrderBy `json:"enterprise_name"`
	EnterpriseContact           *model.OrderBy `json:"enterprise_contact"`
	EnterprisePhone             *model.OrderBy `json:"enterprise_phone"`
	Police                      *model.OrderBy `json:"police"`
	PolicePhone                 *model.OrderBy `json:"police_phone"`
	PhliceDepartment            *model.OrderBy `json:"phlice_department"`
	CreatedAt                   *model.OrderBy `json:"created_at"`
	CreatedBy                   *model.OrderBy `json:"created_by"`
	UpdatedAt                   *model.OrderBy `json:"updated_at"`
	UpdatedBy                   *model.OrderBy `json:"updated_by"`
	DeletedAt                   *model.OrderBy `json:"deleted_at"`
	DeletedBy                   *model.OrderBy `json:"deleted_by"`
}

// input type for updating data in table "enterprise_alarm_send_police"
type EnterpriseAlarmSendPoliceSetInput struct {
	ID                          *int64     `json:"id"`
	EnterpriseAlarmSendPoliceID *string    `json:"enterprise_alarm_send_police_id"`
	EnterpriseID                *string    `json:"enterprise_id"`
	EnterpriseName              *string    `json:"enterprise_name"`
	EnterpriseContact           *string    `json:"enterprise_contact"`
	EnterprisePhone             *string    `json:"enterprise_phone"`
	Police                      *string    `json:"police"`
	PolicePhone                 *string    `json:"police_phone"`
	PhliceDepartment            *string    `json:"phlice_department"`
	CreatedAt                   *time.Time `json:"created_at"`
	CreatedBy                   *string    `json:"created_by"`
	UpdatedAt                   *time.Time `json:"updated_at"`
	UpdatedBy                   *string    `json:"updated_by"`
	DeletedAt                   *time.Time `json:"deleted_at"`
	DeletedBy                   *string    `json:"deleted_by"`
}

// aggregate stddev on columns of table "enterprise_alarm_send_police"
type EnterpriseAlarmSendPoliceStddevFields struct {
	ID *int64 `json:"id"`
}

// aggregate stddev_pop on columns of table "enterprise_alarm_send_police"
type EnterpriseAlarmSendPoliceStddevPopFields struct {
	ID *int64 `json:"id"`
}

// aggregate stddev_samp on columns of table "enterprise_alarm_send_police"
type EnterpriseAlarmSendPoliceStddevSampFields struct {
	ID *int64 `json:"id"`
}

// aggregate sum on columns of table "enterprise_alarm_send_police"
type EnterpriseAlarmSendPoliceSumFields struct {
	ID *int64 `json:"id"`
}

// aggregate var_pop on columns of table "enterprise_alarm_send_police"
type EnterpriseAlarmSendPoliceVarPopFields struct {
	ID *int64 `json:"id"`
}

// aggregate var_samp on columns of table "enterprise_alarm_send_police"
type EnterpriseAlarmSendPoliceVarSampFields struct {
	ID *int64 `json:"id"`
}

// aggregate variance on columns of table "enterprise_alarm_send_police"
type EnterpriseAlarmSendPoliceVarianceFields struct {
	ID *int64 `json:"id"`
}

// aggregated selection of "offline_alarm_registration"
type OfflineAlarmRegistrationAggregate struct {
	Aggregate *OfflineAlarmRegistrationAggregateFields `json:"aggregate"`
}

// aggregate fields of "offline_alarm_registration"
type OfflineAlarmRegistrationAggregateFields struct {
	Avg        *OfflineAlarmRegistrationAvgFields        `json:"avg"`
	Count      *int                                      `json:"count"`
	Max        *OfflineAlarmRegistrationMaxFields        `json:"max"`
	Min        *OfflineAlarmRegistrationMinFields        `json:"min"`
	Stddev     *OfflineAlarmRegistrationStddevFields     `json:"stddev"`
	StddevPop  *OfflineAlarmRegistrationStddevPopFields  `json:"stddev_pop"`
	StddevSamp *OfflineAlarmRegistrationStddevSampFields `json:"stddev_samp"`
	Sum        *OfflineAlarmRegistrationSumFields        `json:"sum"`
	VarPop     *OfflineAlarmRegistrationVarPopFields     `json:"var_pop"`
	VarSamp    *OfflineAlarmRegistrationVarSampFields    `json:"var_samp"`
	Variance   *OfflineAlarmRegistrationVarianceFields   `json:"variance"`
}

// aggregate avg on columns of table "offline_alarm_registration"
type OfflineAlarmRegistrationAvgFields struct {
	ID        *int64 `json:"id"`
	AlarmType *int   `json:"alarm_type"`
}

// Boolean expression to filter rows from the table "blacklist_operation_record". All fields are combined with a logical 'offline_alarm_registration'.
type OfflineAlarmRegistrationBoolExp struct {
	And                        []*OfflineAlarmRegistrationBoolExp `json:"_and"`
	Not                        *OfflineAlarmRegistrationBoolExp   `json:"_not"`
	Or                         []*OfflineAlarmRegistrationBoolExp `json:"_or"`
	ID                         *model.BigintComparisonExp         `json:"id"`
	OfflineAlarmRegistrationID *model.StringComparisonExp         `json:"offline_alarm_registration_id"`
	VehicleID                  *model.StringComparisonExp         `json:"vehicle_id"`
	OfflineStartTime           *model.TimestamptzComparisonExp    `json:"offline_start_time"`
	OfflineEndTime             *model.TimestamptzComparisonExp    `json:"offline_end_time"`
	RegistrationUser           *model.StringComparisonExp         `json:"registration_user"`
	RegistrationTime           *model.TimestamptzComparisonExp    `json:"registration_time"`
	SmsContent                 *model.StringComparisonExp         `json:"sms_content"`
	PhoneReminderContent       *model.StringComparisonExp         `json:"phone_reminder_content"`
	SmsSendTime                *model.TimestamptzComparisonExp    `json:"sms_send_time"`
	PhoneReminderTime          *model.TimestamptzComparisonExp    `json:"phone_reminder_time"`
	OfflineReason              *model.StringComparisonExp         `json:"offline_reason"`
	AlarmType                  *model.IntComparisonExp            `json:"alarm_type"`
	IsRegistration             *model.BooleanComparisonExp        `json:"is_registration"`
	IsEndAlarm                 *model.BooleanComparisonExp        `json:"is_end_alarm"`
	IsSendSms                  *model.BooleanComparisonExp        `json:"is_send_sms"`
	IsNeedMaintain             *model.BooleanComparisonExp        `json:"is_need_maintain"`
	CreatedAt                  *model.TimestamptzComparisonExp    `json:"created_at"`
	CreatedBy                  *model.StringComparisonExp         `json:"created_by"`
	UpdatedAt                  *model.TimestamptzComparisonExp    `json:"updated_at"`
	UpdatedBy                  *model.StringComparisonExp         `json:"updated_by"`
	DeletedAt                  *model.TimestamptzComparisonExp    `json:"deleted_at"`
	DeletedBy                  *model.StringComparisonExp         `json:"deleted_by"`
}

// input type for incrementing integer column in table "offline_alarm_registration"
type OfflineAlarmRegistrationIncInput struct {
	ID        *int64 `json:"id"`
	AlarmType *int   `json:"alarm_type"`
}

// input type for inserting data into table "offline_alarm_registration"
type OfflineAlarmRegistrationInsertInput struct {
	ID                         *int64     `json:"id"`
	OfflineAlarmRegistrationID *string    `json:"offline_alarm_registration_id"`
	VehicleID                  *string    `json:"vehicle_id"`
	OfflineStartTime           *time.Time `json:"offline_start_time"`
	OfflineEndTime             *time.Time `json:"offline_end_time"`
	RegistrationUser           *string    `json:"registration_user"`
	RegistrationTime           *time.Time `json:"registration_time"`
	SmsContent                 *string    `json:"sms_content"`
	PhoneReminderContent       *string    `json:"phone_reminder_content"`
	SmsSendTime                *time.Time `json:"sms_send_time"`
	PhoneReminderTime          *time.Time `json:"phone_reminder_time"`
	OfflineReason              *string    `json:"offline_reason"`
	AlarmType                  *int       `json:"alarm_type"`
	IsRegistration             *bool      `json:"is_registration"`
	IsEndAlarm                 *bool      `json:"is_end_alarm"`
	IsSendSms                  *bool      `json:"is_send_sms"`
	IsNeedMaintain             *bool      `json:"is_need_maintain"`
	CreatedAt                  *time.Time `json:"created_at"`
	CreatedBy                  *string    `json:"created_by"`
	UpdatedAt                  *time.Time `json:"updated_at"`
	UpdatedBy                  *string    `json:"updated_by"`
	DeletedAt                  *time.Time `json:"deleted_at"`
	DeletedBy                  *string    `json:"deleted_by"`
}

// aggregate max on columns of table "offline_alarm_registration"
type OfflineAlarmRegistrationMaxFields struct {
	ID                         *int64     `json:"id"`
	OfflineAlarmRegistrationID *string    `json:"offline_alarm_registration_id"`
	VehicleID                  *string    `json:"vehicle_id"`
	OfflineStartTime           *time.Time `json:"offline_start_time"`
	OfflineEndTime             *time.Time `json:"offline_end_time"`
	RegistrationUser           *string    `json:"registration_user"`
	RegistrationTime           *time.Time `json:"registration_time"`
	SmsContent                 *string    `json:"sms_content"`
	PhoneReminderContent       *string    `json:"phone_reminder_content"`
	SmsSendTime                *time.Time `json:"sms_send_time"`
	PhoneReminderTime          *time.Time `json:"phone_reminder_time"`
	OfflineReason              *string    `json:"offline_reason"`
	AlarmType                  *int       `json:"alarm_type"`
	IsRegistration             *bool      `json:"is_registration"`
	IsEndAlarm                 *bool      `json:"is_end_alarm"`
	IsSendSms                  *bool      `json:"is_send_sms"`
	IsNeedMaintain             *bool      `json:"is_need_maintain"`
	CreatedAt                  *time.Time `json:"created_at"`
	CreatedBy                  *string    `json:"created_by"`
	UpdatedAt                  *time.Time `json:"updated_at"`
	UpdatedBy                  *string    `json:"updated_by"`
	DeletedAt                  *time.Time `json:"deleted_at"`
	DeletedBy                  *string    `json:"deleted_by"`
}

// aggregate min on columns of table "offline_alarm_registration"
type OfflineAlarmRegistrationMinFields struct {
	ID                         *int64     `json:"id"`
	OfflineAlarmRegistrationID *string    `json:"offline_alarm_registration_id"`
	VehicleID                  *string    `json:"vehicle_id"`
	OfflineStartTime           *time.Time `json:"offline_start_time"`
	OfflineEndTime             *time.Time `json:"offline_end_time"`
	RegistrationUser           *string    `json:"registration_user"`
	RegistrationTime           *time.Time `json:"registration_time"`
	SmsContent                 *string    `json:"sms_content"`
	PhoneReminderContent       *string    `json:"phone_reminder_content"`
	SmsSendTime                *time.Time `json:"sms_send_time"`
	PhoneReminderTime          *time.Time `json:"phone_reminder_time"`
	OfflineReason              *string    `json:"offline_reason"`
	AlarmType                  *int       `json:"alarm_type"`
	IsRegistration             *bool      `json:"is_registration"`
	IsEndAlarm                 *bool      `json:"is_end_alarm"`
	IsSendSms                  *bool      `json:"is_send_sms"`
	IsNeedMaintain             *bool      `json:"is_need_maintain"`
	CreatedAt                  *time.Time `json:"created_at"`
	CreatedBy                  *string    `json:"created_by"`
	UpdatedAt                  *time.Time `json:"updated_at"`
	UpdatedBy                  *string    `json:"updated_by"`
	DeletedAt                  *time.Time `json:"deleted_at"`
	DeletedBy                  *string    `json:"deleted_by"`
}

// response of any mutation on the table "offline_alarm_registration"
type OfflineAlarmRegistrationMutationResponse struct {
	AffectedRows int                                `json:"affected_rows"`
	Returning    []*model1.OfflineAlarmRegistration `json:"returning"`
}

// ordering options when selecting data from "offline_alarm_registration"
type OfflineAlarmRegistrationOrderBy struct {
	ID                         *model.OrderBy `json:"id"`
	OfflineAlarmRegistrationID *model.OrderBy `json:"offline_alarm_registration_id"`
	VehicleID                  *model.OrderBy `json:"vehicle_id"`
	OfflineStartTime           *model.OrderBy `json:"offline_start_time"`
	OfflineEndTime             *model.OrderBy `json:"offline_end_time"`
	RegistrationUser           *model.OrderBy `json:"registration_user"`
	RegistrationTime           *model.OrderBy `json:"registration_time"`
	SmsContent                 *model.OrderBy `json:"sms_content"`
	PhoneReminderContent       *model.OrderBy `json:"phone_reminder_content"`
	SmsSendTime                *model.OrderBy `json:"sms_send_time"`
	PhoneReminderTime          *model.OrderBy `json:"phone_reminder_time"`
	OfflineReason              *model.OrderBy `json:"offline_reason"`
	AlarmType                  *model.OrderBy `json:"alarm_type"`
	IsRegistration             *model.OrderBy `json:"is_registration"`
	IsEndAlarm                 *model.OrderBy `json:"is_end_alarm"`
	IsSendSms                  *model.OrderBy `json:"is_send_sms"`
	IsNeedMaintain             *model.OrderBy `json:"is_need_maintain"`
	CreatedAt                  *model.OrderBy `json:"created_at"`
	CreatedBy                  *model.OrderBy `json:"created_by"`
	UpdatedAt                  *model.OrderBy `json:"updated_at"`
	UpdatedBy                  *model.OrderBy `json:"updated_by"`
	DeletedAt                  *model.OrderBy `json:"deleted_at"`
	DeletedBy                  *model.OrderBy `json:"deleted_by"`
}

// input type for updating data in table "offline_alarm_registration"
type OfflineAlarmRegistrationSetInput struct {
	ID                         *int64     `json:"id"`
	OfflineAlarmRegistrationID *string    `json:"offline_alarm_registration_id"`
	VehicleID                  *string    `json:"vehicle_id"`
	OfflineStartTime           *time.Time `json:"offline_start_time"`
	OfflineEndTime             *time.Time `json:"offline_end_time"`
	RegistrationUser           *string    `json:"registration_user"`
	RegistrationTime           *time.Time `json:"registration_time"`
	SmsContent                 *string    `json:"sms_content"`
	PhoneReminderContent       *string    `json:"phone_reminder_content"`
	SmsSendTime                *time.Time `json:"sms_send_time"`
	PhoneReminderTime          *time.Time `json:"phone_reminder_time"`
	OfflineReason              *string    `json:"offline_reason"`
	AlarmType                  *int       `json:"alarm_type"`
	IsRegistration             *bool      `json:"is_registration"`
	IsEndAlarm                 *bool      `json:"is_end_alarm"`
	IsSendSms                  *bool      `json:"is_send_sms"`
	IsNeedMaintain             *bool      `json:"is_need_maintain"`
	CreatedAt                  *time.Time `json:"created_at"`
	CreatedBy                  *string    `json:"created_by"`
	UpdatedAt                  *time.Time `json:"updated_at"`
	UpdatedBy                  *string    `json:"updated_by"`
	DeletedAt                  *time.Time `json:"deleted_at"`
	DeletedBy                  *string    `json:"deleted_by"`
}

// aggregate stddev on columns of table "offline_alarm_registration"
type OfflineAlarmRegistrationStddevFields struct {
	ID        *int64 `json:"id"`
	AlarmType *int   `json:"alarm_type"`
}

// aggregate stddev_pop on columns of table "offline_alarm_registration"
type OfflineAlarmRegistrationStddevPopFields struct {
	ID        *int64 `json:"id"`
	AlarmType *int   `json:"alarm_type"`
}

// aggregate stddev_samp on columns of table "offline_alarm_registration"
type OfflineAlarmRegistrationStddevSampFields struct {
	ID        *int64 `json:"id"`
	AlarmType *int   `json:"alarm_type"`
}

// aggregate sum on columns of table "offline_alarm_registration"
type OfflineAlarmRegistrationSumFields struct {
	ID        *int64 `json:"id"`
	AlarmType *int   `json:"alarm_type"`
}

// aggregate var_pop on columns of table "offline_alarm_registration"
type OfflineAlarmRegistrationVarPopFields struct {
	ID        *int64 `json:"id"`
	AlarmType *int   `json:"alarm_type"`
}

// aggregate var_samp on columns of table "offline_alarm_registration"
type OfflineAlarmRegistrationVarSampFields struct {
	ID        *int64 `json:"id"`
	AlarmType *int   `json:"alarm_type"`
}

// aggregate variance on columns of table "offline_alarm_registration"
type OfflineAlarmRegistrationVarianceFields struct {
	ID        *int64 `json:"id"`
	AlarmType *int   `json:"alarm_type"`
}

// aggregated selection of "vehicle_alarm_data"
type VehicleAlarmDataAggregate struct {
	Aggregate *VehicleAlarmDataAggregateFields `json:"aggregate"`
}

// aggregate fields of "vehicle_alarm_data"
type VehicleAlarmDataAggregateFields struct {
	Avg        *VehicleAlarmDataAvgFields        `json:"avg"`
	Count      *int                              `json:"count"`
	Max        *VehicleAlarmDataMaxFields        `json:"max"`
	Min        *VehicleAlarmDataMinFields        `json:"min"`
	Stddev     *VehicleAlarmDataStddevFields     `json:"stddev"`
	StddevPop  *VehicleAlarmDataStddevPopFields  `json:"stddev_pop"`
	StddevSamp *VehicleAlarmDataStddevSampFields `json:"stddev_samp"`
	Sum        *VehicleAlarmDataSumFields        `json:"sum"`
	VarPop     *VehicleAlarmDataVarPopFields     `json:"var_pop"`
	VarSamp    *VehicleAlarmDataVarSampFields    `json:"var_samp"`
	Variance   *VehicleAlarmDataVarianceFields   `json:"variance"`
}

// aggregate avg on columns of table "vehicle_alarm_data"
type VehicleAlarmDataAvgFields struct {
	ID                  *int64   `json:"id"`
	LatestAlarmPosition *int     `json:"latest_alarm_position"`
	TachographSpeed     *float64 `json:"tachograph_speed"`
	GpsSpeed            *float64 `json:"gps_speed"`
	MaximumSpeed        *float64 `json:"maximum_speed"`
	SpeedLimitThreshold *float64 `json:"speed_limit_threshold"`
}

// Boolean expression to filter rows from the table "blacklist_operation_record". All fields are combined with a logical 'vehicle_alarm_data'.
type VehicleAlarmDataBoolExp struct {
	And                        []*VehicleAlarmDataBoolExp      `json:"_and"`
	Not                        *VehicleAlarmDataBoolExp        `json:"_not"`
	Or                         []*VehicleAlarmDataBoolExp      `json:"_or"`
	ID                         *model.BigintComparisonExp      `json:"id"`
	VehicleAlarmDataID         *model.StringComparisonExp      `json:"vehicle_alarm_data_id"`
	VehicleID                  *model.StringComparisonExp      `json:"vehicle_id"`
	AlarmType                  *model.StringComparisonExp      `json:"alarm_type"`
	AlarmStartTime             *model.TimestamptzComparisonExp `json:"alarm_start_time"`
	AlarmEndTime               *model.TimestamptzComparisonExp `json:"alarm_end_time"`
	AlarmEndPosition           *model.StringComparisonExp      `json:"alarm_end_position"`
	LatestAlarmTime            *model.TimestamptzComparisonExp `json:"latest_alarm_time"`
	LatestAlarmPosition        *model.IntComparisonExp         `json:"latest_alarm_position"`
	IsAlarmEffective           *model.BooleanComparisonExp     `json:"is_alarm_effective"`
	IsAlarmOver                *model.BooleanComparisonExp     `json:"is_alarm_over"`
	IsCancelAlarm              *model.BooleanComparisonExp     `json:"is_cancel_alarm"`
	AlarmSource                *model.StringComparisonExp      `json:"alarm_source"`
	ProcessingTime             *model.TimestamptzComparisonExp `json:"processing_time"`
	ProcessingMethod           *model.StringComparisonExp      `json:"processing_method"`
	ProcessingDescription      *model.StringComparisonExp      `json:"processing_description"`
	Processor                  *model.StringComparisonExp      `json:"processor"`
	ProcessingStatus           *model.StringComparisonExp      `json:"processing_status"`
	TachographSpeed            *model.NumericComparisonExp     `json:"tachograph_speed"`
	GpsSpeed                   *model.NumericComparisonExp     `json:"gps_speed"`
	MaximumSpeed               *model.NumericComparisonExp     `json:"maximum_speed"`
	SpeedLimitThreshold        *model.NumericComparisonExp     `json:"speed_limit_threshold"`
	Coordinate                 *model.PointComparisonExp       `json:"coordinate"`
	LocationDescription        *model.StringComparisonExp      `json:"location_description"`
	Duration                   *model.StringComparisonExp      `json:"duration"`
	RoadGrade                  *model.StringComparisonExp      `json:"road_grade"`
	RoadName                   *model.StringComparisonExp      `json:"road_name"`
	AreaID                     *model.StringComparisonExp      `json:"area_id"`
	AlarmDealID                *model.StringComparisonExp      `json:"alarm_deal_id"`
	Pid                        *model.StringComparisonExp      `json:"pid"`
	RecordTime                 *model.TimestamptzComparisonExp `json:"record_time"`
	Supervisor                 *model.StringComparisonExp      `json:"supervisor"`
	IsSupervise                *model.BooleanComparisonExp     `json:"is_supervise"`
	SupervisionTime            *model.TimestamptzComparisonExp `json:"supervision_time"`
	SupervisionNote            *model.StringComparisonExp      `json:"supervision_note"`
	IsResolve                  *model.BooleanComparisonExp     `json:"is_resolve"`
	IsConstructionSiteHandle   *model.BooleanComparisonExp     `json:"is_construction_site_handle"`
	ConstructionSiteHandleTime *model.TimestamptzComparisonExp `json:"construction_site_handle_time"`
	CreatedAt                  *model.TimestamptzComparisonExp `json:"created_at"`
	CreatedBy                  *model.StringComparisonExp      `json:"created_by"`
	UpdatedAt                  *model.TimestamptzComparisonExp `json:"updated_at"`
	UpdatedBy                  *model.StringComparisonExp      `json:"updated_by"`
	DeletedAt                  *model.TimestamptzComparisonExp `json:"deleted_at"`
	DeletedBy                  *model.StringComparisonExp      `json:"deleted_by"`
}

// input type for incrementing integer column in table "vehicle_alarm_data"
type VehicleAlarmDataIncInput struct {
	ID                  *int64   `json:"id"`
	LatestAlarmPosition *int     `json:"latest_alarm_position"`
	TachographSpeed     *float64 `json:"tachograph_speed"`
	GpsSpeed            *float64 `json:"gps_speed"`
	MaximumSpeed        *float64 `json:"maximum_speed"`
	SpeedLimitThreshold *float64 `json:"speed_limit_threshold"`
}

// input type for inserting data into table "vehicle_alarm_data"
type VehicleAlarmDataInsertInput struct {
	ID                         *int64     `json:"id"`
	VehicleAlarmDataID         *string    `json:"vehicle_alarm_data_id"`
	VehicleID                  *string    `json:"vehicle_id"`
	AlarmType                  *string    `json:"alarm_type"`
	AlarmStartTime             *time.Time `json:"alarm_start_time"`
	AlarmEndTime               *time.Time `json:"alarm_end_time"`
	AlarmEndPosition           *string    `json:"alarm_end_position"`
	LatestAlarmTime            *time.Time `json:"latest_alarm_time"`
	LatestAlarmPosition        *int       `json:"latest_alarm_position"`
	IsAlarmEffective           *bool      `json:"is_alarm_effective"`
	IsAlarmOver                *bool      `json:"is_alarm_over"`
	IsCancelAlarm              *bool      `json:"is_cancel_alarm"`
	AlarmSource                *string    `json:"alarm_source"`
	ProcessingTime             *time.Time `json:"processing_time"`
	ProcessingMethod           *string    `json:"processing_method"`
	ProcessingDescription      *string    `json:"processing_description"`
	Processor                  *string    `json:"processor"`
	ProcessingStatus           *string    `json:"processing_status"`
	TachographSpeed            *float64   `json:"tachograph_speed"`
	GpsSpeed                   *float64   `json:"gps_speed"`
	MaximumSpeed               *float64   `json:"maximum_speed"`
	SpeedLimitThreshold        *float64   `json:"speed_limit_threshold"`
	Coordinate                 *string    `json:"coordinate"`
	LocationDescription        *string    `json:"location_description"`
	Duration                   *string    `json:"duration"`
	RoadGrade                  *string    `json:"road_grade"`
	RoadName                   *string    `json:"road_name"`
	AreaID                     *string    `json:"area_id"`
	AlarmDealID                *string    `json:"alarm_deal_id"`
	Pid                        *string    `json:"pid"`
	RecordTime                 *time.Time `json:"record_time"`
	Supervisor                 *string    `json:"supervisor"`
	IsSupervise                *bool      `json:"is_supervise"`
	SupervisionTime            *time.Time `json:"supervision_time"`
	SupervisionNote            *string    `json:"supervision_note"`
	IsResolve                  *bool      `json:"is_resolve"`
	IsConstructionSiteHandle   *bool      `json:"is_construction_site_handle"`
	ConstructionSiteHandleTime *time.Time `json:"construction_site_handle_time"`
	CreatedAt                  *time.Time `json:"created_at"`
	CreatedBy                  *string    `json:"created_by"`
	UpdatedAt                  *time.Time `json:"updated_at"`
	UpdatedBy                  *string    `json:"updated_by"`
	DeletedAt                  *time.Time `json:"deleted_at"`
	DeletedBy                  *string    `json:"deleted_by"`
}

// aggregate max on columns of table "vehicle_alarm_data"
type VehicleAlarmDataMaxFields struct {
	ID                         *int64     `json:"id"`
	VehicleAlarmDataID         *string    `json:"vehicle_alarm_data_id"`
	VehicleID                  *string    `json:"vehicle_id"`
	AlarmType                  *string    `json:"alarm_type"`
	AlarmStartTime             *time.Time `json:"alarm_start_time"`
	AlarmEndTime               *time.Time `json:"alarm_end_time"`
	AlarmEndPosition           *string    `json:"alarm_end_position"`
	LatestAlarmTime            *time.Time `json:"latest_alarm_time"`
	LatestAlarmPosition        *int       `json:"latest_alarm_position"`
	IsAlarmEffective           *bool      `json:"is_alarm_effective"`
	IsAlarmOver                *bool      `json:"is_alarm_over"`
	IsCancelAlarm              *bool      `json:"is_cancel_alarm"`
	AlarmSource                *string    `json:"alarm_source"`
	ProcessingTime             *time.Time `json:"processing_time"`
	ProcessingMethod           *string    `json:"processing_method"`
	ProcessingDescription      *string    `json:"processing_description"`
	Processor                  *string    `json:"processor"`
	ProcessingStatus           *string    `json:"processing_status"`
	TachographSpeed            *float64   `json:"tachograph_speed"`
	GpsSpeed                   *float64   `json:"gps_speed"`
	MaximumSpeed               *float64   `json:"maximum_speed"`
	SpeedLimitThreshold        *float64   `json:"speed_limit_threshold"`
	Coordinate                 *string    `json:"coordinate"`
	LocationDescription        *string    `json:"location_description"`
	Duration                   *string    `json:"duration"`
	RoadGrade                  *string    `json:"road_grade"`
	RoadName                   *string    `json:"road_name"`
	AreaID                     *string    `json:"area_id"`
	AlarmDealID                *string    `json:"alarm_deal_id"`
	Pid                        *string    `json:"pid"`
	RecordTime                 *time.Time `json:"record_time"`
	Supervisor                 *string    `json:"supervisor"`
	IsSupervise                *bool      `json:"is_supervise"`
	SupervisionTime            *time.Time `json:"supervision_time"`
	SupervisionNote            *string    `json:"supervision_note"`
	IsResolve                  *bool      `json:"is_resolve"`
	IsConstructionSiteHandle   *bool      `json:"is_construction_site_handle"`
	ConstructionSiteHandleTime *time.Time `json:"construction_site_handle_time"`
	CreatedAt                  *time.Time `json:"created_at"`
	CreatedBy                  *string    `json:"created_by"`
	UpdatedAt                  *time.Time `json:"updated_at"`
	UpdatedBy                  *string    `json:"updated_by"`
	DeletedAt                  *time.Time `json:"deleted_at"`
	DeletedBy                  *string    `json:"deleted_by"`
}

// aggregate min on columns of table "vehicle_alarm_data"
type VehicleAlarmDataMinFields struct {
	ID                         *int64     `json:"id"`
	VehicleAlarmDataID         *string    `json:"vehicle_alarm_data_id"`
	VehicleID                  *string    `json:"vehicle_id"`
	AlarmType                  *string    `json:"alarm_type"`
	AlarmStartTime             *time.Time `json:"alarm_start_time"`
	AlarmEndTime               *time.Time `json:"alarm_end_time"`
	AlarmEndPosition           *string    `json:"alarm_end_position"`
	LatestAlarmTime            *time.Time `json:"latest_alarm_time"`
	LatestAlarmPosition        *int       `json:"latest_alarm_position"`
	IsAlarmEffective           *bool      `json:"is_alarm_effective"`
	IsAlarmOver                *bool      `json:"is_alarm_over"`
	IsCancelAlarm              *bool      `json:"is_cancel_alarm"`
	AlarmSource                *string    `json:"alarm_source"`
	ProcessingTime             *time.Time `json:"processing_time"`
	ProcessingMethod           *string    `json:"processing_method"`
	ProcessingDescription      *string    `json:"processing_description"`
	Processor                  *string    `json:"processor"`
	ProcessingStatus           *string    `json:"processing_status"`
	TachographSpeed            *float64   `json:"tachograph_speed"`
	GpsSpeed                   *float64   `json:"gps_speed"`
	MaximumSpeed               *float64   `json:"maximum_speed"`
	SpeedLimitThreshold        *float64   `json:"speed_limit_threshold"`
	Coordinate                 *string    `json:"coordinate"`
	LocationDescription        *string    `json:"location_description"`
	Duration                   *string    `json:"duration"`
	RoadGrade                  *string    `json:"road_grade"`
	RoadName                   *string    `json:"road_name"`
	AreaID                     *string    `json:"area_id"`
	AlarmDealID                *string    `json:"alarm_deal_id"`
	Pid                        *string    `json:"pid"`
	RecordTime                 *time.Time `json:"record_time"`
	Supervisor                 *string    `json:"supervisor"`
	IsSupervise                *bool      `json:"is_supervise"`
	SupervisionTime            *time.Time `json:"supervision_time"`
	SupervisionNote            *string    `json:"supervision_note"`
	IsResolve                  *bool      `json:"is_resolve"`
	IsConstructionSiteHandle   *bool      `json:"is_construction_site_handle"`
	ConstructionSiteHandleTime *time.Time `json:"construction_site_handle_time"`
	CreatedAt                  *time.Time `json:"created_at"`
	CreatedBy                  *string    `json:"created_by"`
	UpdatedAt                  *time.Time `json:"updated_at"`
	UpdatedBy                  *string    `json:"updated_by"`
	DeletedAt                  *time.Time `json:"deleted_at"`
	DeletedBy                  *string    `json:"deleted_by"`
}

// response of any mutation on the table "vehicle_alarm_data"
type VehicleAlarmDataMutationResponse struct {
	AffectedRows int                        `json:"affected_rows"`
	Returning    []*model1.VehicleAlarmData `json:"returning"`
}

// ordering options when selecting data from "vehicle_alarm_data"
type VehicleAlarmDataOrderBy struct {
	ID                         *model.OrderBy `json:"id"`
	VehicleAlarmDataID         *model.OrderBy `json:"vehicle_alarm_data_id"`
	VehicleID                  *model.OrderBy `json:"vehicle_id"`
	AlarmType                  *model.OrderBy `json:"alarm_type"`
	AlarmStartTime             *model.OrderBy `json:"alarm_start_time"`
	AlarmEndTime               *model.OrderBy `json:"alarm_end_time"`
	AlarmEndPosition           *model.OrderBy `json:"alarm_end_position"`
	LatestAlarmTime            *model.OrderBy `json:"latest_alarm_time"`
	LatestAlarmPosition        *model.OrderBy `json:"latest_alarm_position"`
	IsAlarmEffective           *model.OrderBy `json:"is_alarm_effective"`
	IsAlarmOver                *model.OrderBy `json:"is_alarm_over"`
	IsCancelAlarm              *model.OrderBy `json:"is_cancel_alarm"`
	AlarmSource                *model.OrderBy `json:"alarm_source"`
	ProcessingTime             *model.OrderBy `json:"processing_time"`
	ProcessingMethod           *model.OrderBy `json:"processing_method"`
	ProcessingDescription      *model.OrderBy `json:"processing_description"`
	Processor                  *model.OrderBy `json:"processor"`
	ProcessingStatus           *model.OrderBy `json:"processing_status"`
	TachographSpeed            *model.OrderBy `json:"tachograph_speed"`
	GpsSpeed                   *model.OrderBy `json:"gps_speed"`
	MaximumSpeed               *model.OrderBy `json:"maximum_speed"`
	SpeedLimitThreshold        *model.OrderBy `json:"speed_limit_threshold"`
	Coordinate                 *model.OrderBy `json:"coordinate"`
	LocationDescription        *model.OrderBy `json:"location_description"`
	Duration                   *model.OrderBy `json:"duration"`
	RoadGrade                  *model.OrderBy `json:"road_grade"`
	RoadName                   *model.OrderBy `json:"road_name"`
	AreaID                     *model.OrderBy `json:"area_id"`
	AlarmDealID                *model.OrderBy `json:"alarm_deal_id"`
	Pid                        *model.OrderBy `json:"pid"`
	RecordTime                 *model.OrderBy `json:"record_time"`
	Supervisor                 *model.OrderBy `json:"supervisor"`
	IsSupervise                *model.OrderBy `json:"is_supervise"`
	SupervisionTime            *model.OrderBy `json:"supervision_time"`
	SupervisionNote            *model.OrderBy `json:"supervision_note"`
	IsResolve                  *model.OrderBy `json:"is_resolve"`
	IsConstructionSiteHandle   *model.OrderBy `json:"is_construction_site_handle"`
	ConstructionSiteHandleTime *model.OrderBy `json:"construction_site_handle_time"`
	CreatedAt                  *model.OrderBy `json:"created_at"`
	CreatedBy                  *model.OrderBy `json:"created_by"`
	UpdatedAt                  *model.OrderBy `json:"updated_at"`
	UpdatedBy                  *model.OrderBy `json:"updated_by"`
	DeletedAt                  *model.OrderBy `json:"deleted_at"`
	DeletedBy                  *model.OrderBy `json:"deleted_by"`
}

// input type for updating data in table "vehicle_alarm_data"
type VehicleAlarmDataSetInput struct {
	ID                         *int64     `json:"id"`
	VehicleAlarmDataID         *string    `json:"vehicle_alarm_data_id"`
	VehicleID                  *string    `json:"vehicle_id"`
	AlarmType                  *string    `json:"alarm_type"`
	AlarmStartTime             *time.Time `json:"alarm_start_time"`
	AlarmEndTime               *time.Time `json:"alarm_end_time"`
	AlarmEndPosition           *string    `json:"alarm_end_position"`
	LatestAlarmTime            *time.Time `json:"latest_alarm_time"`
	LatestAlarmPosition        *int       `json:"latest_alarm_position"`
	IsAlarmEffective           *bool      `json:"is_alarm_effective"`
	IsAlarmOver                *bool      `json:"is_alarm_over"`
	IsCancelAlarm              *bool      `json:"is_cancel_alarm"`
	AlarmSource                *string    `json:"alarm_source"`
	ProcessingTime             *time.Time `json:"processing_time"`
	ProcessingMethod           *string    `json:"processing_method"`
	ProcessingDescription      *string    `json:"processing_description"`
	Processor                  *string    `json:"processor"`
	ProcessingStatus           *string    `json:"processing_status"`
	TachographSpeed            *float64   `json:"tachograph_speed"`
	GpsSpeed                   *float64   `json:"gps_speed"`
	MaximumSpeed               *float64   `json:"maximum_speed"`
	SpeedLimitThreshold        *float64   `json:"speed_limit_threshold"`
	Coordinate                 *string    `json:"coordinate"`
	LocationDescription        *string    `json:"location_description"`
	Duration                   *string    `json:"duration"`
	RoadGrade                  *string    `json:"road_grade"`
	RoadName                   *string    `json:"road_name"`
	AreaID                     *string    `json:"area_id"`
	AlarmDealID                *string    `json:"alarm_deal_id"`
	Pid                        *string    `json:"pid"`
	RecordTime                 *time.Time `json:"record_time"`
	Supervisor                 *string    `json:"supervisor"`
	IsSupervise                *bool      `json:"is_supervise"`
	SupervisionTime            *time.Time `json:"supervision_time"`
	SupervisionNote            *string    `json:"supervision_note"`
	IsResolve                  *bool      `json:"is_resolve"`
	IsConstructionSiteHandle   *bool      `json:"is_construction_site_handle"`
	ConstructionSiteHandleTime *time.Time `json:"construction_site_handle_time"`
	CreatedAt                  *time.Time `json:"created_at"`
	CreatedBy                  *string    `json:"created_by"`
	UpdatedAt                  *time.Time `json:"updated_at"`
	UpdatedBy                  *string    `json:"updated_by"`
	DeletedAt                  *time.Time `json:"deleted_at"`
	DeletedBy                  *string    `json:"deleted_by"`
}

// aggregate stddev on columns of table "vehicle_alarm_data"
type VehicleAlarmDataStddevFields struct {
	ID                  *int64   `json:"id"`
	LatestAlarmPosition *int     `json:"latest_alarm_position"`
	TachographSpeed     *float64 `json:"tachograph_speed"`
	GpsSpeed            *float64 `json:"gps_speed"`
	MaximumSpeed        *float64 `json:"maximum_speed"`
	SpeedLimitThreshold *float64 `json:"speed_limit_threshold"`
}

// aggregate stddev_pop on columns of table "vehicle_alarm_data"
type VehicleAlarmDataStddevPopFields struct {
	ID                  *int64   `json:"id"`
	LatestAlarmPosition *int     `json:"latest_alarm_position"`
	TachographSpeed     *float64 `json:"tachograph_speed"`
	GpsSpeed            *float64 `json:"gps_speed"`
	MaximumSpeed        *float64 `json:"maximum_speed"`
	SpeedLimitThreshold *float64 `json:"speed_limit_threshold"`
}

// aggregate stddev_samp on columns of table "vehicle_alarm_data"
type VehicleAlarmDataStddevSampFields struct {
	ID                  *int64   `json:"id"`
	LatestAlarmPosition *int     `json:"latest_alarm_position"`
	TachographSpeed     *float64 `json:"tachograph_speed"`
	GpsSpeed            *float64 `json:"gps_speed"`
	MaximumSpeed        *float64 `json:"maximum_speed"`
	SpeedLimitThreshold *float64 `json:"speed_limit_threshold"`
}

// aggregate sum on columns of table "vehicle_alarm_data"
type VehicleAlarmDataSumFields struct {
	ID                  *int64   `json:"id"`
	LatestAlarmPosition *int     `json:"latest_alarm_position"`
	TachographSpeed     *float64 `json:"tachograph_speed"`
	GpsSpeed            *float64 `json:"gps_speed"`
	MaximumSpeed        *float64 `json:"maximum_speed"`
	SpeedLimitThreshold *float64 `json:"speed_limit_threshold"`
}

// aggregate var_pop on columns of table "vehicle_alarm_data"
type VehicleAlarmDataVarPopFields struct {
	ID                  *int64   `json:"id"`
	LatestAlarmPosition *int     `json:"latest_alarm_position"`
	TachographSpeed     *float64 `json:"tachograph_speed"`
	GpsSpeed            *float64 `json:"gps_speed"`
	MaximumSpeed        *float64 `json:"maximum_speed"`
	SpeedLimitThreshold *float64 `json:"speed_limit_threshold"`
}

// aggregate var_samp on columns of table "vehicle_alarm_data"
type VehicleAlarmDataVarSampFields struct {
	ID                  *int64   `json:"id"`
	LatestAlarmPosition *int     `json:"latest_alarm_position"`
	TachographSpeed     *float64 `json:"tachograph_speed"`
	GpsSpeed            *float64 `json:"gps_speed"`
	MaximumSpeed        *float64 `json:"maximum_speed"`
	SpeedLimitThreshold *float64 `json:"speed_limit_threshold"`
}

// aggregate variance on columns of table "vehicle_alarm_data"
type VehicleAlarmDataVarianceFields struct {
	ID                  *int64   `json:"id"`
	LatestAlarmPosition *int     `json:"latest_alarm_position"`
	TachographSpeed     *float64 `json:"tachograph_speed"`
	GpsSpeed            *float64 `json:"gps_speed"`
	MaximumSpeed        *float64 `json:"maximum_speed"`
	SpeedLimitThreshold *float64 `json:"speed_limit_threshold"`
}

// aggregated selection of "video_platform_alarm_type"
type VideoPlatformAlarmTypeAggregate struct {
	Aggregate *VideoPlatformAlarmTypeAggregateFields `json:"aggregate"`
}

// aggregate fields of "video_platform_alarm_type"
type VideoPlatformAlarmTypeAggregateFields struct {
	Avg        *VideoPlatformAlarmTypeAvgFields        `json:"avg"`
	Count      *int                                    `json:"count"`
	Max        *VideoPlatformAlarmTypeMaxFields        `json:"max"`
	Min        *VideoPlatformAlarmTypeMinFields        `json:"min"`
	Stddev     *VideoPlatformAlarmTypeStddevFields     `json:"stddev"`
	StddevPop  *VideoPlatformAlarmTypeStddevPopFields  `json:"stddev_pop"`
	StddevSamp *VideoPlatformAlarmTypeStddevSampFields `json:"stddev_samp"`
	Sum        *VideoPlatformAlarmTypeSumFields        `json:"sum"`
	VarPop     *VideoPlatformAlarmTypeVarPopFields     `json:"var_pop"`
	VarSamp    *VideoPlatformAlarmTypeVarSampFields    `json:"var_samp"`
	Variance   *VideoPlatformAlarmTypeVarianceFields   `json:"variance"`
}

// aggregate avg on columns of table "video_platform_alarm_type"
type VideoPlatformAlarmTypeAvgFields struct {
	ID                 *int64 `json:"id"`
	VehicleAlarmDataID *int   `json:"vehicle_alarm_data_id"`
}

// Boolean expression to filter rows from the table "blacklist_operation_record". All fields are combined with a logical 'video_platform_alarm_type'.
type VideoPlatformAlarmTypeBoolExp struct {
	And                      []*VideoPlatformAlarmTypeBoolExp `json:"_and"`
	Not                      *VideoPlatformAlarmTypeBoolExp   `json:"_not"`
	Or                       []*VideoPlatformAlarmTypeBoolExp `json:"_or"`
	ID                       *model.BigintComparisonExp       `json:"id"`
	VideoPlatformAlarmTypeID *model.StringComparisonExp       `json:"video_platform_alarm_type_id"`
	VehicleAlarmDataID       *model.IntComparisonExp          `json:"vehicle_alarm_data_id"`
	AlarmType                *model.StringComparisonExp       `json:"alarm_type"`
	AlarmSource              *model.StringComparisonExp       `json:"alarm_source"`
	AlarmClassify            *model.StringComparisonExp       `json:"alarm_classify"`
	AlarmCode                *model.StringComparisonExp       `json:"alarm_code"`
	IsDeleted                *model.BooleanComparisonExp      `json:"is_deleted"`
	CreatedAt                *model.TimestamptzComparisonExp  `json:"created_at"`
	CreatedBy                *model.StringComparisonExp       `json:"created_by"`
	UpdatedAt                *model.TimestamptzComparisonExp  `json:"updated_at"`
	UpdatedBy                *model.StringComparisonExp       `json:"updated_by"`
	DeletedAt                *model.TimestamptzComparisonExp  `json:"deleted_at"`
	DeletedBy                *model.StringComparisonExp       `json:"deleted_by"`
}

// input type for incrementing integer column in table "video_platform_alarm_type"
type VideoPlatformAlarmTypeIncInput struct {
	ID                 *int64 `json:"id"`
	VehicleAlarmDataID *int   `json:"vehicle_alarm_data_id"`
}

// input type for inserting data into table "video_platform_alarm_type"
type VideoPlatformAlarmTypeInsertInput struct {
	ID                       *int64     `json:"id"`
	VideoPlatformAlarmTypeID *string    `json:"video_platform_alarm_type_id"`
	VehicleAlarmDataID       *int       `json:"vehicle_alarm_data_id"`
	AlarmType                *string    `json:"alarm_type"`
	AlarmSource              *string    `json:"alarm_source"`
	AlarmClassify            *string    `json:"alarm_classify"`
	AlarmCode                *string    `json:"alarm_code"`
	IsDeleted                *bool      `json:"is_deleted"`
	CreatedAt                *time.Time `json:"created_at"`
	CreatedBy                *string    `json:"created_by"`
	UpdatedAt                *time.Time `json:"updated_at"`
	UpdatedBy                *string    `json:"updated_by"`
	DeletedAt                *time.Time `json:"deleted_at"`
	DeletedBy                *string    `json:"deleted_by"`
}

// aggregate max on columns of table "video_platform_alarm_type"
type VideoPlatformAlarmTypeMaxFields struct {
	ID                       *int64     `json:"id"`
	VideoPlatformAlarmTypeID *string    `json:"video_platform_alarm_type_id"`
	VehicleAlarmDataID       *int       `json:"vehicle_alarm_data_id"`
	AlarmType                *string    `json:"alarm_type"`
	AlarmSource              *string    `json:"alarm_source"`
	AlarmClassify            *string    `json:"alarm_classify"`
	AlarmCode                *string    `json:"alarm_code"`
	IsDeleted                *bool      `json:"is_deleted"`
	CreatedAt                *time.Time `json:"created_at"`
	CreatedBy                *string    `json:"created_by"`
	UpdatedAt                *time.Time `json:"updated_at"`
	UpdatedBy                *string    `json:"updated_by"`
	DeletedAt                *time.Time `json:"deleted_at"`
	DeletedBy                *string    `json:"deleted_by"`
}

// aggregate min on columns of table "video_platform_alarm_type"
type VideoPlatformAlarmTypeMinFields struct {
	ID                       *int64     `json:"id"`
	VideoPlatformAlarmTypeID *string    `json:"video_platform_alarm_type_id"`
	VehicleAlarmDataID       *int       `json:"vehicle_alarm_data_id"`
	AlarmType                *string    `json:"alarm_type"`
	AlarmSource              *string    `json:"alarm_source"`
	AlarmClassify            *string    `json:"alarm_classify"`
	AlarmCode                *string    `json:"alarm_code"`
	IsDeleted                *bool      `json:"is_deleted"`
	CreatedAt                *time.Time `json:"created_at"`
	CreatedBy                *string    `json:"created_by"`
	UpdatedAt                *time.Time `json:"updated_at"`
	UpdatedBy                *string    `json:"updated_by"`
	DeletedAt                *time.Time `json:"deleted_at"`
	DeletedBy                *string    `json:"deleted_by"`
}

// response of any mutation on the table "video_platform_alarm_type"
type VideoPlatformAlarmTypeMutationResponse struct {
	AffectedRows int                              `json:"affected_rows"`
	Returning    []*model1.VideoPlatformAlarmType `json:"returning"`
}

// ordering options when selecting data from "video_platform_alarm_type"
type VideoPlatformAlarmTypeOrderBy struct {
	ID                       *model.OrderBy `json:"id"`
	VideoPlatformAlarmTypeID *model.OrderBy `json:"video_platform_alarm_type_id"`
	VehicleAlarmDataID       *model.OrderBy `json:"vehicle_alarm_data_id"`
	AlarmType                *model.OrderBy `json:"alarm_type"`
	AlarmSource              *model.OrderBy `json:"alarm_source"`
	AlarmClassify            *model.OrderBy `json:"alarm_classify"`
	AlarmCode                *model.OrderBy `json:"alarm_code"`
	IsDeleted                *model.OrderBy `json:"is_deleted"`
	CreatedAt                *model.OrderBy `json:"created_at"`
	CreatedBy                *model.OrderBy `json:"created_by"`
	UpdatedAt                *model.OrderBy `json:"updated_at"`
	UpdatedBy                *model.OrderBy `json:"updated_by"`
	DeletedAt                *model.OrderBy `json:"deleted_at"`
	DeletedBy                *model.OrderBy `json:"deleted_by"`
}

// input type for updating data in table "video_platform_alarm_type"
type VideoPlatformAlarmTypeSetInput struct {
	ID                       *int64     `json:"id"`
	VideoPlatformAlarmTypeID *string    `json:"video_platform_alarm_type_id"`
	VehicleAlarmDataID       *int       `json:"vehicle_alarm_data_id"`
	AlarmType                *string    `json:"alarm_type"`
	AlarmSource              *string    `json:"alarm_source"`
	AlarmClassify            *string    `json:"alarm_classify"`
	AlarmCode                *string    `json:"alarm_code"`
	IsDeleted                *bool      `json:"is_deleted"`
	CreatedAt                *time.Time `json:"created_at"`
	CreatedBy                *string    `json:"created_by"`
	UpdatedAt                *time.Time `json:"updated_at"`
	UpdatedBy                *string    `json:"updated_by"`
	DeletedAt                *time.Time `json:"deleted_at"`
	DeletedBy                *string    `json:"deleted_by"`
}

// aggregate stddev on columns of table "video_platform_alarm_type"
type VideoPlatformAlarmTypeStddevFields struct {
	ID                 *int64 `json:"id"`
	VehicleAlarmDataID *int   `json:"vehicle_alarm_data_id"`
}

// aggregate stddev_pop on columns of table "video_platform_alarm_type"
type VideoPlatformAlarmTypeStddevPopFields struct {
	ID                 *int64 `json:"id"`
	VehicleAlarmDataID *int   `json:"vehicle_alarm_data_id"`
}

// aggregate stddev_samp on columns of table "video_platform_alarm_type"
type VideoPlatformAlarmTypeStddevSampFields struct {
	ID                 *int64 `json:"id"`
	VehicleAlarmDataID *int   `json:"vehicle_alarm_data_id"`
}

// aggregate sum on columns of table "video_platform_alarm_type"
type VideoPlatformAlarmTypeSumFields struct {
	ID                 *int64 `json:"id"`
	VehicleAlarmDataID *int   `json:"vehicle_alarm_data_id"`
}

// aggregate var_pop on columns of table "video_platform_alarm_type"
type VideoPlatformAlarmTypeVarPopFields struct {
	ID                 *int64 `json:"id"`
	VehicleAlarmDataID *int   `json:"vehicle_alarm_data_id"`
}

// aggregate var_samp on columns of table "video_platform_alarm_type"
type VideoPlatformAlarmTypeVarSampFields struct {
	ID                 *int64 `json:"id"`
	VehicleAlarmDataID *int   `json:"vehicle_alarm_data_id"`
}

// aggregate variance on columns of table "video_platform_alarm_type"
type VideoPlatformAlarmTypeVarianceFields struct {
	ID                 *int64 `json:"id"`
	VehicleAlarmDataID *int   `json:"vehicle_alarm_data_id"`
}

// aggregated selection of "voice_alarm_record"
type VoiceAlarmRecordAggregate struct {
	Aggregate *VoiceAlarmRecordAggregateFields `json:"aggregate"`
}

// aggregate fields of "voice_alarm_record"
type VoiceAlarmRecordAggregateFields struct {
	Avg        *VoiceAlarmRecordAvgFields        `json:"avg"`
	Count      *int                              `json:"count"`
	Max        *VoiceAlarmRecordMaxFields        `json:"max"`
	Min        *VoiceAlarmRecordMinFields        `json:"min"`
	Stddev     *VoiceAlarmRecordStddevFields     `json:"stddev"`
	StddevPop  *VoiceAlarmRecordStddevPopFields  `json:"stddev_pop"`
	StddevSamp *VoiceAlarmRecordStddevSampFields `json:"stddev_samp"`
	Sum        *VoiceAlarmRecordSumFields        `json:"sum"`
	VarPop     *VoiceAlarmRecordVarPopFields     `json:"var_pop"`
	VarSamp    *VoiceAlarmRecordVarSampFields    `json:"var_samp"`
	Variance   *VoiceAlarmRecordVarianceFields   `json:"variance"`
}

// aggregate avg on columns of table "voice_alarm_record"
type VoiceAlarmRecordAvgFields struct {
	ID *int64 `json:"id"`
}

// Boolean expression to filter rows from the table "blacklist_operation_record". All fields are combined with a logical 'voice_alarm_record'.
type VoiceAlarmRecordBoolExp struct {
	And                []*VoiceAlarmRecordBoolExp      `json:"_and"`
	Not                *VoiceAlarmRecordBoolExp        `json:"_not"`
	Or                 []*VoiceAlarmRecordBoolExp      `json:"_or"`
	ID                 *model.BigintComparisonExp      `json:"id"`
	VioceAlarmRecordID *model.StringComparisonExp      `json:"vioce_alarm_record_id"`
	VehicleID          *model.StringComparisonExp      `json:"vehicle_id"`
	AlarmTime          *model.TimestamptzComparisonExp `json:"alarm_time"`
	AlarmType          *model.StringComparisonExp      `json:"alarm_type"`
	RemindTime         *model.TimestamptzComparisonExp `json:"remind_time"`
	RemindContent      *model.StringComparisonExp      `json:"remind_content"`
	InputPerson        *model.StringComparisonExp      `json:"input_person"`
	InputTime          *model.TimestamptzComparisonExp `json:"input_time"`
	IsSuccess          *model.BooleanComparisonExp     `json:"is_success"`
	CreatedAt          *model.TimestamptzComparisonExp `json:"created_at"`
	CreatedBy          *model.StringComparisonExp      `json:"created_by"`
	UpdatedAt          *model.TimestamptzComparisonExp `json:"updated_at"`
	UpdatedBy          *model.StringComparisonExp      `json:"updated_by"`
	DeletedAt          *model.TimestamptzComparisonExp `json:"deleted_at"`
	DeletedBy          *model.StringComparisonExp      `json:"deleted_by"`
}

// input type for incrementing integer column in table "voice_alarm_record"
type VoiceAlarmRecordIncInput struct {
	ID *int64 `json:"id"`
}

// input type for inserting data into table "voice_alarm_record"
type VoiceAlarmRecordInsertInput struct {
	ID                 *int64     `json:"id"`
	VioceAlarmRecordID *string    `json:"vioce_alarm_record_id"`
	VehicleID          *string    `json:"vehicle_id"`
	AlarmTime          *time.Time `json:"alarm_time"`
	AlarmType          *string    `json:"alarm_type"`
	RemindTime         *time.Time `json:"remind_time"`
	RemindContent      *string    `json:"remind_content"`
	InputPerson        *string    `json:"input_person"`
	InputTime          *time.Time `json:"input_time"`
	IsSuccess          *bool      `json:"is_success"`
	CreatedAt          *time.Time `json:"created_at"`
	CreatedBy          *string    `json:"created_by"`
	UpdatedAt          *time.Time `json:"updated_at"`
	UpdatedBy          *string    `json:"updated_by"`
	DeletedAt          *time.Time `json:"deleted_at"`
	DeletedBy          *string    `json:"deleted_by"`
}

// aggregate max on columns of table "voice_alarm_record"
type VoiceAlarmRecordMaxFields struct {
	ID                 *int64     `json:"id"`
	VioceAlarmRecordID *string    `json:"vioce_alarm_record_id"`
	VehicleID          *string    `json:"vehicle_id"`
	AlarmTime          *time.Time `json:"alarm_time"`
	AlarmType          *string    `json:"alarm_type"`
	RemindTime         *time.Time `json:"remind_time"`
	RemindContent      *string    `json:"remind_content"`
	InputPerson        *string    `json:"input_person"`
	InputTime          *time.Time `json:"input_time"`
	IsSuccess          *bool      `json:"is_success"`
	CreatedAt          *time.Time `json:"created_at"`
	CreatedBy          *string    `json:"created_by"`
	UpdatedAt          *time.Time `json:"updated_at"`
	UpdatedBy          *string    `json:"updated_by"`
	DeletedAt          *time.Time `json:"deleted_at"`
	DeletedBy          *string    `json:"deleted_by"`
}

// aggregate min on columns of table "voice_alarm_record"
type VoiceAlarmRecordMinFields struct {
	ID                 *int64     `json:"id"`
	VioceAlarmRecordID *string    `json:"vioce_alarm_record_id"`
	VehicleID          *string    `json:"vehicle_id"`
	AlarmTime          *time.Time `json:"alarm_time"`
	AlarmType          *string    `json:"alarm_type"`
	RemindTime         *time.Time `json:"remind_time"`
	RemindContent      *string    `json:"remind_content"`
	InputPerson        *string    `json:"input_person"`
	InputTime          *time.Time `json:"input_time"`
	IsSuccess          *bool      `json:"is_success"`
	CreatedAt          *time.Time `json:"created_at"`
	CreatedBy          *string    `json:"created_by"`
	UpdatedAt          *time.Time `json:"updated_at"`
	UpdatedBy          *string    `json:"updated_by"`
	DeletedAt          *time.Time `json:"deleted_at"`
	DeletedBy          *string    `json:"deleted_by"`
}

// response of any mutation on the table "voice_alarm_record"
type VoiceAlarmRecordMutationResponse struct {
	AffectedRows int                        `json:"affected_rows"`
	Returning    []*model1.VoiceAlarmRecord `json:"returning"`
}

// ordering options when selecting data from "voice_alarm_record"
type VoiceAlarmRecordOrderBy struct {
	ID                 *model.OrderBy `json:"id"`
	VioceAlarmRecordID *model.OrderBy `json:"vioce_alarm_record_id"`
	VehicleID          *model.OrderBy `json:"vehicle_id"`
	AlarmTime          *model.OrderBy `json:"alarm_time"`
	AlarmType          *model.OrderBy `json:"alarm_type"`
	RemindTime         *model.OrderBy `json:"remind_time"`
	RemindContent      *model.OrderBy `json:"remind_content"`
	InputPerson        *model.OrderBy `json:"input_person"`
	InputTime          *model.OrderBy `json:"input_time"`
	IsSuccess          *model.OrderBy `json:"is_success"`
	CreatedAt          *model.OrderBy `json:"created_at"`
	CreatedBy          *model.OrderBy `json:"created_by"`
	UpdatedAt          *model.OrderBy `json:"updated_at"`
	UpdatedBy          *model.OrderBy `json:"updated_by"`
	DeletedAt          *model.OrderBy `json:"deleted_at"`
	DeletedBy          *model.OrderBy `json:"deleted_by"`
}

// input type for updating data in table "voice_alarm_record"
type VoiceAlarmRecordSetInput struct {
	ID                 *int64     `json:"id"`
	VioceAlarmRecordID *string    `json:"vioce_alarm_record_id"`
	VehicleID          *string    `json:"vehicle_id"`
	AlarmTime          *time.Time `json:"alarm_time"`
	AlarmType          *string    `json:"alarm_type"`
	RemindTime         *time.Time `json:"remind_time"`
	RemindContent      *string    `json:"remind_content"`
	InputPerson        *string    `json:"input_person"`
	InputTime          *time.Time `json:"input_time"`
	IsSuccess          *bool      `json:"is_success"`
	CreatedAt          *time.Time `json:"created_at"`
	CreatedBy          *string    `json:"created_by"`
	UpdatedAt          *time.Time `json:"updated_at"`
	UpdatedBy          *string    `json:"updated_by"`
	DeletedAt          *time.Time `json:"deleted_at"`
	DeletedBy          *string    `json:"deleted_by"`
}

// aggregate stddev on columns of table "voice_alarm_record"
type VoiceAlarmRecordStddevFields struct {
	ID *int64 `json:"id"`
}

// aggregate stddev_pop on columns of table "voice_alarm_record"
type VoiceAlarmRecordStddevPopFields struct {
	ID *int64 `json:"id"`
}

// aggregate stddev_samp on columns of table "voice_alarm_record"
type VoiceAlarmRecordStddevSampFields struct {
	ID *int64 `json:"id"`
}

// aggregate sum on columns of table "voice_alarm_record"
type VoiceAlarmRecordSumFields struct {
	ID *int64 `json:"id"`
}

// aggregate var_pop on columns of table "voice_alarm_record"
type VoiceAlarmRecordVarPopFields struct {
	ID *int64 `json:"id"`
}

// aggregate var_samp on columns of table "voice_alarm_record"
type VoiceAlarmRecordVarSampFields struct {
	ID *int64 `json:"id"`
}

// aggregate variance on columns of table "voice_alarm_record"
type VoiceAlarmRecordVarianceFields struct {
	ID *int64 `json:"id"`
}

// 可选select
type AlarmProcessingRecordSelectColumn string

const (
	// 按指定方法生成                                               ( 主键                       )
	AlarmProcessingRecordSelectColumnID AlarmProcessingRecordSelectColumn = "id"
	// vehicle_alarm_data报警数据表的alarm_data_id              (                            )
	AlarmProcessingRecordSelectColumnAlarmDataID AlarmProcessingRecordSelectColumn = "alarm_data_id"
	// alarm_supervision_picture_ upload报警监管图片上传表的alarm_supervision_picture_id (                            )
	AlarmProcessingRecordSelectColumnAlarmSupervisionPictureID AlarmProcessingRecordSelectColumn = "alarm_supervision_picture_id"
	// 处理内容                                                     (                            )
	AlarmProcessingRecordSelectColumnProcessingContent AlarmProcessingRecordSelectColumn = "processing_content"
	// 处理时间                                                     (                            )
	AlarmProcessingRecordSelectColumnProcessingTime AlarmProcessingRecordSelectColumn = "processing_time"
	// 处理类型  1.超速报警  2.疲劳驾驶  3.工程报警  4.超三天断电报警  5.进出区域报警  6.进出区域报警  7.安检到期报警  11.进出工地报警 (                            )
	AlarmProcessingRecordSelectColumnProcessingType AlarmProcessingRecordSelectColumn = "processing_type"
	// 操作用户                                                     ( system_user表的user_id )
	AlarmProcessingRecordSelectColumnOperationUser AlarmProcessingRecordSelectColumn = "operation_user"
	// 是否短信推送                                                 (                            )
	AlarmProcessingRecordSelectColumnIsSmsPush AlarmProcessingRecordSelectColumn = "is_sms_push"
	// 是否通报                                                     (                            )
	AlarmProcessingRecordSelectColumnIsNotify AlarmProcessingRecordSelectColumn = "is_notify"
	// 是否语音通知                                                 (                            )
	AlarmProcessingRecordSelectColumnIsAnnounce AlarmProcessingRecordSelectColumn = "is_announce"
	// 是否APP推送                                                  (                            )
	AlarmProcessingRecordSelectColumnIsAppPush AlarmProcessingRecordSelectColumn = "is_app_push"
	// 通报内容                                                     (                            )
	AlarmProcessingRecordSelectColumnNotifyContent AlarmProcessingRecordSelectColumn = "notify_content"
	// 语音内容                                                     (                            )
	AlarmProcessingRecordSelectColumnAnnounceContent AlarmProcessingRecordSelectColumn = "announce_content"
	// APP推送内容                                                  (                            )
	AlarmProcessingRecordSelectColumnAppPushContent AlarmProcessingRecordSelectColumn = "app_push_content"
	// 处置方式                                                     ( 处置方式字典           )
	AlarmProcessingRecordSelectColumnDisposalMethod AlarmProcessingRecordSelectColumn = "disposal_method"
	// 处置结果                                                     (                            )
	AlarmProcessingRecordSelectColumnDisposalResult AlarmProcessingRecordSelectColumn = "disposal_result"
	// 是否删除                                                     ( false                      )
	AlarmProcessingRecordSelectColumnIsDeleted AlarmProcessingRecordSelectColumn = "is_deleted"
	// 创建时间                                                     (                            )
	AlarmProcessingRecordSelectColumnCreatedAt AlarmProcessingRecordSelectColumn = "created_at"
	// 创建人                                                       ( system_user表的user_id )
	AlarmProcessingRecordSelectColumnCreatedBy AlarmProcessingRecordSelectColumn = "created_by"
	// 修改时间                                                     (                            )
	AlarmProcessingRecordSelectColumnUpdatedAt AlarmProcessingRecordSelectColumn = "updated_at"
	// 修改人                                                       ( system_user表的user_id )
	AlarmProcessingRecordSelectColumnUpdatedBy AlarmProcessingRecordSelectColumn = "updated_by"
	// 删除时间                                                     (                            )
	AlarmProcessingRecordSelectColumnDeletedAt AlarmProcessingRecordSelectColumn = "deleted_at"
	// 删除人                                                       ( system_user表的user_id )
	AlarmProcessingRecordSelectColumnDeletedBy AlarmProcessingRecordSelectColumn = "deleted_by"
)

var AllAlarmProcessingRecordSelectColumn = []AlarmProcessingRecordSelectColumn{
	AlarmProcessingRecordSelectColumnID,
	AlarmProcessingRecordSelectColumnAlarmDataID,
	AlarmProcessingRecordSelectColumnAlarmSupervisionPictureID,
	AlarmProcessingRecordSelectColumnProcessingContent,
	AlarmProcessingRecordSelectColumnProcessingTime,
	AlarmProcessingRecordSelectColumnProcessingType,
	AlarmProcessingRecordSelectColumnOperationUser,
	AlarmProcessingRecordSelectColumnIsSmsPush,
	AlarmProcessingRecordSelectColumnIsNotify,
	AlarmProcessingRecordSelectColumnIsAnnounce,
	AlarmProcessingRecordSelectColumnIsAppPush,
	AlarmProcessingRecordSelectColumnNotifyContent,
	AlarmProcessingRecordSelectColumnAnnounceContent,
	AlarmProcessingRecordSelectColumnAppPushContent,
	AlarmProcessingRecordSelectColumnDisposalMethod,
	AlarmProcessingRecordSelectColumnDisposalResult,
	AlarmProcessingRecordSelectColumnIsDeleted,
	AlarmProcessingRecordSelectColumnCreatedAt,
	AlarmProcessingRecordSelectColumnCreatedBy,
	AlarmProcessingRecordSelectColumnUpdatedAt,
	AlarmProcessingRecordSelectColumnUpdatedBy,
	AlarmProcessingRecordSelectColumnDeletedAt,
	AlarmProcessingRecordSelectColumnDeletedBy,
}

func (e AlarmProcessingRecordSelectColumn) IsValid() bool {
	switch e {
	case AlarmProcessingRecordSelectColumnID, AlarmProcessingRecordSelectColumnAlarmDataID, AlarmProcessingRecordSelectColumnAlarmSupervisionPictureID, AlarmProcessingRecordSelectColumnProcessingContent, AlarmProcessingRecordSelectColumnProcessingTime, AlarmProcessingRecordSelectColumnProcessingType, AlarmProcessingRecordSelectColumnOperationUser, AlarmProcessingRecordSelectColumnIsSmsPush, AlarmProcessingRecordSelectColumnIsNotify, AlarmProcessingRecordSelectColumnIsAnnounce, AlarmProcessingRecordSelectColumnIsAppPush, AlarmProcessingRecordSelectColumnNotifyContent, AlarmProcessingRecordSelectColumnAnnounceContent, AlarmProcessingRecordSelectColumnAppPushContent, AlarmProcessingRecordSelectColumnDisposalMethod, AlarmProcessingRecordSelectColumnDisposalResult, AlarmProcessingRecordSelectColumnIsDeleted, AlarmProcessingRecordSelectColumnCreatedAt, AlarmProcessingRecordSelectColumnCreatedBy, AlarmProcessingRecordSelectColumnUpdatedAt, AlarmProcessingRecordSelectColumnUpdatedBy, AlarmProcessingRecordSelectColumnDeletedAt, AlarmProcessingRecordSelectColumnDeletedBy:
		return true
	}
	return false
}

func (e AlarmProcessingRecordSelectColumn) String() string {
	return string(e)
}

func (e *AlarmProcessingRecordSelectColumn) UnmarshalGQL(v interface{}) error {
	str, ok := v.(string)
	if !ok {
		return fmt.Errorf("enums must be strings")
	}

	*e = AlarmProcessingRecordSelectColumn(str)
	if !e.IsValid() {
		return fmt.Errorf("%s is not a valid AlarmProcessingRecordSelectColumn", str)
	}
	return nil
}

func (e AlarmProcessingRecordSelectColumn) MarshalGQL(w io.Writer) {
	fmt.Fprint(w, strconv.Quote(e.String()))
}

// 可选select
type AlarmSupervisionPictureUploadSelectColumn string

const (
	// 按指定方法生成                                               ( 主键                                 )
	AlarmSupervisionPictureUploadSelectColumnID AlarmSupervisionPictureUploadSelectColumn = "id"
	// 报警监管图片上传外部编码，由golang程序生成的xid，暴露到外部使用 ( 联合主键                             )
	AlarmSupervisionPictureUploadSelectColumnAlarmSupervisionPictureID AlarmSupervisionPictureUploadSelectColumn = "alarm_supervision_picture_id"
	// 车辆ID                                                       ( vehicle_info表vehicle_id         )
	AlarmSupervisionPictureUploadSelectColumnVehicleID AlarmSupervisionPictureUploadSelectColumn = "vehicle_id"
	// 驾驶员id                                                     ( driver_info 表的driver_id        )
	AlarmSupervisionPictureUploadSelectColumnDriverID AlarmSupervisionPictureUploadSelectColumn = "driver_id"
	// 所在企业id                                                   ( enterprise_info表的enterprise_id )
	AlarmSupervisionPictureUploadSelectColumnEnterpriseID AlarmSupervisionPictureUploadSelectColumn = "enterprise_id"
	// 摄像头ID                                                     ( 摄像头ID字典                     )
	AlarmSupervisionPictureUploadSelectColumnCameraID AlarmSupervisionPictureUploadSelectColumn = "camera_id"
	// 拍照条件                                                     ( 拍照条件字典                     )
	AlarmSupervisionPictureUploadSelectColumnPhotoCondition AlarmSupervisionPictureUploadSelectColumn = "photo_condition"
	// 终端上报时间                                                 (                                      )
	AlarmSupervisionPictureUploadSelectColumnUpdateTime AlarmSupervisionPictureUploadSelectColumn = "update_time"
	// 报警监控图片名称                                             (                                      )
	AlarmSupervisionPictureUploadSelectColumnMonitoringPicName AlarmSupervisionPictureUploadSelectColumn = "monitoring_pic_name"
	// 报警监控图片地址                                             (                                      )
	AlarmSupervisionPictureUploadSelectColumnMonitoringPicAddress AlarmSupervisionPictureUploadSelectColumn = "monitoring_pic_address"
	// 报警监控图片上传时间                                         (                                      )
	AlarmSupervisionPictureUploadSelectColumnMonitoringPicUploadTime AlarmSupervisionPictureUploadSelectColumn = "monitoring_pic_upload_time"
	// 终端IMEI                                                     ( 国际移动设备标识别码                 )
	AlarmSupervisionPictureUploadSelectColumnImel AlarmSupervisionPictureUploadSelectColumn = "imel"
	// SIM卡号                                                      (                                      )
	AlarmSupervisionPictureUploadSelectColumnSimNumber AlarmSupervisionPictureUploadSelectColumn = "sim_number"
	// 创建时间                                                     (                                      )
	AlarmSupervisionPictureUploadSelectColumnCreatedAt AlarmSupervisionPictureUploadSelectColumn = "created_at"
	// 创建人                                                       ( system_user表的user_id           )
	AlarmSupervisionPictureUploadSelectColumnCreatedBy AlarmSupervisionPictureUploadSelectColumn = "created_by"
	// 修改时间                                                     (                                      )
	AlarmSupervisionPictureUploadSelectColumnUpdatedAt AlarmSupervisionPictureUploadSelectColumn = "updated_at"
	// 修改人                                                       ( system_user表的user_id           )
	AlarmSupervisionPictureUploadSelectColumnUpdatedBy AlarmSupervisionPictureUploadSelectColumn = "updated_by"
	// 删除时间                                                     (                                      )
	AlarmSupervisionPictureUploadSelectColumnDeletedAt AlarmSupervisionPictureUploadSelectColumn = "deleted_at"
	// 删除人                                                       ( system_user表的user_id           )
	AlarmSupervisionPictureUploadSelectColumnDeletedBy AlarmSupervisionPictureUploadSelectColumn = "deleted_by"
)

var AllAlarmSupervisionPictureUploadSelectColumn = []AlarmSupervisionPictureUploadSelectColumn{
	AlarmSupervisionPictureUploadSelectColumnID,
	AlarmSupervisionPictureUploadSelectColumnAlarmSupervisionPictureID,
	AlarmSupervisionPictureUploadSelectColumnVehicleID,
	AlarmSupervisionPictureUploadSelectColumnDriverID,
	AlarmSupervisionPictureUploadSelectColumnEnterpriseID,
	AlarmSupervisionPictureUploadSelectColumnCameraID,
	AlarmSupervisionPictureUploadSelectColumnPhotoCondition,
	AlarmSupervisionPictureUploadSelectColumnUpdateTime,
	AlarmSupervisionPictureUploadSelectColumnMonitoringPicName,
	AlarmSupervisionPictureUploadSelectColumnMonitoringPicAddress,
	AlarmSupervisionPictureUploadSelectColumnMonitoringPicUploadTime,
	AlarmSupervisionPictureUploadSelectColumnImel,
	AlarmSupervisionPictureUploadSelectColumnSimNumber,
	AlarmSupervisionPictureUploadSelectColumnCreatedAt,
	AlarmSupervisionPictureUploadSelectColumnCreatedBy,
	AlarmSupervisionPictureUploadSelectColumnUpdatedAt,
	AlarmSupervisionPictureUploadSelectColumnUpdatedBy,
	AlarmSupervisionPictureUploadSelectColumnDeletedAt,
	AlarmSupervisionPictureUploadSelectColumnDeletedBy,
}

func (e AlarmSupervisionPictureUploadSelectColumn) IsValid() bool {
	switch e {
	case AlarmSupervisionPictureUploadSelectColumnID, AlarmSupervisionPictureUploadSelectColumnAlarmSupervisionPictureID, AlarmSupervisionPictureUploadSelectColumnVehicleID, AlarmSupervisionPictureUploadSelectColumnDriverID, AlarmSupervisionPictureUploadSelectColumnEnterpriseID, AlarmSupervisionPictureUploadSelectColumnCameraID, AlarmSupervisionPictureUploadSelectColumnPhotoCondition, AlarmSupervisionPictureUploadSelectColumnUpdateTime, AlarmSupervisionPictureUploadSelectColumnMonitoringPicName, AlarmSupervisionPictureUploadSelectColumnMonitoringPicAddress, AlarmSupervisionPictureUploadSelectColumnMonitoringPicUploadTime, AlarmSupervisionPictureUploadSelectColumnImel, AlarmSupervisionPictureUploadSelectColumnSimNumber, AlarmSupervisionPictureUploadSelectColumnCreatedAt, AlarmSupervisionPictureUploadSelectColumnCreatedBy, AlarmSupervisionPictureUploadSelectColumnUpdatedAt, AlarmSupervisionPictureUploadSelectColumnUpdatedBy, AlarmSupervisionPictureUploadSelectColumnDeletedAt, AlarmSupervisionPictureUploadSelectColumnDeletedBy:
		return true
	}
	return false
}

func (e AlarmSupervisionPictureUploadSelectColumn) String() string {
	return string(e)
}

func (e *AlarmSupervisionPictureUploadSelectColumn) UnmarshalGQL(v interface{}) error {
	str, ok := v.(string)
	if !ok {
		return fmt.Errorf("enums must be strings")
	}

	*e = AlarmSupervisionPictureUploadSelectColumn(str)
	if !e.IsValid() {
		return fmt.Errorf("%s is not a valid AlarmSupervisionPictureUploadSelectColumn", str)
	}
	return nil
}

func (e AlarmSupervisionPictureUploadSelectColumn) MarshalGQL(w io.Writer) {
	fmt.Fprint(w, strconv.Quote(e.String()))
}

// 可选select
type DistrictAlarmContentPushSelectColumn string

const (
	// 按指定方法生成                                  ( 主键                       )
	DistrictAlarmContentPushSelectColumnID DistrictAlarmContentPushSelectColumn = "id"
	// vehicle_alarm_data报警数据表的alarm_data_id (                            )
	DistrictAlarmContentPushSelectColumnAlarmDataID DistrictAlarmContentPushSelectColumn = "alarm_data_id"
	// 报警类型                                        ( 报警类型字典           )
	DistrictAlarmContentPushSelectColumnAlarmType DistrictAlarmContentPushSelectColumn = "alarm_type"
	// 内容                                            (                            )
	DistrictAlarmContentPushSelectColumnAlarmContent DistrictAlarmContentPushSelectColumn = "alarm_content"
	// 省份ID                                          ( 省份表province_id      )
	DistrictAlarmContentPushSelectColumnProvinceID DistrictAlarmContentPushSelectColumn = "province_id"
	// 城市ID                                          ( 城市表city_id          )
	DistrictAlarmContentPushSelectColumnCityID DistrictAlarmContentPushSelectColumn = "city_id"
	// 区ID                                            ( 区域表district_id      )
	DistrictAlarmContentPushSelectColumnDistrictID DistrictAlarmContentPushSelectColumn = "district_id"
	// 是否删除                                        ( false                      )
	DistrictAlarmContentPushSelectColumnIsDeleted DistrictAlarmContentPushSelectColumn = "is_deleted"
	// 创建时间                                        (                            )
	DistrictAlarmContentPushSelectColumnCreatedAt DistrictAlarmContentPushSelectColumn = "created_at"
	// 创建人                                          ( system_user表的user_id )
	DistrictAlarmContentPushSelectColumnCreatedBy DistrictAlarmContentPushSelectColumn = "created_by"
	// 修改时间                                        (                            )
	DistrictAlarmContentPushSelectColumnUpdatedAt DistrictAlarmContentPushSelectColumn = "updated_at"
	// 修改人                                          ( system_user表的user_id )
	DistrictAlarmContentPushSelectColumnUpdatedBy DistrictAlarmContentPushSelectColumn = "updated_by"
	// 删除时间                                        (                            )
	DistrictAlarmContentPushSelectColumnDeletedAt DistrictAlarmContentPushSelectColumn = "deleted_at"
	// 删除人                                          ( system_user表的user_id )
	DistrictAlarmContentPushSelectColumnDeletedBy DistrictAlarmContentPushSelectColumn = "deleted_by"
)

var AllDistrictAlarmContentPushSelectColumn = []DistrictAlarmContentPushSelectColumn{
	DistrictAlarmContentPushSelectColumnID,
	DistrictAlarmContentPushSelectColumnAlarmDataID,
	DistrictAlarmContentPushSelectColumnAlarmType,
	DistrictAlarmContentPushSelectColumnAlarmContent,
	DistrictAlarmContentPushSelectColumnProvinceID,
	DistrictAlarmContentPushSelectColumnCityID,
	DistrictAlarmContentPushSelectColumnDistrictID,
	DistrictAlarmContentPushSelectColumnIsDeleted,
	DistrictAlarmContentPushSelectColumnCreatedAt,
	DistrictAlarmContentPushSelectColumnCreatedBy,
	DistrictAlarmContentPushSelectColumnUpdatedAt,
	DistrictAlarmContentPushSelectColumnUpdatedBy,
	DistrictAlarmContentPushSelectColumnDeletedAt,
	DistrictAlarmContentPushSelectColumnDeletedBy,
}

func (e DistrictAlarmContentPushSelectColumn) IsValid() bool {
	switch e {
	case DistrictAlarmContentPushSelectColumnID, DistrictAlarmContentPushSelectColumnAlarmDataID, DistrictAlarmContentPushSelectColumnAlarmType, DistrictAlarmContentPushSelectColumnAlarmContent, DistrictAlarmContentPushSelectColumnProvinceID, DistrictAlarmContentPushSelectColumnCityID, DistrictAlarmContentPushSelectColumnDistrictID, DistrictAlarmContentPushSelectColumnIsDeleted, DistrictAlarmContentPushSelectColumnCreatedAt, DistrictAlarmContentPushSelectColumnCreatedBy, DistrictAlarmContentPushSelectColumnUpdatedAt, DistrictAlarmContentPushSelectColumnUpdatedBy, DistrictAlarmContentPushSelectColumnDeletedAt, DistrictAlarmContentPushSelectColumnDeletedBy:
		return true
	}
	return false
}

func (e DistrictAlarmContentPushSelectColumn) String() string {
	return string(e)
}

func (e *DistrictAlarmContentPushSelectColumn) UnmarshalGQL(v interface{}) error {
	str, ok := v.(string)
	if !ok {
		return fmt.Errorf("enums must be strings")
	}

	*e = DistrictAlarmContentPushSelectColumn(str)
	if !e.IsValid() {
		return fmt.Errorf("%s is not a valid DistrictAlarmContentPushSelectColumn", str)
	}
	return nil
}

func (e DistrictAlarmContentPushSelectColumn) MarshalGQL(w io.Writer) {
	fmt.Fprint(w, strconv.Quote(e.String()))
}

// 可选select
type EnterpriseAlarmSendPoliceSelectColumn string

const (
	// 按指定方法生成                                  ( 主键                                 )
	EnterpriseAlarmSendPoliceSelectColumnID EnterpriseAlarmSendPoliceSelectColumn = "id"
	// 外部编码，由golang程序生成的xid，暴露到外部使用 ( 联合主键                             )
	EnterpriseAlarmSendPoliceSelectColumnEnterpriseAlarmSendPoliceID EnterpriseAlarmSendPoliceSelectColumn = "enterprise_alarm_send_police_id"
	// 所在企业id                                      ( enterprise_info表的enterprise_id )
	EnterpriseAlarmSendPoliceSelectColumnEnterpriseID EnterpriseAlarmSendPoliceSelectColumn = "enterprise_id"
	// 企业名称                                        (                                      )
	EnterpriseAlarmSendPoliceSelectColumnEnterpriseName EnterpriseAlarmSendPoliceSelectColumn = "enterprise_name"
	// 企业联系人                                      (                                      )
	EnterpriseAlarmSendPoliceSelectColumnEnterpriseContact EnterpriseAlarmSendPoliceSelectColumn = "enterprise_contact"
	// 企业联系电话                                    (                                      )
	EnterpriseAlarmSendPoliceSelectColumnEnterprisePhone EnterpriseAlarmSendPoliceSelectColumn = "enterprise_phone"
	// 交警                                            (                                      )
	EnterpriseAlarmSendPoliceSelectColumnPolice EnterpriseAlarmSendPoliceSelectColumn = "police"
	// 交警联系电话                                    (                                      )
	EnterpriseAlarmSendPoliceSelectColumnPolicePhone EnterpriseAlarmSendPoliceSelectColumn = "police_phone"
	// 交警所属部门                                    (                                      )
	EnterpriseAlarmSendPoliceSelectColumnPhliceDepartment EnterpriseAlarmSendPoliceSelectColumn = "phlice_department"
	// 创建时间                                        (                                      )
	EnterpriseAlarmSendPoliceSelectColumnCreatedAt EnterpriseAlarmSendPoliceSelectColumn = "created_at"
	// 创建人                                          ( system_user表的user_id           )
	EnterpriseAlarmSendPoliceSelectColumnCreatedBy EnterpriseAlarmSendPoliceSelectColumn = "created_by"
	// 修改时间                                        (                                      )
	EnterpriseAlarmSendPoliceSelectColumnUpdatedAt EnterpriseAlarmSendPoliceSelectColumn = "updated_at"
	// 修改人                                          ( system_user表的user_id           )
	EnterpriseAlarmSendPoliceSelectColumnUpdatedBy EnterpriseAlarmSendPoliceSelectColumn = "updated_by"
	// 删除时间                                        (                                      )
	EnterpriseAlarmSendPoliceSelectColumnDeletedAt EnterpriseAlarmSendPoliceSelectColumn = "deleted_at"
	// 删除人                                          ( system_user表的user_id           )
	EnterpriseAlarmSendPoliceSelectColumnDeletedBy EnterpriseAlarmSendPoliceSelectColumn = "deleted_by"
)

var AllEnterpriseAlarmSendPoliceSelectColumn = []EnterpriseAlarmSendPoliceSelectColumn{
	EnterpriseAlarmSendPoliceSelectColumnID,
	EnterpriseAlarmSendPoliceSelectColumnEnterpriseAlarmSendPoliceID,
	EnterpriseAlarmSendPoliceSelectColumnEnterpriseID,
	EnterpriseAlarmSendPoliceSelectColumnEnterpriseName,
	EnterpriseAlarmSendPoliceSelectColumnEnterpriseContact,
	EnterpriseAlarmSendPoliceSelectColumnEnterprisePhone,
	EnterpriseAlarmSendPoliceSelectColumnPolice,
	EnterpriseAlarmSendPoliceSelectColumnPolicePhone,
	EnterpriseAlarmSendPoliceSelectColumnPhliceDepartment,
	EnterpriseAlarmSendPoliceSelectColumnCreatedAt,
	EnterpriseAlarmSendPoliceSelectColumnCreatedBy,
	EnterpriseAlarmSendPoliceSelectColumnUpdatedAt,
	EnterpriseAlarmSendPoliceSelectColumnUpdatedBy,
	EnterpriseAlarmSendPoliceSelectColumnDeletedAt,
	EnterpriseAlarmSendPoliceSelectColumnDeletedBy,
}

func (e EnterpriseAlarmSendPoliceSelectColumn) IsValid() bool {
	switch e {
	case EnterpriseAlarmSendPoliceSelectColumnID, EnterpriseAlarmSendPoliceSelectColumnEnterpriseAlarmSendPoliceID, EnterpriseAlarmSendPoliceSelectColumnEnterpriseID, EnterpriseAlarmSendPoliceSelectColumnEnterpriseName, EnterpriseAlarmSendPoliceSelectColumnEnterpriseContact, EnterpriseAlarmSendPoliceSelectColumnEnterprisePhone, EnterpriseAlarmSendPoliceSelectColumnPolice, EnterpriseAlarmSendPoliceSelectColumnPolicePhone, EnterpriseAlarmSendPoliceSelectColumnPhliceDepartment, EnterpriseAlarmSendPoliceSelectColumnCreatedAt, EnterpriseAlarmSendPoliceSelectColumnCreatedBy, EnterpriseAlarmSendPoliceSelectColumnUpdatedAt, EnterpriseAlarmSendPoliceSelectColumnUpdatedBy, EnterpriseAlarmSendPoliceSelectColumnDeletedAt, EnterpriseAlarmSendPoliceSelectColumnDeletedBy:
		return true
	}
	return false
}

func (e EnterpriseAlarmSendPoliceSelectColumn) String() string {
	return string(e)
}

func (e *EnterpriseAlarmSendPoliceSelectColumn) UnmarshalGQL(v interface{}) error {
	str, ok := v.(string)
	if !ok {
		return fmt.Errorf("enums must be strings")
	}

	*e = EnterpriseAlarmSendPoliceSelectColumn(str)
	if !e.IsValid() {
		return fmt.Errorf("%s is not a valid EnterpriseAlarmSendPoliceSelectColumn", str)
	}
	return nil
}

func (e EnterpriseAlarmSendPoliceSelectColumn) MarshalGQL(w io.Writer) {
	fmt.Fprint(w, strconv.Quote(e.String()))
}

// 可选select
type OfflineAlarmRegistrationSelectColumn string

const (
	// 按指定方法生成                                  ( 主键                       )
	OfflineAlarmRegistrationSelectColumnID OfflineAlarmRegistrationSelectColumn = "id"
	// 外部编码，由golang程序生成的xid，暴露到外部使用 ( 联合主键                   )
	OfflineAlarmRegistrationSelectColumnOfflineAlarmRegistrationID OfflineAlarmRegistrationSelectColumn = "offline_alarm_registration_id"
	// vehicle_info 车辆信息表 的vehicle_id        (                            )
	OfflineAlarmRegistrationSelectColumnVehicleID OfflineAlarmRegistrationSelectColumn = "vehicle_id"
	// 离线开始时间                                    (                            )
	OfflineAlarmRegistrationSelectColumnOfflineStartTime OfflineAlarmRegistrationSelectColumn = "offline_start_time"
	// 离线结束时间                                    (                            )
	OfflineAlarmRegistrationSelectColumnOfflineEndTime OfflineAlarmRegistrationSelectColumn = "offline_end_time"
	// 登记用户                                        ( system_user表的user_id )
	OfflineAlarmRegistrationSelectColumnRegistrationUser OfflineAlarmRegistrationSelectColumn = "registration_user"
	// 登记时间                                        (                            )
	OfflineAlarmRegistrationSelectColumnRegistrationTime OfflineAlarmRegistrationSelectColumn = "registration_time"
	// 短信发送内容                                    (                            )
	OfflineAlarmRegistrationSelectColumnSmsContent OfflineAlarmRegistrationSelectColumn = "sms_content"
	// 电话提醒内容                                    (                            )
	OfflineAlarmRegistrationSelectColumnPhoneReminderContent OfflineAlarmRegistrationSelectColumn = "phone_reminder_content"
	// 短信发送时间                                    (                            )
	OfflineAlarmRegistrationSelectColumnSmsSendTime OfflineAlarmRegistrationSelectColumn = "sms_send_time"
	// 电话提醒时间                                    (                            )
	OfflineAlarmRegistrationSelectColumnPhoneReminderTime OfflineAlarmRegistrationSelectColumn = "phone_reminder_time"
	// 离线原因                                        (                            )
	OfflineAlarmRegistrationSelectColumnOfflineReason OfflineAlarmRegistrationSelectColumn = "offline_reason"
	// 报警类型                                        ( 报警类型字典           )
	OfflineAlarmRegistrationSelectColumnAlarmType OfflineAlarmRegistrationSelectColumn = "alarm_type"
	// 是否登记                                        (                            )
	OfflineAlarmRegistrationSelectColumnIsRegistration OfflineAlarmRegistrationSelectColumn = "is_registration"
	// 是否结束报警                                    (                            )
	OfflineAlarmRegistrationSelectColumnIsEndAlarm OfflineAlarmRegistrationSelectColumn = "is_end_alarm"
	// 是否发送短信                                    (                            )
	OfflineAlarmRegistrationSelectColumnIsSendSms OfflineAlarmRegistrationSelectColumn = "is_send_sms"
	// 是否需要维护                                    (                            )
	OfflineAlarmRegistrationSelectColumnIsNeedMaintain OfflineAlarmRegistrationSelectColumn = "is_need_maintain"
	// 创建时间                                        (                            )
	OfflineAlarmRegistrationSelectColumnCreatedAt OfflineAlarmRegistrationSelectColumn = "created_at"
	// 创建人                                          ( system_user表的user_id )
	OfflineAlarmRegistrationSelectColumnCreatedBy OfflineAlarmRegistrationSelectColumn = "created_by"
	// 修改时间                                        (                            )
	OfflineAlarmRegistrationSelectColumnUpdatedAt OfflineAlarmRegistrationSelectColumn = "updated_at"
	// 修改人                                          ( system_user表的user_id )
	OfflineAlarmRegistrationSelectColumnUpdatedBy OfflineAlarmRegistrationSelectColumn = "updated_by"
	// 删除时间                                        (                            )
	OfflineAlarmRegistrationSelectColumnDeletedAt OfflineAlarmRegistrationSelectColumn = "deleted_at"
	// 删除人                                          ( system_user表的user_id )
	OfflineAlarmRegistrationSelectColumnDeletedBy OfflineAlarmRegistrationSelectColumn = "deleted_by"
)

var AllOfflineAlarmRegistrationSelectColumn = []OfflineAlarmRegistrationSelectColumn{
	OfflineAlarmRegistrationSelectColumnID,
	OfflineAlarmRegistrationSelectColumnOfflineAlarmRegistrationID,
	OfflineAlarmRegistrationSelectColumnVehicleID,
	OfflineAlarmRegistrationSelectColumnOfflineStartTime,
	OfflineAlarmRegistrationSelectColumnOfflineEndTime,
	OfflineAlarmRegistrationSelectColumnRegistrationUser,
	OfflineAlarmRegistrationSelectColumnRegistrationTime,
	OfflineAlarmRegistrationSelectColumnSmsContent,
	OfflineAlarmRegistrationSelectColumnPhoneReminderContent,
	OfflineAlarmRegistrationSelectColumnSmsSendTime,
	OfflineAlarmRegistrationSelectColumnPhoneReminderTime,
	OfflineAlarmRegistrationSelectColumnOfflineReason,
	OfflineAlarmRegistrationSelectColumnAlarmType,
	OfflineAlarmRegistrationSelectColumnIsRegistration,
	OfflineAlarmRegistrationSelectColumnIsEndAlarm,
	OfflineAlarmRegistrationSelectColumnIsSendSms,
	OfflineAlarmRegistrationSelectColumnIsNeedMaintain,
	OfflineAlarmRegistrationSelectColumnCreatedAt,
	OfflineAlarmRegistrationSelectColumnCreatedBy,
	OfflineAlarmRegistrationSelectColumnUpdatedAt,
	OfflineAlarmRegistrationSelectColumnUpdatedBy,
	OfflineAlarmRegistrationSelectColumnDeletedAt,
	OfflineAlarmRegistrationSelectColumnDeletedBy,
}

func (e OfflineAlarmRegistrationSelectColumn) IsValid() bool {
	switch e {
	case OfflineAlarmRegistrationSelectColumnID, OfflineAlarmRegistrationSelectColumnOfflineAlarmRegistrationID, OfflineAlarmRegistrationSelectColumnVehicleID, OfflineAlarmRegistrationSelectColumnOfflineStartTime, OfflineAlarmRegistrationSelectColumnOfflineEndTime, OfflineAlarmRegistrationSelectColumnRegistrationUser, OfflineAlarmRegistrationSelectColumnRegistrationTime, OfflineAlarmRegistrationSelectColumnSmsContent, OfflineAlarmRegistrationSelectColumnPhoneReminderContent, OfflineAlarmRegistrationSelectColumnSmsSendTime, OfflineAlarmRegistrationSelectColumnPhoneReminderTime, OfflineAlarmRegistrationSelectColumnOfflineReason, OfflineAlarmRegistrationSelectColumnAlarmType, OfflineAlarmRegistrationSelectColumnIsRegistration, OfflineAlarmRegistrationSelectColumnIsEndAlarm, OfflineAlarmRegistrationSelectColumnIsSendSms, OfflineAlarmRegistrationSelectColumnIsNeedMaintain, OfflineAlarmRegistrationSelectColumnCreatedAt, OfflineAlarmRegistrationSelectColumnCreatedBy, OfflineAlarmRegistrationSelectColumnUpdatedAt, OfflineAlarmRegistrationSelectColumnUpdatedBy, OfflineAlarmRegistrationSelectColumnDeletedAt, OfflineAlarmRegistrationSelectColumnDeletedBy:
		return true
	}
	return false
}

func (e OfflineAlarmRegistrationSelectColumn) String() string {
	return string(e)
}

func (e *OfflineAlarmRegistrationSelectColumn) UnmarshalGQL(v interface{}) error {
	str, ok := v.(string)
	if !ok {
		return fmt.Errorf("enums must be strings")
	}

	*e = OfflineAlarmRegistrationSelectColumn(str)
	if !e.IsValid() {
		return fmt.Errorf("%s is not a valid OfflineAlarmRegistrationSelectColumn", str)
	}
	return nil
}

func (e OfflineAlarmRegistrationSelectColumn) MarshalGQL(w io.Writer) {
	fmt.Fprint(w, strconv.Quote(e.String()))
}

// 可选select
type VehicleAlarmDataSelectColumn string

const (
	// 按指定方法生成                                          ( 主键                               )
	VehicleAlarmDataSelectColumnID VehicleAlarmDataSelectColumn = "id"
	// 报警数据外部编码，由golang程序生成的xid，暴露到外部使用 ( 联合主键                           )
	VehicleAlarmDataSelectColumnVehicleAlarmDataID VehicleAlarmDataSelectColumn = "vehicle_alarm_data_id"
	// 车辆ID                                                  ( 引用vehicle_info表的vehicle_id )
	VehicleAlarmDataSelectColumnVehicleID VehicleAlarmDataSelectColumn = "vehicle_id"
	// 报警类型                                                ( 报警类型字典                   )
	VehicleAlarmDataSelectColumnAlarmType VehicleAlarmDataSelectColumn = "alarm_type"
	// 报警开始时间                                            (                                    )
	VehicleAlarmDataSelectColumnAlarmStartTime VehicleAlarmDataSelectColumn = "alarm_start_time"
	// 报警结束时间                                            (                                    )
	VehicleAlarmDataSelectColumnAlarmEndTime VehicleAlarmDataSelectColumn = "alarm_end_time"
	// 报警结束位置                                            (                                    )
	VehicleAlarmDataSelectColumnAlarmEndPosition VehicleAlarmDataSelectColumn = "alarm_end_position"
	// 最新报警时间                                            (                                    )
	VehicleAlarmDataSelectColumnLatestAlarmTime VehicleAlarmDataSelectColumn = "latest_alarm_time"
	// 最新报警位置                                            (                                    )
	VehicleAlarmDataSelectColumnLatestAlarmPosition VehicleAlarmDataSelectColumn = "latest_alarm_position"
	// 报警是否有效                                            (                                    )
	VehicleAlarmDataSelectColumnIsAlarmEffective VehicleAlarmDataSelectColumn = "is_alarm_effective"
	// 报警是否结束                                            (                                    )
	VehicleAlarmDataSelectColumnIsAlarmOver VehicleAlarmDataSelectColumn = "is_alarm_over"
	// 是否取消报警                                            (                                    )
	VehicleAlarmDataSelectColumnIsCancelAlarm VehicleAlarmDataSelectColumn = "is_cancel_alarm"
	// 报警来源:1.终端报警 2.平台报警                          ( 报警来源字典                   )
	VehicleAlarmDataSelectColumnAlarmSource VehicleAlarmDataSelectColumn = "alarm_source"
	// 处理时间                                                (                                    )
	VehicleAlarmDataSelectColumnProcessingTime VehicleAlarmDataSelectColumn = "processing_time"
	// 处理方式                                                ( 处警处理方式字典               )
	VehicleAlarmDataSelectColumnProcessingMethod VehicleAlarmDataSelectColumn = "processing_method"
	// 处理描述                                                (                                    )
	VehicleAlarmDataSelectColumnProcessingDescription VehicleAlarmDataSelectColumn = "processing_description"
	// 处理人                                                  ( system_user表的user_id         )
	VehicleAlarmDataSelectColumnProcessor VehicleAlarmDataSelectColumn = "processor"
	// 处理状态                                                ( 处警处理状态字典               )
	VehicleAlarmDataSelectColumnProcessingStatus VehicleAlarmDataSelectColumn = "processing_status"
	// 行驶记录仪速度                                          (                                    )
	VehicleAlarmDataSelectColumnTachographSpeed VehicleAlarmDataSelectColumn = "tachograph_speed"
	// GPS速度                                                 (                                    )
	VehicleAlarmDataSelectColumnGpsSpeed VehicleAlarmDataSelectColumn = "gps_speed"
	// 最高速度                                                (                                    )
	VehicleAlarmDataSelectColumnMaximumSpeed VehicleAlarmDataSelectColumn = "maximum_speed"
	// 限速阀值                                                (                                    )
	VehicleAlarmDataSelectColumnSpeedLimitThreshold VehicleAlarmDataSelectColumn = "speed_limit_threshold"
	// 空间数据类型point表示经度(longitude)和纬度(latitude)    (                                    )
	VehicleAlarmDataSelectColumnCoordinate VehicleAlarmDataSelectColumn = "coordinate"
	// 位置描述                                                (                                    )
	VehicleAlarmDataSelectColumnLocationDescription VehicleAlarmDataSelectColumn = "location_description"
	// 持续时间                                                (                                    )
	VehicleAlarmDataSelectColumnDuration VehicleAlarmDataSelectColumn = "duration"
	// 道路等级                                                ( 道路等级字典                   )
	VehicleAlarmDataSelectColumnRoadGrade VehicleAlarmDataSelectColumn = "road_grade"
	// 道路名称                                                (                                    )
	VehicleAlarmDataSelectColumnRoadName VehicleAlarmDataSelectColumn = "road_name"
	// 进区域ID                                                (                                    )
	VehicleAlarmDataSelectColumnAreaID VehicleAlarmDataSelectColumn = "area_id"
	// 处警ID                                                  (                                    )
	VehicleAlarmDataSelectColumnAlarmDealID VehicleAlarmDataSelectColumn = "alarm_deal_id"
	// 地区                                                    (                                    )
	VehicleAlarmDataSelectColumnPid VehicleAlarmDataSelectColumn = "pid"
	// 记录时间                                                (                                    )
	VehicleAlarmDataSelectColumnRecordTime VehicleAlarmDataSelectColumn = "record_time"
	// 监管人                                                  ( system_user表的user_id         )
	VehicleAlarmDataSelectColumnSupervisor VehicleAlarmDataSelectColumn = "supervisor"
	// 管理部门是否监管                                        (                                    )
	VehicleAlarmDataSelectColumnIsSupervise VehicleAlarmDataSelectColumn = "is_supervise"
	// 管理部门监管时间                                        (                                    )
	VehicleAlarmDataSelectColumnSupervisionTime VehicleAlarmDataSelectColumn = "supervision_time"
	// 监管备注                                                (                                    )
	VehicleAlarmDataSelectColumnSupervisionNote VehicleAlarmDataSelectColumn = "supervision_note"
	// 是否解析                                                (                                    )
	VehicleAlarmDataSelectColumnIsResolve VehicleAlarmDataSelectColumn = "is_resolve"
	// 工地是否处理                                            (                                    )
	VehicleAlarmDataSelectColumnIsConstructionSiteHandle VehicleAlarmDataSelectColumn = "is_construction_site_handle"
	// 工地处理时间                                            (                                    )
	VehicleAlarmDataSelectColumnConstructionSiteHandleTime VehicleAlarmDataSelectColumn = "construction_site_handle_time"
	// 创建时间                                                (                                    )
	VehicleAlarmDataSelectColumnCreatedAt VehicleAlarmDataSelectColumn = "created_at"
	// 创建人                                                  ( system_user表的user_id         )
	VehicleAlarmDataSelectColumnCreatedBy VehicleAlarmDataSelectColumn = "created_by"
	// 修改时间                                                (                                    )
	VehicleAlarmDataSelectColumnUpdatedAt VehicleAlarmDataSelectColumn = "updated_at"
	// 修改人                                                  ( system_user表的user_id         )
	VehicleAlarmDataSelectColumnUpdatedBy VehicleAlarmDataSelectColumn = "updated_by"
	// 删除时间                                                (                                    )
	VehicleAlarmDataSelectColumnDeletedAt VehicleAlarmDataSelectColumn = "deleted_at"
	// 删除人                                                  ( system_user表的user_id         )
	VehicleAlarmDataSelectColumnDeletedBy VehicleAlarmDataSelectColumn = "deleted_by"
)

var AllVehicleAlarmDataSelectColumn = []VehicleAlarmDataSelectColumn{
	VehicleAlarmDataSelectColumnID,
	VehicleAlarmDataSelectColumnVehicleAlarmDataID,
	VehicleAlarmDataSelectColumnVehicleID,
	VehicleAlarmDataSelectColumnAlarmType,
	VehicleAlarmDataSelectColumnAlarmStartTime,
	VehicleAlarmDataSelectColumnAlarmEndTime,
	VehicleAlarmDataSelectColumnAlarmEndPosition,
	VehicleAlarmDataSelectColumnLatestAlarmTime,
	VehicleAlarmDataSelectColumnLatestAlarmPosition,
	VehicleAlarmDataSelectColumnIsAlarmEffective,
	VehicleAlarmDataSelectColumnIsAlarmOver,
	VehicleAlarmDataSelectColumnIsCancelAlarm,
	VehicleAlarmDataSelectColumnAlarmSource,
	VehicleAlarmDataSelectColumnProcessingTime,
	VehicleAlarmDataSelectColumnProcessingMethod,
	VehicleAlarmDataSelectColumnProcessingDescription,
	VehicleAlarmDataSelectColumnProcessor,
	VehicleAlarmDataSelectColumnProcessingStatus,
	VehicleAlarmDataSelectColumnTachographSpeed,
	VehicleAlarmDataSelectColumnGpsSpeed,
	VehicleAlarmDataSelectColumnMaximumSpeed,
	VehicleAlarmDataSelectColumnSpeedLimitThreshold,
	VehicleAlarmDataSelectColumnCoordinate,
	VehicleAlarmDataSelectColumnLocationDescription,
	VehicleAlarmDataSelectColumnDuration,
	VehicleAlarmDataSelectColumnRoadGrade,
	VehicleAlarmDataSelectColumnRoadName,
	VehicleAlarmDataSelectColumnAreaID,
	VehicleAlarmDataSelectColumnAlarmDealID,
	VehicleAlarmDataSelectColumnPid,
	VehicleAlarmDataSelectColumnRecordTime,
	VehicleAlarmDataSelectColumnSupervisor,
	VehicleAlarmDataSelectColumnIsSupervise,
	VehicleAlarmDataSelectColumnSupervisionTime,
	VehicleAlarmDataSelectColumnSupervisionNote,
	VehicleAlarmDataSelectColumnIsResolve,
	VehicleAlarmDataSelectColumnIsConstructionSiteHandle,
	VehicleAlarmDataSelectColumnConstructionSiteHandleTime,
	VehicleAlarmDataSelectColumnCreatedAt,
	VehicleAlarmDataSelectColumnCreatedBy,
	VehicleAlarmDataSelectColumnUpdatedAt,
	VehicleAlarmDataSelectColumnUpdatedBy,
	VehicleAlarmDataSelectColumnDeletedAt,
	VehicleAlarmDataSelectColumnDeletedBy,
}

func (e VehicleAlarmDataSelectColumn) IsValid() bool {
	switch e {
	case VehicleAlarmDataSelectColumnID, VehicleAlarmDataSelectColumnVehicleAlarmDataID, VehicleAlarmDataSelectColumnVehicleID, VehicleAlarmDataSelectColumnAlarmType, VehicleAlarmDataSelectColumnAlarmStartTime, VehicleAlarmDataSelectColumnAlarmEndTime, VehicleAlarmDataSelectColumnAlarmEndPosition, VehicleAlarmDataSelectColumnLatestAlarmTime, VehicleAlarmDataSelectColumnLatestAlarmPosition, VehicleAlarmDataSelectColumnIsAlarmEffective, VehicleAlarmDataSelectColumnIsAlarmOver, VehicleAlarmDataSelectColumnIsCancelAlarm, VehicleAlarmDataSelectColumnAlarmSource, VehicleAlarmDataSelectColumnProcessingTime, VehicleAlarmDataSelectColumnProcessingMethod, VehicleAlarmDataSelectColumnProcessingDescription, VehicleAlarmDataSelectColumnProcessor, VehicleAlarmDataSelectColumnProcessingStatus, VehicleAlarmDataSelectColumnTachographSpeed, VehicleAlarmDataSelectColumnGpsSpeed, VehicleAlarmDataSelectColumnMaximumSpeed, VehicleAlarmDataSelectColumnSpeedLimitThreshold, VehicleAlarmDataSelectColumnCoordinate, VehicleAlarmDataSelectColumnLocationDescription, VehicleAlarmDataSelectColumnDuration, VehicleAlarmDataSelectColumnRoadGrade, VehicleAlarmDataSelectColumnRoadName, VehicleAlarmDataSelectColumnAreaID, VehicleAlarmDataSelectColumnAlarmDealID, VehicleAlarmDataSelectColumnPid, VehicleAlarmDataSelectColumnRecordTime, VehicleAlarmDataSelectColumnSupervisor, VehicleAlarmDataSelectColumnIsSupervise, VehicleAlarmDataSelectColumnSupervisionTime, VehicleAlarmDataSelectColumnSupervisionNote, VehicleAlarmDataSelectColumnIsResolve, VehicleAlarmDataSelectColumnIsConstructionSiteHandle, VehicleAlarmDataSelectColumnConstructionSiteHandleTime, VehicleAlarmDataSelectColumnCreatedAt, VehicleAlarmDataSelectColumnCreatedBy, VehicleAlarmDataSelectColumnUpdatedAt, VehicleAlarmDataSelectColumnUpdatedBy, VehicleAlarmDataSelectColumnDeletedAt, VehicleAlarmDataSelectColumnDeletedBy:
		return true
	}
	return false
}

func (e VehicleAlarmDataSelectColumn) String() string {
	return string(e)
}

func (e *VehicleAlarmDataSelectColumn) UnmarshalGQL(v interface{}) error {
	str, ok := v.(string)
	if !ok {
		return fmt.Errorf("enums must be strings")
	}

	*e = VehicleAlarmDataSelectColumn(str)
	if !e.IsValid() {
		return fmt.Errorf("%s is not a valid VehicleAlarmDataSelectColumn", str)
	}
	return nil
}

func (e VehicleAlarmDataSelectColumn) MarshalGQL(w io.Writer) {
	fmt.Fprint(w, strconv.Quote(e.String()))
}

// 可选select
type VideoPlatformAlarmTypeSelectColumn string

const (
	// 按指定方法生成                                  ( 主键                                                      )
	VideoPlatformAlarmTypeSelectColumnID VideoPlatformAlarmTypeSelectColumn = "id"
	// 外部编码，由golang程序生成的xid，暴露到外部使用 ( 联合主键                                                  )
	VideoPlatformAlarmTypeSelectColumnVideoPlatformAlarmTypeID VideoPlatformAlarmTypeSelectColumn = "video_platform_alarm_type_id"
	// 报警数据表id                                    ( vehicle_alarm_data  报警数据表的vehicle_alarm_data_id )
	VideoPlatformAlarmTypeSelectColumnVehicleAlarmDataID VideoPlatformAlarmTypeSelectColumn = "vehicle_alarm_data_id"
	// 报警类型                                        (                                                           )
	VideoPlatformAlarmTypeSelectColumnAlarmType VideoPlatformAlarmTypeSelectColumn = "alarm_type"
	// 报警来源                                        (                                                           )
	VideoPlatformAlarmTypeSelectColumnAlarmSource VideoPlatformAlarmTypeSelectColumn = "alarm_source"
	// 报警分类                                        ( Adas报警字典                                          )
	VideoPlatformAlarmTypeSelectColumnAlarmClassify VideoPlatformAlarmTypeSelectColumn = "alarm_classify"
	// 报警代码                                        (                                                           )
	VideoPlatformAlarmTypeSelectColumnAlarmCode VideoPlatformAlarmTypeSelectColumn = "alarm_code"
	// 是否删除                                        (                                                           )
	VideoPlatformAlarmTypeSelectColumnIsDeleted VideoPlatformAlarmTypeSelectColumn = "is_deleted"
	// 创建时间                                        (                                                           )
	VideoPlatformAlarmTypeSelectColumnCreatedAt VideoPlatformAlarmTypeSelectColumn = "created_at"
	// 创建人                                          ( system_user表的user_id                                )
	VideoPlatformAlarmTypeSelectColumnCreatedBy VideoPlatformAlarmTypeSelectColumn = "created_by"
	// 修改时间                                        (                                                           )
	VideoPlatformAlarmTypeSelectColumnUpdatedAt VideoPlatformAlarmTypeSelectColumn = "updated_at"
	// 修改人                                          ( system_user表的user_id                                )
	VideoPlatformAlarmTypeSelectColumnUpdatedBy VideoPlatformAlarmTypeSelectColumn = "updated_by"
	// 删除时间                                        (                                                           )
	VideoPlatformAlarmTypeSelectColumnDeletedAt VideoPlatformAlarmTypeSelectColumn = "deleted_at"
	// 删除人                                          ( system_user表的user_id                                )
	VideoPlatformAlarmTypeSelectColumnDeletedBy VideoPlatformAlarmTypeSelectColumn = "deleted_by"
)

var AllVideoPlatformAlarmTypeSelectColumn = []VideoPlatformAlarmTypeSelectColumn{
	VideoPlatformAlarmTypeSelectColumnID,
	VideoPlatformAlarmTypeSelectColumnVideoPlatformAlarmTypeID,
	VideoPlatformAlarmTypeSelectColumnVehicleAlarmDataID,
	VideoPlatformAlarmTypeSelectColumnAlarmType,
	VideoPlatformAlarmTypeSelectColumnAlarmSource,
	VideoPlatformAlarmTypeSelectColumnAlarmClassify,
	VideoPlatformAlarmTypeSelectColumnAlarmCode,
	VideoPlatformAlarmTypeSelectColumnIsDeleted,
	VideoPlatformAlarmTypeSelectColumnCreatedAt,
	VideoPlatformAlarmTypeSelectColumnCreatedBy,
	VideoPlatformAlarmTypeSelectColumnUpdatedAt,
	VideoPlatformAlarmTypeSelectColumnUpdatedBy,
	VideoPlatformAlarmTypeSelectColumnDeletedAt,
	VideoPlatformAlarmTypeSelectColumnDeletedBy,
}

func (e VideoPlatformAlarmTypeSelectColumn) IsValid() bool {
	switch e {
	case VideoPlatformAlarmTypeSelectColumnID, VideoPlatformAlarmTypeSelectColumnVideoPlatformAlarmTypeID, VideoPlatformAlarmTypeSelectColumnVehicleAlarmDataID, VideoPlatformAlarmTypeSelectColumnAlarmType, VideoPlatformAlarmTypeSelectColumnAlarmSource, VideoPlatformAlarmTypeSelectColumnAlarmClassify, VideoPlatformAlarmTypeSelectColumnAlarmCode, VideoPlatformAlarmTypeSelectColumnIsDeleted, VideoPlatformAlarmTypeSelectColumnCreatedAt, VideoPlatformAlarmTypeSelectColumnCreatedBy, VideoPlatformAlarmTypeSelectColumnUpdatedAt, VideoPlatformAlarmTypeSelectColumnUpdatedBy, VideoPlatformAlarmTypeSelectColumnDeletedAt, VideoPlatformAlarmTypeSelectColumnDeletedBy:
		return true
	}
	return false
}

func (e VideoPlatformAlarmTypeSelectColumn) String() string {
	return string(e)
}

func (e *VideoPlatformAlarmTypeSelectColumn) UnmarshalGQL(v interface{}) error {
	str, ok := v.(string)
	if !ok {
		return fmt.Errorf("enums must be strings")
	}

	*e = VideoPlatformAlarmTypeSelectColumn(str)
	if !e.IsValid() {
		return fmt.Errorf("%s is not a valid VideoPlatformAlarmTypeSelectColumn", str)
	}
	return nil
}

func (e VideoPlatformAlarmTypeSelectColumn) MarshalGQL(w io.Writer) {
	fmt.Fprint(w, strconv.Quote(e.String()))
}

// 可选select
type VoiceAlarmRecordSelectColumn string

const (
	// 按指定方法生成                                  ( 主键                       )
	VoiceAlarmRecordSelectColumnID VoiceAlarmRecordSelectColumn = "id"
	// 外部编码，由golang程序生成的xid，暴露到外部使用 ( 联合主键                   )
	VoiceAlarmRecordSelectColumnVioceAlarmRecordID VoiceAlarmRecordSelectColumn = "vioce_alarm_record_id"
	// vehicle_info 车辆信息表 的vehicle_id        (                            )
	VoiceAlarmRecordSelectColumnVehicleID VoiceAlarmRecordSelectColumn = "vehicle_id"
	// 报警时间                                        (                            )
	VoiceAlarmRecordSelectColumnAlarmTime VoiceAlarmRecordSelectColumn = "alarm_time"
	// 报警类型                                        (                            )
	VoiceAlarmRecordSelectColumnAlarmType VoiceAlarmRecordSelectColumn = "alarm_type"
	// 提醒时间                                        (                            )
	VoiceAlarmRecordSelectColumnRemindTime VoiceAlarmRecordSelectColumn = "remind_time"
	// 提醒内容                                        (                            )
	VoiceAlarmRecordSelectColumnRemindContent VoiceAlarmRecordSelectColumn = "remind_content"
	// 录入人                                          ( system_user表的user_id )
	VoiceAlarmRecordSelectColumnInputPerson VoiceAlarmRecordSelectColumn = "input_person"
	// 录入时间                                        (                            )
	VoiceAlarmRecordSelectColumnInputTime VoiceAlarmRecordSelectColumn = "input_time"
	// 是否成功                                        (                            )
	VoiceAlarmRecordSelectColumnIsSuccess VoiceAlarmRecordSelectColumn = "is_success"
	// 创建时间                                        (                            )
	VoiceAlarmRecordSelectColumnCreatedAt VoiceAlarmRecordSelectColumn = "created_at"
	// 创建人                                          ( system_user表的user_id )
	VoiceAlarmRecordSelectColumnCreatedBy VoiceAlarmRecordSelectColumn = "created_by"
	// 修改时间                                        (                            )
	VoiceAlarmRecordSelectColumnUpdatedAt VoiceAlarmRecordSelectColumn = "updated_at"
	// 修改人                                          ( system_user表的user_id )
	VoiceAlarmRecordSelectColumnUpdatedBy VoiceAlarmRecordSelectColumn = "updated_by"
	// 删除时间                                        (                            )
	VoiceAlarmRecordSelectColumnDeletedAt VoiceAlarmRecordSelectColumn = "deleted_at"
	// 删除人                                          ( system_user表的user_id )
	VoiceAlarmRecordSelectColumnDeletedBy VoiceAlarmRecordSelectColumn = "deleted_by"
)

var AllVoiceAlarmRecordSelectColumn = []VoiceAlarmRecordSelectColumn{
	VoiceAlarmRecordSelectColumnID,
	VoiceAlarmRecordSelectColumnVioceAlarmRecordID,
	VoiceAlarmRecordSelectColumnVehicleID,
	VoiceAlarmRecordSelectColumnAlarmTime,
	VoiceAlarmRecordSelectColumnAlarmType,
	VoiceAlarmRecordSelectColumnRemindTime,
	VoiceAlarmRecordSelectColumnRemindContent,
	VoiceAlarmRecordSelectColumnInputPerson,
	VoiceAlarmRecordSelectColumnInputTime,
	VoiceAlarmRecordSelectColumnIsSuccess,
	VoiceAlarmRecordSelectColumnCreatedAt,
	VoiceAlarmRecordSelectColumnCreatedBy,
	VoiceAlarmRecordSelectColumnUpdatedAt,
	VoiceAlarmRecordSelectColumnUpdatedBy,
	VoiceAlarmRecordSelectColumnDeletedAt,
	VoiceAlarmRecordSelectColumnDeletedBy,
}

func (e VoiceAlarmRecordSelectColumn) IsValid() bool {
	switch e {
	case VoiceAlarmRecordSelectColumnID, VoiceAlarmRecordSelectColumnVioceAlarmRecordID, VoiceAlarmRecordSelectColumnVehicleID, VoiceAlarmRecordSelectColumnAlarmTime, VoiceAlarmRecordSelectColumnAlarmType, VoiceAlarmRecordSelectColumnRemindTime, VoiceAlarmRecordSelectColumnRemindContent, VoiceAlarmRecordSelectColumnInputPerson, VoiceAlarmRecordSelectColumnInputTime, VoiceAlarmRecordSelectColumnIsSuccess, VoiceAlarmRecordSelectColumnCreatedAt, VoiceAlarmRecordSelectColumnCreatedBy, VoiceAlarmRecordSelectColumnUpdatedAt, VoiceAlarmRecordSelectColumnUpdatedBy, VoiceAlarmRecordSelectColumnDeletedAt, VoiceAlarmRecordSelectColumnDeletedBy:
		return true
	}
	return false
}

func (e VoiceAlarmRecordSelectColumn) String() string {
	return string(e)
}

func (e *VoiceAlarmRecordSelectColumn) UnmarshalGQL(v interface{}) error {
	str, ok := v.(string)
	if !ok {
		return fmt.Errorf("enums must be strings")
	}

	*e = VoiceAlarmRecordSelectColumn(str)
	if !e.IsValid() {
		return fmt.Errorf("%s is not a valid VoiceAlarmRecordSelectColumn", str)
	}
	return nil
}

func (e VoiceAlarmRecordSelectColumn) MarshalGQL(w io.Writer) {
	fmt.Fprint(w, strconv.Quote(e.String()))
}
