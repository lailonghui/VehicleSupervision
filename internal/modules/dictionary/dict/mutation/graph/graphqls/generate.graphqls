

scalar bigint

"""
expression to compare columns of type bigint. All fields are combined with logical 'AND'.
"""
input bigint_comparison_exp {
  _eq: bigint
  _gt: bigint
  _gte: bigint
  _in: [bigint!]
  _is_null: Boolean
  _lt: bigint
  _lte: bigint
  _neq: bigint
  _nin: [bigint!]
}

"""
expression to compare columns of type Boolean. All fields are combined with logical 'AND'.
"""
input Boolean_comparison_exp {
  _eq: Boolean
  _gt: Boolean
  _gte: Boolean
  _in: [Boolean!]
  _is_null: Boolean
  _lt: Boolean
  _lte: Boolean
  _neq: Boolean
  _nin: [Boolean!]
}

"""
数据字典


columns and relationships of "data_dictionary"

"""
type data_dictionary {
  """创建时间"""
  create_at: timestamptz!

  """创建人"""
  create_by: String

  """删除时间"""
  delete_at: timestamptz

  """删除人"""
  delete_by: String

  """字典类型ID"""
  dictionary_category_id: String!

  """字典ID"""
  dictionary_id: String!

  """ID"""
  id: bigint!

  """是否删除"""
  is_delete: Boolean!

  """名称"""
  name: String!

  """备注"""
  remarks: String

  """修改时间"""
  update_at: timestamptz

  """修改人"""
  update_by: String

  """值"""
  value: Int!
}

"""
aggregated selection of "data_dictionary"
"""
type data_dictionary_aggregate {
  aggregate: data_dictionary_aggregate_fields
  nodes: [data_dictionary!]!
}

"""
aggregate fields of "data_dictionary"
"""
type data_dictionary_aggregate_fields {
  avg: data_dictionary_avg_fields
  count(columns: [data_dictionary_select_column!], distinct: Boolean): Int
  max: data_dictionary_max_fields
  min: data_dictionary_min_fields
  stddev: data_dictionary_stddev_fields
  stddev_pop: data_dictionary_stddev_pop_fields
  stddev_samp: data_dictionary_stddev_samp_fields
  sum: data_dictionary_sum_fields
  var_pop: data_dictionary_var_pop_fields
  var_samp: data_dictionary_var_samp_fields
  variance: data_dictionary_variance_fields
}

"""
order by aggregate values of table "data_dictionary"
"""
input data_dictionary_aggregate_order_by {
  avg: data_dictionary_avg_order_by
  count: order_by
  max: data_dictionary_max_order_by
  min: data_dictionary_min_order_by
  stddev: data_dictionary_stddev_order_by
  stddev_pop: data_dictionary_stddev_pop_order_by
  stddev_samp: data_dictionary_stddev_samp_order_by
  sum: data_dictionary_sum_order_by
  var_pop: data_dictionary_var_pop_order_by
  var_samp: data_dictionary_var_samp_order_by
  variance: data_dictionary_variance_order_by
}

"""
input type for inserting array relation for remote table "data_dictionary"
"""
input data_dictionary_arr_rel_insert_input {
  data: [data_dictionary_insert_input!]!
  on_conflict: data_dictionary_on_conflict
}

"""aggregate avg on columns"""
type data_dictionary_avg_fields {
  id: Float
  value: Float
}

"""
order by avg() on columns of table "data_dictionary"
"""
input data_dictionary_avg_order_by {
  id: order_by
  value: order_by
}

"""
Boolean expression to filter rows from the table "data_dictionary". All fields are combined with a logical 'AND'.
"""
input data_dictionary_bool_exp {
  _and: [data_dictionary_bool_exp]
  _not: data_dictionary_bool_exp
  _or: [data_dictionary_bool_exp]
  create_at: timestamptz_comparison_exp
  create_by: String_comparison_exp
  delete_at: timestamptz_comparison_exp
  delete_by: String_comparison_exp
  dictionary_category_id: String_comparison_exp
  dictionary_id: String_comparison_exp
  id: bigint_comparison_exp
  is_delete: Boolean_comparison_exp
  name: String_comparison_exp
  remarks: String_comparison_exp
  update_at: timestamptz_comparison_exp
  update_by: String_comparison_exp
  value: Int_comparison_exp
}

"""
unique or primary key constraints on table "data_dictionary"
"""
enum data_dictionary_constraint {
  """unique or primary key constraint"""
  data_dirtionary_pkey
}

"""
input type for incrementing integer column in table "data_dictionary"
"""
input data_dictionary_inc_input {
  id: bigint
  value: Int
}

"""
input type for inserting data into table "data_dictionary"
"""
input data_dictionary_insert_input {
  create_at: timestamptz
  create_by: String
  delete_at: timestamptz
  delete_by: String
  dictionary_category_id: String
  dictionary_id: String
  id: bigint
  is_delete: Boolean
  name: String
  remarks: String
  update_at: timestamptz
  update_by: String
  value: Int
}

"""aggregate max on columns"""
type data_dictionary_max_fields {
  create_at: timestamptz
  create_by: String
  delete_at: timestamptz
  delete_by: String
  dictionary_category_id: String
  dictionary_id: String
  id: bigint
  name: String
  remarks: String
  update_at: timestamptz
  update_by: String
  value: Int
}

"""
order by max() on columns of table "data_dictionary"
"""
input data_dictionary_max_order_by {
  create_at: order_by
  create_by: order_by
  delete_at: order_by
  delete_by: order_by
  dictionary_category_id: order_by
  dictionary_id: order_by
  id: order_by
  name: order_by
  remarks: order_by
  update_at: order_by
  update_by: order_by
  value: order_by
}

"""aggregate min on columns"""
type data_dictionary_min_fields {
  create_at: timestamptz
  create_by: String
  delete_at: timestamptz
  delete_by: String
  dictionary_category_id: String
  dictionary_id: String
  id: bigint
  name: String
  remarks: String
  update_at: timestamptz
  update_by: String
  value: Int
}

"""
order by min() on columns of table "data_dictionary"
"""
input data_dictionary_min_order_by {
  create_at: order_by
  create_by: order_by
  delete_at: order_by
  delete_by: order_by
  dictionary_category_id: order_by
  dictionary_id: order_by
  id: order_by
  name: order_by
  remarks: order_by
  update_at: order_by
  update_by: order_by
  value: order_by
}

"""
response of any mutation on the table "data_dictionary"
"""
type data_dictionary_mutation_response {
  """number of affected rows by the mutation"""
  affected_rows: Int!

  """data of the affected rows by the mutation"""
  returning: [data_dictionary!]!
}

"""
input type for inserting object relation for remote table "data_dictionary"
"""
input data_dictionary_obj_rel_insert_input {
  data: data_dictionary_insert_input!
  on_conflict: data_dictionary_on_conflict
}

"""
on conflict condition type for table "data_dictionary"
"""
input data_dictionary_on_conflict {
  constraint: data_dictionary_constraint!
  update_columns: [data_dictionary_update_column!]!
  where: data_dictionary_bool_exp
}

"""
ordering options when selecting data from "data_dictionary"
"""
input data_dictionary_order_by {
  create_at: order_by
  create_by: order_by
  delete_at: order_by
  delete_by: order_by
  dictionary_category_id: order_by
  dictionary_id: order_by
  id: order_by
  is_delete: order_by
  name: order_by
  remarks: order_by
  update_at: order_by
  update_by: order_by
  value: order_by
}

"""
primary key columns input for table: "data_dictionary"
"""
input data_dictionary_pk_columns_input {
  """ID"""
  id: bigint!
}

"""
select columns of table "data_dictionary"
"""
enum data_dictionary_select_column {
  """column name"""
  create_at

  """column name"""
  create_by

  """column name"""
  delete_at

  """column name"""
  delete_by

  """column name"""
  dictionary_category_id

  """column name"""
  dictionary_id

  """column name"""
  id

  """column name"""
  is_delete

  """column name"""
  name

  """column name"""
  remarks

  """column name"""
  update_at

  """column name"""
  update_by

  """column name"""
  value
}

"""
input type for updating data in table "data_dictionary"
"""
input data_dictionary_set_input {
  create_at: timestamptz
  create_by: String
  delete_at: timestamptz
  delete_by: String
  dictionary_category_id: String
  dictionary_id: String
  id: bigint
  is_delete: Boolean
  name: String
  remarks: String
  update_at: timestamptz
  update_by: String
  value: Int
}

"""aggregate stddev on columns"""
type data_dictionary_stddev_fields {
  id: Float
  value: Float
}

"""
order by stddev() on columns of table "data_dictionary"
"""
input data_dictionary_stddev_order_by {
  id: order_by
  value: order_by
}

"""aggregate stddev_pop on columns"""
type data_dictionary_stddev_pop_fields {
  id: Float
  value: Float
}

"""
order by stddev_pop() on columns of table "data_dictionary"
"""
input data_dictionary_stddev_pop_order_by {
  id: order_by
  value: order_by
}

"""aggregate stddev_samp on columns"""
type data_dictionary_stddev_samp_fields {
  id: Float
  value: Float
}

"""
order by stddev_samp() on columns of table "data_dictionary"
"""
input data_dictionary_stddev_samp_order_by {
  id: order_by
  value: order_by
}

"""aggregate sum on columns"""
type data_dictionary_sum_fields {
  id: bigint
  value: Int
}

"""
order by sum() on columns of table "data_dictionary"
"""
input data_dictionary_sum_order_by {
  id: order_by
  value: order_by
}

"""
update columns of table "data_dictionary"
"""
enum data_dictionary_update_column {
  """column name"""
  create_at

  """column name"""
  create_by

  """column name"""
  delete_at

  """column name"""
  delete_by

  """column name"""
  dictionary_category_id

  """column name"""
  dictionary_id

  """column name"""
  id

  """column name"""
  is_delete

  """column name"""
  name

  """column name"""
  remarks

  """column name"""
  update_at

  """column name"""
  update_by

  """column name"""
  value
}

"""aggregate var_pop on columns"""
type data_dictionary_var_pop_fields {
  id: Float
  value: Float
}

"""
order by var_pop() on columns of table "data_dictionary"
"""
input data_dictionary_var_pop_order_by {
  id: order_by
  value: order_by
}

"""aggregate var_samp on columns"""
type data_dictionary_var_samp_fields {
  id: Float
  value: Float
}

"""
order by var_samp() on columns of table "data_dictionary"
"""
input data_dictionary_var_samp_order_by {
  id: order_by
  value: order_by
}

"""aggregate variance on columns"""
type data_dictionary_variance_fields {
  id: Float
  value: Float
}

"""
order by variance() on columns of table "data_dictionary"
"""
input data_dictionary_variance_order_by {
  id: order_by
  value: order_by
}

"""
expression to compare columns of type Int. All fields are combined with logical 'AND'.
"""
input Int_comparison_exp {
  _eq: Int
  _gt: Int
  _gte: Int
  _in: [Int!]
  _is_null: Boolean
  _lt: Int
  _lte: Int
  _neq: Int
  _nin: [Int!]
}

"""mutation root"""
type Mutation {
  """
  delete data from the table: "data_dictionary"
  """
  delete_data_dictionary(
    """filter the rows which have to be deleted"""
    where: data_dictionary_bool_exp!
  ): data_dictionary_mutation_response

  """
  delete single row from the table: "data_dictionary"
  """
  delete_data_dictionary_by_pk(
    """ID"""
    id: bigint!
  ): data_dictionary

  """
  insert data into the table: "data_dictionary"
  """
  insert_data_dictionary(
    """the rows to be inserted"""
    objects: [data_dictionary_insert_input!]!

    """on conflict condition"""
    on_conflict: data_dictionary_on_conflict
  ): data_dictionary_mutation_response

  """
  insert a single row into the table: "data_dictionary"
  """
  insert_data_dictionary_one(
    """the row to be inserted"""
    object: data_dictionary_insert_input!

    """on conflict condition"""
    on_conflict: data_dictionary_on_conflict
  ): data_dictionary

  """
  update data of the table: "data_dictionary"
  """
  update_data_dictionary(
    """increments the integer columns with given value of the filtered values"""
    _inc: data_dictionary_inc_input

    """sets the columns of the filtered rows to the given values"""
    _set: data_dictionary_set_input

    """filter the rows which have to be updated"""
    where: data_dictionary_bool_exp!
  ): data_dictionary_mutation_response

  """
  update single row of the table: "data_dictionary"
  """
  update_data_dictionary_by_pk(
    """increments the integer columns with given value of the filtered values"""
    _inc: data_dictionary_inc_input

    """sets the columns of the filtered rows to the given values"""
    _set: data_dictionary_set_input
    pk_columns: data_dictionary_pk_columns_input!
  ): data_dictionary
}

"""column ordering options"""
enum order_by {
  """in the ascending order, nulls last"""
  asc

  """in the ascending order, nulls first"""
  asc_nulls_first

  """in the ascending order, nulls last"""
  asc_nulls_last

  """in the descending order, nulls first"""
  desc

  """in the descending order, nulls first"""
  desc_nulls_first

  """in the descending order, nulls last"""
  desc_nulls_last
}

"""query root"""
type Query {
  t: Int
}

"""
expression to compare columns of type String. All fields are combined with logical 'AND'.
"""
input String_comparison_exp {
  _eq: String
  _gt: String
  _gte: String
  _ilike: String
  _in: [String!]
  _is_null: Boolean
  _like: String
  _lt: String
  _lte: String
  _neq: String
  _nilike: String
  _nin: [String!]
  _nlike: String
  _nsimilar: String
  _similar: String
}

"""subscription root"""
type subscription_root {
  """
  fetch data from the table: "data_dictionary"
  """
  data_dictionary(
    """distinct select on columns"""
    distinct_on: [data_dictionary_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [data_dictionary_order_by!]

    """filter the rows returned"""
    where: data_dictionary_bool_exp
  ): [data_dictionary!]!

  """
  fetch aggregated fields from the table: "data_dictionary"
  """
  data_dictionary_aggregate(
    """distinct select on columns"""
    distinct_on: [data_dictionary_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [data_dictionary_order_by!]

    """filter the rows returned"""
    where: data_dictionary_bool_exp
  ): data_dictionary_aggregate!

  """fetch data from the table: "data_dictionary" using primary key columns"""
  data_dictionary_by_pk(
    """ID"""
    id: bigint!
  ): data_dictionary
}

scalar timestamptz

"""
expression to compare columns of type timestamptz. All fields are combined with logical 'AND'.
"""
input timestamptz_comparison_exp {
  _eq: timestamptz
  _gt: timestamptz
  _gte: timestamptz
  _in: [timestamptz!]
  _is_null: Boolean
  _lt: timestamptz
  _lte: timestamptz
  _neq: timestamptz
  _nin: [timestamptz!]
}

