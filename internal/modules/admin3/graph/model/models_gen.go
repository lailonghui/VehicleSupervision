// Code generated by github.com/99designs/gqlgen, DO NOT EDIT.

package model

import (
	"fmt"
	"io"
	"strconv"
)

// expression to compare columns of type Boolean. All fields are combined with logical 'AND'.
type BooleanComparisonExp struct {
	Eq     *bool  `json:"_eq"`
	Gt     *bool  `json:"_gt"`
	Gte    *bool  `json:"_gte"`
	In     []bool `json:"_in"`
	IsNull *bool  `json:"_is_null"`
	Lt     *bool  `json:"_lt"`
	Lte    *bool  `json:"_lte"`
	Neq    *bool  `json:"_neq"`
	Nin    []bool `json:"_nin"`
}

// expression to compare columns of type Int. All fields are combined with logical 'AND'.
type IntComparisonExp struct {
	Eq     *int  `json:"_eq"`
	Gt     *int  `json:"_gt"`
	Gte    *int  `json:"_gte"`
	In     []int `json:"_in"`
	IsNull *bool `json:"_is_null"`
	Lt     *int  `json:"_lt"`
	Lte    *int  `json:"_lte"`
	Neq    *int  `json:"_neq"`
	Nin    []int `json:"_nin"`
}

// expression to compare columns of type String. All fields are combined with logical 'AND'.
type StringComparisonExp struct {
	Eq       *string  `json:"_eq"`
	Gt       *string  `json:"_gt"`
	Gte      *string  `json:"_gte"`
	Ilike    *string  `json:"_ilike"`
	In       []string `json:"_in"`
	IsNull   *bool    `json:"_is_null"`
	Like     *string  `json:"_like"`
	Lt       *string  `json:"_lt"`
	Lte      *string  `json:"_lte"`
	Neq      *string  `json:"_neq"`
	Nilike   *string  `json:"_nilike"`
	Nin      []string `json:"_nin"`
	Nlike    *string  `json:"_nlike"`
	Nsimilar *string  `json:"_nsimilar"`
	Similar  *string  `json:"_similar"`
}

// expression to compare columns of type _jsonb. All fields are combined with logical 'AND'.
type JsonbComparisonExp struct {
	Eq     *string  `json:"_eq"`
	Gt     *string  `json:"_gt"`
	Gte    *string  `json:"_gte"`
	In     []string `json:"_in"`
	IsNull *bool    `json:"_is_null"`
	Lt     *string  `json:"_lt"`
	Lte    *string  `json:"_lte"`
	Neq    *string  `json:"_neq"`
	Nin    []string `json:"_nin"`
}

// expression to compare columns of type bigint. All fields are combined with logical 'AND'.
type BigintComparisonExp struct {
	Eq     *string  `json:"_eq"`
	Gt     *string  `json:"_gt"`
	Gte    *string  `json:"_gte"`
	In     []string `json:"_in"`
	IsNull *bool    `json:"_is_null"`
	Lt     *string  `json:"_lt"`
	Lte    *string  `json:"_lte"`
	Neq    *string  `json:"_neq"`
	Nin    []string `json:"_nin"`
}

// 企业
//
//
// columns and relationships of "enterprise"
type Enterprise struct {
	// 协会审核时间
	AssociationReviewBy *string `json:"association_review_by"`
	// 协会审核意见
	AssociationReviewOpinion *string `json:"association_review_opinion"`
	// 协会审核时间
	AssociationReviewTime *string `json:"association_review_time"`
	// 所属大队ID
	BrigadeID *string `json:"brigade_id"`
	// 大队审核人
	BrigadeReviewBy *string `json:"brigade_review_by"`
	// 大队审核意见
	BrigadeReviewOpinion *string `json:"brigade_review_opinion"`
	// 大队审核时间
	BrigadeReviewTime *string `json:"brigade_review_time"`
	// 营业执照到期日期
	BusinessLicenseExpiryDate *string `json:"business_license_expiry_date"`
	// 营业执照发证日期
	BusinessLicenseIssuanceDate *string `json:"business_license_issuance_date"`
	// 营业执照图片
	BusinessLicensePhoto *string `json:"business_license_photo"`
	// 业务办理扫描件照片
	BusinessPhoto *string `json:"business_photo"`
	// 经营范围
	BusinessScope *int `json:"business_scope"`
	// 审核状态
	CheckStatus *int `json:"check_status"`
	// 城市ID
	CityID *string `json:"city_id"`
	// 联系人
	ContactPersons *string `json:"contact_persons"`
	// 创建时间
	CreateAt *string `json:"create_at"`
	// 创建人
	CreateBy *string `json:"create_by"`
	// 删除时间
	DeleteAt *string `json:"delete_at"`
	// 删除人
	DeleteBy *string `json:"delete_by"`
	// 显示顺序
	DisplayNumber *int `json:"display_number"`
	// 区域ID
	DistrictID *string `json:"district_id"`
	// 企业地址
	EnterpriseAddress *string `json:"enterprise_address"`
	// 企业码
	EnterpriseCode *string `json:"enterprise_code"`
	// 企业ID
	EnterpriseID string `json:"enterprise_id"`
	// 企业级别
	EnterpriseLevel *int `json:"enterprise_level"`
	// 企业名称
	EnterpriseName   *string `json:"enterprise_name"`
	EnterpriseNature *int    `json:"enterprise_nature"`
	// 委托代理人
	EntrustedAgent *string `json:"entrusted_agent"`
	// 委托代理人-身份证号码
	EntrustedAgentIDCard *string `json:"entrusted_agent_id_card"`
	// 委托代理人身份证图片
	EntrustedAgentIDCardPhoto *string `json:"entrusted_agent_id_card_photo"`
	// 委托代理人-电话号码
	EntrustedAgentPhone *string `json:"entrusted_agent_phone"`
	// 传真号码
	FaxNumber *string `json:"fax_number"`
	// ID
	ID string `json:"id"`
	// 机构类别
	InstitutionCategory *string `json:"institution_category"`
	// 是否黑名单
	IsBlack *bool `json:"is_black"`
	// 是否删除
	IsDeleted bool `json:"is_deleted"`
	// 是否录入完成
	IsInput *bool `json:"is_input"`
	// 是否安装
	IsInstall *bool `json:"is_install"`
	// 是否上次省厅
	IsUploadProvince *bool `json:"is_upload_province"`
	// 企业法人代表
	LegalRepresentative *string `json:"legal_representative"`
	// 企业法人-身份证号码
	LegalRepresentativeIDCard *string `json:"legal_representative_id_card"`
	// 企业法人代表身份证-图片
	LegalRepresentativeIDCardPhoto *string `json:"legal_representative_id_card_photo"`
	// 企业法人代表联系电话
	LegalRepresentativePhone *string `json:"legal_representative_phone"`
	// 经营许可证图片
	OperatingLicensePhoto *string `json:"operating_license_photo"`
	// 组织机构代码(企业的营运证)
	OrganizationCode *string `json:"organization_code"`
	// 组织机构代码证照片
	OrganizationCodeCertificatePhoto *string `json:"organization_code_certificate_photo"`
	// 所属派出所ID
	PoliceStationID *string `json:"police_station_id"`
	// 省份ID
	ProvinceID *string `json:"province_id"`
	// 登记时间
	RecordAt *string `json:"record_at"`
	// 登记人
	RecordBy *string `json:"record_by"`
	// 备注
	Remarks *string `json:"remarks"`
	// 记分
	Score *int `json:"score"`
	// 上级企业ID
	SuperiorEnterpriseID *string `json:"superior_enterprise_id"`
	// 修改时间
	UpdateAt *string `json:"update_at"`
	// 修改人
	UpdateBy *string `json:"update_by"`
	// 内网更新时间
	UpdateTimeIn *string `json:"update_time_in"`
}

// aggregated selection of "enterprise"
type EnterpriseAggregate struct {
	Aggregate *EnterpriseAggregateFields `json:"aggregate"`
	Nodes     []*Enterprise              `json:"nodes"`
}

// aggregate fields of "enterprise"
type EnterpriseAggregateFields struct {
	Avg        *EnterpriseAvgFields        `json:"avg"`
	Count      *int                        `json:"count"`
	Max        *EnterpriseMaxFields        `json:"max"`
	Min        *EnterpriseMinFields        `json:"min"`
	Stddev     *EnterpriseStddevFields     `json:"stddev"`
	StddevPop  *EnterpriseStddevPopFields  `json:"stddev_pop"`
	StddevSamp *EnterpriseStddevSampFields `json:"stddev_samp"`
	Sum        *EnterpriseSumFields        `json:"sum"`
	VarPop     *EnterpriseVarPopFields     `json:"var_pop"`
	VarSamp    *EnterpriseVarSampFields    `json:"var_samp"`
	Variance   *EnterpriseVarianceFields   `json:"variance"`
}

// order by aggregate values of table "enterprise"
type EnterpriseAggregateOrderBy struct {
	Avg        *EnterpriseAvgOrderBy        `json:"avg"`
	Count      *OrderBy                     `json:"count"`
	Max        *EnterpriseMaxOrderBy        `json:"max"`
	Min        *EnterpriseMinOrderBy        `json:"min"`
	Stddev     *EnterpriseStddevOrderBy     `json:"stddev"`
	StddevPop  *EnterpriseStddevPopOrderBy  `json:"stddev_pop"`
	StddevSamp *EnterpriseStddevSampOrderBy `json:"stddev_samp"`
	Sum        *EnterpriseSumOrderBy        `json:"sum"`
	VarPop     *EnterpriseVarPopOrderBy     `json:"var_pop"`
	VarSamp    *EnterpriseVarSampOrderBy    `json:"var_samp"`
	Variance   *EnterpriseVarianceOrderBy   `json:"variance"`
}

// input type for inserting array relation for remote table "enterprise"
type EnterpriseArrRelInsertInput struct {
	Data       []*EnterpriseInsertInput `json:"data"`
	OnConflict *EnterpriseOnConflict    `json:"on_conflict"`
}

// aggregate avg on columns
type EnterpriseAvgFields struct {
	BusinessScope       *float64 `json:"business_scope"`
	CheckStatus         *float64 `json:"check_status"`
	CityID              *float64 `json:"city_id"`
	DisplayNumber       *float64 `json:"display_number"`
	DistrictID          *float64 `json:"district_id"`
	EnterpriseLevel     *float64 `json:"enterprise_level"`
	EnterpriseNature    *float64 `json:"enterprise_nature"`
	ID                  *float64 `json:"id"`
	InstitutionCategory *float64 `json:"institution_category"`
	ProvinceID          *float64 `json:"province_id"`
	Score               *float64 `json:"score"`
}

// order by avg() on columns of table "enterprise"
type EnterpriseAvgOrderBy struct {
	BusinessScope       *OrderBy `json:"business_scope"`
	CheckStatus         *OrderBy `json:"check_status"`
	CityID              *OrderBy `json:"city_id"`
	DisplayNumber       *OrderBy `json:"display_number"`
	DistrictID          *OrderBy `json:"district_id"`
	EnterpriseLevel     *OrderBy `json:"enterprise_level"`
	EnterpriseNature    *OrderBy `json:"enterprise_nature"`
	ID                  *OrderBy `json:"id"`
	InstitutionCategory *OrderBy `json:"institution_category"`
	ProvinceID          *OrderBy `json:"province_id"`
	Score               *OrderBy `json:"score"`
}

// Boolean expression to filter rows from the table "enterprise". All fields are combined with a logical 'AND'.
type EnterpriseBoolExp struct {
	And                              []*EnterpriseBoolExp      `json:"_and"`
	Not                              *EnterpriseBoolExp        `json:"_not"`
	Or                               []*EnterpriseBoolExp      `json:"_or"`
	AssociationReviewBy              *TimestamptzComparisonExp `json:"association_review_by"`
	AssociationReviewOpinion         *StringComparisonExp      `json:"association_review_opinion"`
	AssociationReviewTime            *TimestamptzComparisonExp `json:"association_review_time"`
	BrigadeID                        *StringComparisonExp      `json:"brigade_id"`
	BrigadeReviewBy                  *StringComparisonExp      `json:"brigade_review_by"`
	BrigadeReviewOpinion             *StringComparisonExp      `json:"brigade_review_opinion"`
	BrigadeReviewTime                *TimestamptzComparisonExp `json:"brigade_review_time"`
	BusinessLicenseExpiryDate        *TimestamptzComparisonExp `json:"business_license_expiry_date"`
	BusinessLicenseIssuanceDate      *TimestamptzComparisonExp `json:"business_license_issuance_date"`
	BusinessLicensePhoto             *StringComparisonExp      `json:"business_license_photo"`
	BusinessPhoto                    *StringComparisonExp      `json:"business_photo"`
	BusinessScope                    *IntComparisonExp         `json:"business_scope"`
	CheckStatus                      *IntComparisonExp         `json:"check_status"`
	CityID                           *BigintComparisonExp      `json:"city_id"`
	ContactPersons                   *JsonbComparisonExp       `json:"contact_persons"`
	CreateAt                         *TimestamptzComparisonExp `json:"create_at"`
	CreateBy                         *StringComparisonExp      `json:"create_by"`
	DeleteAt                         *TimestamptzComparisonExp `json:"delete_at"`
	DeleteBy                         *StringComparisonExp      `json:"delete_by"`
	DisplayNumber                    *IntComparisonExp         `json:"display_number"`
	DistrictID                       *BigintComparisonExp      `json:"district_id"`
	EnterpriseAddress                *StringComparisonExp      `json:"enterprise_address"`
	EnterpriseCode                   *StringComparisonExp      `json:"enterprise_code"`
	EnterpriseID                     *StringComparisonExp      `json:"enterprise_id"`
	EnterpriseLevel                  *IntComparisonExp         `json:"enterprise_level"`
	EnterpriseName                   *StringComparisonExp      `json:"enterprise_name"`
	EnterpriseNature                 *IntComparisonExp         `json:"enterprise_nature"`
	EntrustedAgent                   *StringComparisonExp      `json:"entrusted_agent"`
	EntrustedAgentIDCard             *StringComparisonExp      `json:"entrusted_agent_id_card"`
	EntrustedAgentIDCardPhoto        *StringComparisonExp      `json:"entrusted_agent_id_card_photo"`
	EntrustedAgentPhone              *StringComparisonExp      `json:"entrusted_agent_phone"`
	FaxNumber                        *StringComparisonExp      `json:"fax_number"`
	ID                               *BigintComparisonExp      `json:"id"`
	InstitutionCategory              *BigintComparisonExp      `json:"institution_category"`
	IsBlack                          *BooleanComparisonExp     `json:"is_black"`
	IsDeleted                        *BooleanComparisonExp     `json:"is_deleted"`
	IsInput                          *BooleanComparisonExp     `json:"is_input"`
	IsInstall                        *BooleanComparisonExp     `json:"is_install"`
	IsUploadProvince                 *BooleanComparisonExp     `json:"is_upload_province"`
	LegalRepresentative              *StringComparisonExp      `json:"legal_representative"`
	LegalRepresentativeIDCard        *StringComparisonExp      `json:"legal_representative_id_card"`
	LegalRepresentativeIDCardPhoto   *StringComparisonExp      `json:"legal_representative_id_card_photo"`
	LegalRepresentativePhone         *StringComparisonExp      `json:"legal_representative_phone"`
	OperatingLicensePhoto            *StringComparisonExp      `json:"operating_license_photo"`
	OrganizationCode                 *StringComparisonExp      `json:"organization_code"`
	OrganizationCodeCertificatePhoto *StringComparisonExp      `json:"organization_code_certificate_photo"`
	PoliceStationID                  *StringComparisonExp      `json:"police_station_id"`
	ProvinceID                       *BigintComparisonExp      `json:"province_id"`
	RecordAt                         *TimestamptzComparisonExp `json:"record_at"`
	RecordBy                         *StringComparisonExp      `json:"record_by"`
	Remarks                          *StringComparisonExp      `json:"remarks"`
	Score                            *IntComparisonExp         `json:"score"`
	SuperiorEnterpriseID             *StringComparisonExp      `json:"superior_enterprise_id"`
	UpdateAt                         *TimestamptzComparisonExp `json:"update_at"`
	UpdateBy                         *StringComparisonExp      `json:"update_by"`
	UpdateTimeIn                     *TimestamptzComparisonExp `json:"update_time_in"`
}

// input type for incrementing integer column in table "enterprise"
type EnterpriseIncInput struct {
	BusinessScope       *int    `json:"business_scope"`
	CheckStatus         *int    `json:"check_status"`
	CityID              *string `json:"city_id"`
	DisplayNumber       *int    `json:"display_number"`
	DistrictID          *string `json:"district_id"`
	EnterpriseLevel     *int    `json:"enterprise_level"`
	EnterpriseNature    *int    `json:"enterprise_nature"`
	ID                  *string `json:"id"`
	InstitutionCategory *string `json:"institution_category"`
	ProvinceID          *string `json:"province_id"`
	Score               *int    `json:"score"`
}

// input type for inserting data into table "enterprise"
type EnterpriseInsertInput struct {
	AssociationReviewBy              *string `json:"association_review_by"`
	AssociationReviewOpinion         *string `json:"association_review_opinion"`
	AssociationReviewTime            *string `json:"association_review_time"`
	BrigadeID                        *string `json:"brigade_id"`
	BrigadeReviewBy                  *string `json:"brigade_review_by"`
	BrigadeReviewOpinion             *string `json:"brigade_review_opinion"`
	BrigadeReviewTime                *string `json:"brigade_review_time"`
	BusinessLicenseExpiryDate        *string `json:"business_license_expiry_date"`
	BusinessLicenseIssuanceDate      *string `json:"business_license_issuance_date"`
	BusinessLicensePhoto             *string `json:"business_license_photo"`
	BusinessPhoto                    *string `json:"business_photo"`
	BusinessScope                    *int    `json:"business_scope"`
	CheckStatus                      *int    `json:"check_status"`
	CityID                           *string `json:"city_id"`
	ContactPersons                   *string `json:"contact_persons"`
	CreateAt                         *string `json:"create_at"`
	CreateBy                         *string `json:"create_by"`
	DeleteAt                         *string `json:"delete_at"`
	DeleteBy                         *string `json:"delete_by"`
	DisplayNumber                    *int    `json:"display_number"`
	DistrictID                       *string `json:"district_id"`
	EnterpriseAddress                *string `json:"enterprise_address"`
	EnterpriseCode                   *string `json:"enterprise_code"`
	EnterpriseID                     *string `json:"enterprise_id"`
	EnterpriseLevel                  *int    `json:"enterprise_level"`
	EnterpriseName                   *string `json:"enterprise_name"`
	EnterpriseNature                 *int    `json:"enterprise_nature"`
	EntrustedAgent                   *string `json:"entrusted_agent"`
	EntrustedAgentIDCard             *string `json:"entrusted_agent_id_card"`
	EntrustedAgentIDCardPhoto        *string `json:"entrusted_agent_id_card_photo"`
	EntrustedAgentPhone              *string `json:"entrusted_agent_phone"`
	FaxNumber                        *string `json:"fax_number"`
	ID                               *string `json:"id"`
	InstitutionCategory              *string `json:"institution_category"`
	IsBlack                          *bool   `json:"is_black"`
	IsDeleted                        *bool   `json:"is_deleted"`
	IsInput                          *bool   `json:"is_input"`
	IsInstall                        *bool   `json:"is_install"`
	IsUploadProvince                 *bool   `json:"is_upload_province"`
	LegalRepresentative              *string `json:"legal_representative"`
	LegalRepresentativeIDCard        *string `json:"legal_representative_id_card"`
	LegalRepresentativeIDCardPhoto   *string `json:"legal_representative_id_card_photo"`
	LegalRepresentativePhone         *string `json:"legal_representative_phone"`
	OperatingLicensePhoto            *string `json:"operating_license_photo"`
	OrganizationCode                 *string `json:"organization_code"`
	OrganizationCodeCertificatePhoto *string `json:"organization_code_certificate_photo"`
	PoliceStationID                  *string `json:"police_station_id"`
	ProvinceID                       *string `json:"province_id"`
	RecordAt                         *string `json:"record_at"`
	RecordBy                         *string `json:"record_by"`
	Remarks                          *string `json:"remarks"`
	Score                            *int    `json:"score"`
	SuperiorEnterpriseID             *string `json:"superior_enterprise_id"`
	UpdateAt                         *string `json:"update_at"`
	UpdateBy                         *string `json:"update_by"`
	UpdateTimeIn                     *string `json:"update_time_in"`
}

// aggregate max on columns
type EnterpriseMaxFields struct {
	AssociationReviewBy              *string `json:"association_review_by"`
	AssociationReviewOpinion         *string `json:"association_review_opinion"`
	AssociationReviewTime            *string `json:"association_review_time"`
	BrigadeID                        *string `json:"brigade_id"`
	BrigadeReviewBy                  *string `json:"brigade_review_by"`
	BrigadeReviewOpinion             *string `json:"brigade_review_opinion"`
	BrigadeReviewTime                *string `json:"brigade_review_time"`
	BusinessLicenseExpiryDate        *string `json:"business_license_expiry_date"`
	BusinessLicenseIssuanceDate      *string `json:"business_license_issuance_date"`
	BusinessLicensePhoto             *string `json:"business_license_photo"`
	BusinessPhoto                    *string `json:"business_photo"`
	BusinessScope                    *int    `json:"business_scope"`
	CheckStatus                      *int    `json:"check_status"`
	CityID                           *string `json:"city_id"`
	CreateAt                         *string `json:"create_at"`
	CreateBy                         *string `json:"create_by"`
	DeleteAt                         *string `json:"delete_at"`
	DeleteBy                         *string `json:"delete_by"`
	DisplayNumber                    *int    `json:"display_number"`
	DistrictID                       *string `json:"district_id"`
	EnterpriseAddress                *string `json:"enterprise_address"`
	EnterpriseCode                   *string `json:"enterprise_code"`
	EnterpriseID                     *string `json:"enterprise_id"`
	EnterpriseLevel                  *int    `json:"enterprise_level"`
	EnterpriseName                   *string `json:"enterprise_name"`
	EnterpriseNature                 *int    `json:"enterprise_nature"`
	EntrustedAgent                   *string `json:"entrusted_agent"`
	EntrustedAgentIDCard             *string `json:"entrusted_agent_id_card"`
	EntrustedAgentIDCardPhoto        *string `json:"entrusted_agent_id_card_photo"`
	EntrustedAgentPhone              *string `json:"entrusted_agent_phone"`
	FaxNumber                        *string `json:"fax_number"`
	ID                               *string `json:"id"`
	InstitutionCategory              *string `json:"institution_category"`
	LegalRepresentative              *string `json:"legal_representative"`
	LegalRepresentativeIDCard        *string `json:"legal_representative_id_card"`
	LegalRepresentativeIDCardPhoto   *string `json:"legal_representative_id_card_photo"`
	LegalRepresentativePhone         *string `json:"legal_representative_phone"`
	OperatingLicensePhoto            *string `json:"operating_license_photo"`
	OrganizationCode                 *string `json:"organization_code"`
	OrganizationCodeCertificatePhoto *string `json:"organization_code_certificate_photo"`
	PoliceStationID                  *string `json:"police_station_id"`
	ProvinceID                       *string `json:"province_id"`
	RecordAt                         *string `json:"record_at"`
	RecordBy                         *string `json:"record_by"`
	Remarks                          *string `json:"remarks"`
	Score                            *int    `json:"score"`
	SuperiorEnterpriseID             *string `json:"superior_enterprise_id"`
	UpdateAt                         *string `json:"update_at"`
	UpdateBy                         *string `json:"update_by"`
	UpdateTimeIn                     *string `json:"update_time_in"`
}

// order by max() on columns of table "enterprise"
type EnterpriseMaxOrderBy struct {
	AssociationReviewBy              *OrderBy `json:"association_review_by"`
	AssociationReviewOpinion         *OrderBy `json:"association_review_opinion"`
	AssociationReviewTime            *OrderBy `json:"association_review_time"`
	BrigadeID                        *OrderBy `json:"brigade_id"`
	BrigadeReviewBy                  *OrderBy `json:"brigade_review_by"`
	BrigadeReviewOpinion             *OrderBy `json:"brigade_review_opinion"`
	BrigadeReviewTime                *OrderBy `json:"brigade_review_time"`
	BusinessLicenseExpiryDate        *OrderBy `json:"business_license_expiry_date"`
	BusinessLicenseIssuanceDate      *OrderBy `json:"business_license_issuance_date"`
	BusinessLicensePhoto             *OrderBy `json:"business_license_photo"`
	BusinessPhoto                    *OrderBy `json:"business_photo"`
	BusinessScope                    *OrderBy `json:"business_scope"`
	CheckStatus                      *OrderBy `json:"check_status"`
	CityID                           *OrderBy `json:"city_id"`
	CreateAt                         *OrderBy `json:"create_at"`
	CreateBy                         *OrderBy `json:"create_by"`
	DeleteAt                         *OrderBy `json:"delete_at"`
	DeleteBy                         *OrderBy `json:"delete_by"`
	DisplayNumber                    *OrderBy `json:"display_number"`
	DistrictID                       *OrderBy `json:"district_id"`
	EnterpriseAddress                *OrderBy `json:"enterprise_address"`
	EnterpriseCode                   *OrderBy `json:"enterprise_code"`
	EnterpriseID                     *OrderBy `json:"enterprise_id"`
	EnterpriseLevel                  *OrderBy `json:"enterprise_level"`
	EnterpriseName                   *OrderBy `json:"enterprise_name"`
	EnterpriseNature                 *OrderBy `json:"enterprise_nature"`
	EntrustedAgent                   *OrderBy `json:"entrusted_agent"`
	EntrustedAgentIDCard             *OrderBy `json:"entrusted_agent_id_card"`
	EntrustedAgentIDCardPhoto        *OrderBy `json:"entrusted_agent_id_card_photo"`
	EntrustedAgentPhone              *OrderBy `json:"entrusted_agent_phone"`
	FaxNumber                        *OrderBy `json:"fax_number"`
	ID                               *OrderBy `json:"id"`
	InstitutionCategory              *OrderBy `json:"institution_category"`
	LegalRepresentative              *OrderBy `json:"legal_representative"`
	LegalRepresentativeIDCard        *OrderBy `json:"legal_representative_id_card"`
	LegalRepresentativeIDCardPhoto   *OrderBy `json:"legal_representative_id_card_photo"`
	LegalRepresentativePhone         *OrderBy `json:"legal_representative_phone"`
	OperatingLicensePhoto            *OrderBy `json:"operating_license_photo"`
	OrganizationCode                 *OrderBy `json:"organization_code"`
	OrganizationCodeCertificatePhoto *OrderBy `json:"organization_code_certificate_photo"`
	PoliceStationID                  *OrderBy `json:"police_station_id"`
	ProvinceID                       *OrderBy `json:"province_id"`
	RecordAt                         *OrderBy `json:"record_at"`
	RecordBy                         *OrderBy `json:"record_by"`
	Remarks                          *OrderBy `json:"remarks"`
	Score                            *OrderBy `json:"score"`
	SuperiorEnterpriseID             *OrderBy `json:"superior_enterprise_id"`
	UpdateAt                         *OrderBy `json:"update_at"`
	UpdateBy                         *OrderBy `json:"update_by"`
	UpdateTimeIn                     *OrderBy `json:"update_time_in"`
}

// aggregate min on columns
type EnterpriseMinFields struct {
	AssociationReviewBy              *string `json:"association_review_by"`
	AssociationReviewOpinion         *string `json:"association_review_opinion"`
	AssociationReviewTime            *string `json:"association_review_time"`
	BrigadeID                        *string `json:"brigade_id"`
	BrigadeReviewBy                  *string `json:"brigade_review_by"`
	BrigadeReviewOpinion             *string `json:"brigade_review_opinion"`
	BrigadeReviewTime                *string `json:"brigade_review_time"`
	BusinessLicenseExpiryDate        *string `json:"business_license_expiry_date"`
	BusinessLicenseIssuanceDate      *string `json:"business_license_issuance_date"`
	BusinessLicensePhoto             *string `json:"business_license_photo"`
	BusinessPhoto                    *string `json:"business_photo"`
	BusinessScope                    *int    `json:"business_scope"`
	CheckStatus                      *int    `json:"check_status"`
	CityID                           *string `json:"city_id"`
	CreateAt                         *string `json:"create_at"`
	CreateBy                         *string `json:"create_by"`
	DeleteAt                         *string `json:"delete_at"`
	DeleteBy                         *string `json:"delete_by"`
	DisplayNumber                    *int    `json:"display_number"`
	DistrictID                       *string `json:"district_id"`
	EnterpriseAddress                *string `json:"enterprise_address"`
	EnterpriseCode                   *string `json:"enterprise_code"`
	EnterpriseID                     *string `json:"enterprise_id"`
	EnterpriseLevel                  *int    `json:"enterprise_level"`
	EnterpriseName                   *string `json:"enterprise_name"`
	EnterpriseNature                 *int    `json:"enterprise_nature"`
	EntrustedAgent                   *string `json:"entrusted_agent"`
	EntrustedAgentIDCard             *string `json:"entrusted_agent_id_card"`
	EntrustedAgentIDCardPhoto        *string `json:"entrusted_agent_id_card_photo"`
	EntrustedAgentPhone              *string `json:"entrusted_agent_phone"`
	FaxNumber                        *string `json:"fax_number"`
	ID                               *string `json:"id"`
	InstitutionCategory              *string `json:"institution_category"`
	LegalRepresentative              *string `json:"legal_representative"`
	LegalRepresentativeIDCard        *string `json:"legal_representative_id_card"`
	LegalRepresentativeIDCardPhoto   *string `json:"legal_representative_id_card_photo"`
	LegalRepresentativePhone         *string `json:"legal_representative_phone"`
	OperatingLicensePhoto            *string `json:"operating_license_photo"`
	OrganizationCode                 *string `json:"organization_code"`
	OrganizationCodeCertificatePhoto *string `json:"organization_code_certificate_photo"`
	PoliceStationID                  *string `json:"police_station_id"`
	ProvinceID                       *string `json:"province_id"`
	RecordAt                         *string `json:"record_at"`
	RecordBy                         *string `json:"record_by"`
	Remarks                          *string `json:"remarks"`
	Score                            *int    `json:"score"`
	SuperiorEnterpriseID             *string `json:"superior_enterprise_id"`
	UpdateAt                         *string `json:"update_at"`
	UpdateBy                         *string `json:"update_by"`
	UpdateTimeIn                     *string `json:"update_time_in"`
}

// order by min() on columns of table "enterprise"
type EnterpriseMinOrderBy struct {
	AssociationReviewBy              *OrderBy `json:"association_review_by"`
	AssociationReviewOpinion         *OrderBy `json:"association_review_opinion"`
	AssociationReviewTime            *OrderBy `json:"association_review_time"`
	BrigadeID                        *OrderBy `json:"brigade_id"`
	BrigadeReviewBy                  *OrderBy `json:"brigade_review_by"`
	BrigadeReviewOpinion             *OrderBy `json:"brigade_review_opinion"`
	BrigadeReviewTime                *OrderBy `json:"brigade_review_time"`
	BusinessLicenseExpiryDate        *OrderBy `json:"business_license_expiry_date"`
	BusinessLicenseIssuanceDate      *OrderBy `json:"business_license_issuance_date"`
	BusinessLicensePhoto             *OrderBy `json:"business_license_photo"`
	BusinessPhoto                    *OrderBy `json:"business_photo"`
	BusinessScope                    *OrderBy `json:"business_scope"`
	CheckStatus                      *OrderBy `json:"check_status"`
	CityID                           *OrderBy `json:"city_id"`
	CreateAt                         *OrderBy `json:"create_at"`
	CreateBy                         *OrderBy `json:"create_by"`
	DeleteAt                         *OrderBy `json:"delete_at"`
	DeleteBy                         *OrderBy `json:"delete_by"`
	DisplayNumber                    *OrderBy `json:"display_number"`
	DistrictID                       *OrderBy `json:"district_id"`
	EnterpriseAddress                *OrderBy `json:"enterprise_address"`
	EnterpriseCode                   *OrderBy `json:"enterprise_code"`
	EnterpriseID                     *OrderBy `json:"enterprise_id"`
	EnterpriseLevel                  *OrderBy `json:"enterprise_level"`
	EnterpriseName                   *OrderBy `json:"enterprise_name"`
	EnterpriseNature                 *OrderBy `json:"enterprise_nature"`
	EntrustedAgent                   *OrderBy `json:"entrusted_agent"`
	EntrustedAgentIDCard             *OrderBy `json:"entrusted_agent_id_card"`
	EntrustedAgentIDCardPhoto        *OrderBy `json:"entrusted_agent_id_card_photo"`
	EntrustedAgentPhone              *OrderBy `json:"entrusted_agent_phone"`
	FaxNumber                        *OrderBy `json:"fax_number"`
	ID                               *OrderBy `json:"id"`
	InstitutionCategory              *OrderBy `json:"institution_category"`
	LegalRepresentative              *OrderBy `json:"legal_representative"`
	LegalRepresentativeIDCard        *OrderBy `json:"legal_representative_id_card"`
	LegalRepresentativeIDCardPhoto   *OrderBy `json:"legal_representative_id_card_photo"`
	LegalRepresentativePhone         *OrderBy `json:"legal_representative_phone"`
	OperatingLicensePhoto            *OrderBy `json:"operating_license_photo"`
	OrganizationCode                 *OrderBy `json:"organization_code"`
	OrganizationCodeCertificatePhoto *OrderBy `json:"organization_code_certificate_photo"`
	PoliceStationID                  *OrderBy `json:"police_station_id"`
	ProvinceID                       *OrderBy `json:"province_id"`
	RecordAt                         *OrderBy `json:"record_at"`
	RecordBy                         *OrderBy `json:"record_by"`
	Remarks                          *OrderBy `json:"remarks"`
	Score                            *OrderBy `json:"score"`
	SuperiorEnterpriseID             *OrderBy `json:"superior_enterprise_id"`
	UpdateAt                         *OrderBy `json:"update_at"`
	UpdateBy                         *OrderBy `json:"update_by"`
	UpdateTimeIn                     *OrderBy `json:"update_time_in"`
}

// response of any mutation on the table "enterprise"
type EnterpriseMutationResponse struct {
	// number of affected rows by the mutation
	AffectedRows int `json:"affected_rows"`
	// data of the affected rows by the mutation
	Returning []*Enterprise `json:"returning"`
}

// input type for inserting object relation for remote table "enterprise"
type EnterpriseObjRelInsertInput struct {
	Data       *EnterpriseInsertInput `json:"data"`
	OnConflict *EnterpriseOnConflict  `json:"on_conflict"`
}

// on conflict condition type for table "enterprise"
type EnterpriseOnConflict struct {
	Constraint    EnterpriseConstraint     `json:"constraint"`
	UpdateColumns []EnterpriseUpdateColumn `json:"update_columns"`
	Where         *EnterpriseBoolExp       `json:"where"`
}

// ordering options when selecting data from "enterprise"
type EnterpriseOrderBy struct {
	AssociationReviewBy              *OrderBy `json:"association_review_by"`
	AssociationReviewOpinion         *OrderBy `json:"association_review_opinion"`
	AssociationReviewTime            *OrderBy `json:"association_review_time"`
	BrigadeID                        *OrderBy `json:"brigade_id"`
	BrigadeReviewBy                  *OrderBy `json:"brigade_review_by"`
	BrigadeReviewOpinion             *OrderBy `json:"brigade_review_opinion"`
	BrigadeReviewTime                *OrderBy `json:"brigade_review_time"`
	BusinessLicenseExpiryDate        *OrderBy `json:"business_license_expiry_date"`
	BusinessLicenseIssuanceDate      *OrderBy `json:"business_license_issuance_date"`
	BusinessLicensePhoto             *OrderBy `json:"business_license_photo"`
	BusinessPhoto                    *OrderBy `json:"business_photo"`
	BusinessScope                    *OrderBy `json:"business_scope"`
	CheckStatus                      *OrderBy `json:"check_status"`
	CityID                           *OrderBy `json:"city_id"`
	ContactPersons                   *OrderBy `json:"contact_persons"`
	CreateAt                         *OrderBy `json:"create_at"`
	CreateBy                         *OrderBy `json:"create_by"`
	DeleteAt                         *OrderBy `json:"delete_at"`
	DeleteBy                         *OrderBy `json:"delete_by"`
	DisplayNumber                    *OrderBy `json:"display_number"`
	DistrictID                       *OrderBy `json:"district_id"`
	EnterpriseAddress                *OrderBy `json:"enterprise_address"`
	EnterpriseCode                   *OrderBy `json:"enterprise_code"`
	EnterpriseID                     *OrderBy `json:"enterprise_id"`
	EnterpriseLevel                  *OrderBy `json:"enterprise_level"`
	EnterpriseName                   *OrderBy `json:"enterprise_name"`
	EnterpriseNature                 *OrderBy `json:"enterprise_nature"`
	EntrustedAgent                   *OrderBy `json:"entrusted_agent"`
	EntrustedAgentIDCard             *OrderBy `json:"entrusted_agent_id_card"`
	EntrustedAgentIDCardPhoto        *OrderBy `json:"entrusted_agent_id_card_photo"`
	EntrustedAgentPhone              *OrderBy `json:"entrusted_agent_phone"`
	FaxNumber                        *OrderBy `json:"fax_number"`
	ID                               *OrderBy `json:"id"`
	InstitutionCategory              *OrderBy `json:"institution_category"`
	IsBlack                          *OrderBy `json:"is_black"`
	IsDeleted                        *OrderBy `json:"is_deleted"`
	IsInput                          *OrderBy `json:"is_input"`
	IsInstall                        *OrderBy `json:"is_install"`
	IsUploadProvince                 *OrderBy `json:"is_upload_province"`
	LegalRepresentative              *OrderBy `json:"legal_representative"`
	LegalRepresentativeIDCard        *OrderBy `json:"legal_representative_id_card"`
	LegalRepresentativeIDCardPhoto   *OrderBy `json:"legal_representative_id_card_photo"`
	LegalRepresentativePhone         *OrderBy `json:"legal_representative_phone"`
	OperatingLicensePhoto            *OrderBy `json:"operating_license_photo"`
	OrganizationCode                 *OrderBy `json:"organization_code"`
	OrganizationCodeCertificatePhoto *OrderBy `json:"organization_code_certificate_photo"`
	PoliceStationID                  *OrderBy `json:"police_station_id"`
	ProvinceID                       *OrderBy `json:"province_id"`
	RecordAt                         *OrderBy `json:"record_at"`
	RecordBy                         *OrderBy `json:"record_by"`
	Remarks                          *OrderBy `json:"remarks"`
	Score                            *OrderBy `json:"score"`
	SuperiorEnterpriseID             *OrderBy `json:"superior_enterprise_id"`
	UpdateAt                         *OrderBy `json:"update_at"`
	UpdateBy                         *OrderBy `json:"update_by"`
	UpdateTimeIn                     *OrderBy `json:"update_time_in"`
}

// primary key columns input for table: "enterprise"
type EnterprisePkColumnsInput struct {
	// ID
	ID string `json:"id"`
}

// input type for updating data in table "enterprise"
type EnterpriseSetInput struct {
	AssociationReviewBy              *string `json:"association_review_by"`
	AssociationReviewOpinion         *string `json:"association_review_opinion"`
	AssociationReviewTime            *string `json:"association_review_time"`
	BrigadeID                        *string `json:"brigade_id"`
	BrigadeReviewBy                  *string `json:"brigade_review_by"`
	BrigadeReviewOpinion             *string `json:"brigade_review_opinion"`
	BrigadeReviewTime                *string `json:"brigade_review_time"`
	BusinessLicenseExpiryDate        *string `json:"business_license_expiry_date"`
	BusinessLicenseIssuanceDate      *string `json:"business_license_issuance_date"`
	BusinessLicensePhoto             *string `json:"business_license_photo"`
	BusinessPhoto                    *string `json:"business_photo"`
	BusinessScope                    *int    `json:"business_scope"`
	CheckStatus                      *int    `json:"check_status"`
	CityID                           *string `json:"city_id"`
	ContactPersons                   *string `json:"contact_persons"`
	CreateAt                         *string `json:"create_at"`
	CreateBy                         *string `json:"create_by"`
	DeleteAt                         *string `json:"delete_at"`
	DeleteBy                         *string `json:"delete_by"`
	DisplayNumber                    *int    `json:"display_number"`
	DistrictID                       *string `json:"district_id"`
	EnterpriseAddress                *string `json:"enterprise_address"`
	EnterpriseCode                   *string `json:"enterprise_code"`
	EnterpriseID                     *string `json:"enterprise_id"`
	EnterpriseLevel                  *int    `json:"enterprise_level"`
	EnterpriseName                   *string `json:"enterprise_name"`
	EnterpriseNature                 *int    `json:"enterprise_nature"`
	EntrustedAgent                   *string `json:"entrusted_agent"`
	EntrustedAgentIDCard             *string `json:"entrusted_agent_id_card"`
	EntrustedAgentIDCardPhoto        *string `json:"entrusted_agent_id_card_photo"`
	EntrustedAgentPhone              *string `json:"entrusted_agent_phone"`
	FaxNumber                        *string `json:"fax_number"`
	ID                               *string `json:"id"`
	InstitutionCategory              *string `json:"institution_category"`
	IsBlack                          *bool   `json:"is_black"`
	IsDeleted                        *bool   `json:"is_deleted"`
	IsInput                          *bool   `json:"is_input"`
	IsInstall                        *bool   `json:"is_install"`
	IsUploadProvince                 *bool   `json:"is_upload_province"`
	LegalRepresentative              *string `json:"legal_representative"`
	LegalRepresentativeIDCard        *string `json:"legal_representative_id_card"`
	LegalRepresentativeIDCardPhoto   *string `json:"legal_representative_id_card_photo"`
	LegalRepresentativePhone         *string `json:"legal_representative_phone"`
	OperatingLicensePhoto            *string `json:"operating_license_photo"`
	OrganizationCode                 *string `json:"organization_code"`
	OrganizationCodeCertificatePhoto *string `json:"organization_code_certificate_photo"`
	PoliceStationID                  *string `json:"police_station_id"`
	ProvinceID                       *string `json:"province_id"`
	RecordAt                         *string `json:"record_at"`
	RecordBy                         *string `json:"record_by"`
	Remarks                          *string `json:"remarks"`
	Score                            *int    `json:"score"`
	SuperiorEnterpriseID             *string `json:"superior_enterprise_id"`
	UpdateAt                         *string `json:"update_at"`
	UpdateBy                         *string `json:"update_by"`
	UpdateTimeIn                     *string `json:"update_time_in"`
}

// aggregate stddev on columns
type EnterpriseStddevFields struct {
	BusinessScope       *float64 `json:"business_scope"`
	CheckStatus         *float64 `json:"check_status"`
	CityID              *float64 `json:"city_id"`
	DisplayNumber       *float64 `json:"display_number"`
	DistrictID          *float64 `json:"district_id"`
	EnterpriseLevel     *float64 `json:"enterprise_level"`
	EnterpriseNature    *float64 `json:"enterprise_nature"`
	ID                  *float64 `json:"id"`
	InstitutionCategory *float64 `json:"institution_category"`
	ProvinceID          *float64 `json:"province_id"`
	Score               *float64 `json:"score"`
}

// order by stddev() on columns of table "enterprise"
type EnterpriseStddevOrderBy struct {
	BusinessScope       *OrderBy `json:"business_scope"`
	CheckStatus         *OrderBy `json:"check_status"`
	CityID              *OrderBy `json:"city_id"`
	DisplayNumber       *OrderBy `json:"display_number"`
	DistrictID          *OrderBy `json:"district_id"`
	EnterpriseLevel     *OrderBy `json:"enterprise_level"`
	EnterpriseNature    *OrderBy `json:"enterprise_nature"`
	ID                  *OrderBy `json:"id"`
	InstitutionCategory *OrderBy `json:"institution_category"`
	ProvinceID          *OrderBy `json:"province_id"`
	Score               *OrderBy `json:"score"`
}

// aggregate stddev_pop on columns
type EnterpriseStddevPopFields struct {
	BusinessScope       *float64 `json:"business_scope"`
	CheckStatus         *float64 `json:"check_status"`
	CityID              *float64 `json:"city_id"`
	DisplayNumber       *float64 `json:"display_number"`
	DistrictID          *float64 `json:"district_id"`
	EnterpriseLevel     *float64 `json:"enterprise_level"`
	EnterpriseNature    *float64 `json:"enterprise_nature"`
	ID                  *float64 `json:"id"`
	InstitutionCategory *float64 `json:"institution_category"`
	ProvinceID          *float64 `json:"province_id"`
	Score               *float64 `json:"score"`
}

// order by stddev_pop() on columns of table "enterprise"
type EnterpriseStddevPopOrderBy struct {
	BusinessScope       *OrderBy `json:"business_scope"`
	CheckStatus         *OrderBy `json:"check_status"`
	CityID              *OrderBy `json:"city_id"`
	DisplayNumber       *OrderBy `json:"display_number"`
	DistrictID          *OrderBy `json:"district_id"`
	EnterpriseLevel     *OrderBy `json:"enterprise_level"`
	EnterpriseNature    *OrderBy `json:"enterprise_nature"`
	ID                  *OrderBy `json:"id"`
	InstitutionCategory *OrderBy `json:"institution_category"`
	ProvinceID          *OrderBy `json:"province_id"`
	Score               *OrderBy `json:"score"`
}

// aggregate stddev_samp on columns
type EnterpriseStddevSampFields struct {
	BusinessScope       *float64 `json:"business_scope"`
	CheckStatus         *float64 `json:"check_status"`
	CityID              *float64 `json:"city_id"`
	DisplayNumber       *float64 `json:"display_number"`
	DistrictID          *float64 `json:"district_id"`
	EnterpriseLevel     *float64 `json:"enterprise_level"`
	EnterpriseNature    *float64 `json:"enterprise_nature"`
	ID                  *float64 `json:"id"`
	InstitutionCategory *float64 `json:"institution_category"`
	ProvinceID          *float64 `json:"province_id"`
	Score               *float64 `json:"score"`
}

// order by stddev_samp() on columns of table "enterprise"
type EnterpriseStddevSampOrderBy struct {
	BusinessScope       *OrderBy `json:"business_scope"`
	CheckStatus         *OrderBy `json:"check_status"`
	CityID              *OrderBy `json:"city_id"`
	DisplayNumber       *OrderBy `json:"display_number"`
	DistrictID          *OrderBy `json:"district_id"`
	EnterpriseLevel     *OrderBy `json:"enterprise_level"`
	EnterpriseNature    *OrderBy `json:"enterprise_nature"`
	ID                  *OrderBy `json:"id"`
	InstitutionCategory *OrderBy `json:"institution_category"`
	ProvinceID          *OrderBy `json:"province_id"`
	Score               *OrderBy `json:"score"`
}

// aggregate sum on columns
type EnterpriseSumFields struct {
	BusinessScope       *int    `json:"business_scope"`
	CheckStatus         *int    `json:"check_status"`
	CityID              *string `json:"city_id"`
	DisplayNumber       *int    `json:"display_number"`
	DistrictID          *string `json:"district_id"`
	EnterpriseLevel     *int    `json:"enterprise_level"`
	EnterpriseNature    *int    `json:"enterprise_nature"`
	ID                  *string `json:"id"`
	InstitutionCategory *string `json:"institution_category"`
	ProvinceID          *string `json:"province_id"`
	Score               *int    `json:"score"`
}

// order by sum() on columns of table "enterprise"
type EnterpriseSumOrderBy struct {
	BusinessScope       *OrderBy `json:"business_scope"`
	CheckStatus         *OrderBy `json:"check_status"`
	CityID              *OrderBy `json:"city_id"`
	DisplayNumber       *OrderBy `json:"display_number"`
	DistrictID          *OrderBy `json:"district_id"`
	EnterpriseLevel     *OrderBy `json:"enterprise_level"`
	EnterpriseNature    *OrderBy `json:"enterprise_nature"`
	ID                  *OrderBy `json:"id"`
	InstitutionCategory *OrderBy `json:"institution_category"`
	ProvinceID          *OrderBy `json:"province_id"`
	Score               *OrderBy `json:"score"`
}

// aggregate var_pop on columns
type EnterpriseVarPopFields struct {
	BusinessScope       *float64 `json:"business_scope"`
	CheckStatus         *float64 `json:"check_status"`
	CityID              *float64 `json:"city_id"`
	DisplayNumber       *float64 `json:"display_number"`
	DistrictID          *float64 `json:"district_id"`
	EnterpriseLevel     *float64 `json:"enterprise_level"`
	EnterpriseNature    *float64 `json:"enterprise_nature"`
	ID                  *float64 `json:"id"`
	InstitutionCategory *float64 `json:"institution_category"`
	ProvinceID          *float64 `json:"province_id"`
	Score               *float64 `json:"score"`
}

// order by var_pop() on columns of table "enterprise"
type EnterpriseVarPopOrderBy struct {
	BusinessScope       *OrderBy `json:"business_scope"`
	CheckStatus         *OrderBy `json:"check_status"`
	CityID              *OrderBy `json:"city_id"`
	DisplayNumber       *OrderBy `json:"display_number"`
	DistrictID          *OrderBy `json:"district_id"`
	EnterpriseLevel     *OrderBy `json:"enterprise_level"`
	EnterpriseNature    *OrderBy `json:"enterprise_nature"`
	ID                  *OrderBy `json:"id"`
	InstitutionCategory *OrderBy `json:"institution_category"`
	ProvinceID          *OrderBy `json:"province_id"`
	Score               *OrderBy `json:"score"`
}

// aggregate var_samp on columns
type EnterpriseVarSampFields struct {
	BusinessScope       *float64 `json:"business_scope"`
	CheckStatus         *float64 `json:"check_status"`
	CityID              *float64 `json:"city_id"`
	DisplayNumber       *float64 `json:"display_number"`
	DistrictID          *float64 `json:"district_id"`
	EnterpriseLevel     *float64 `json:"enterprise_level"`
	EnterpriseNature    *float64 `json:"enterprise_nature"`
	ID                  *float64 `json:"id"`
	InstitutionCategory *float64 `json:"institution_category"`
	ProvinceID          *float64 `json:"province_id"`
	Score               *float64 `json:"score"`
}

// order by var_samp() on columns of table "enterprise"
type EnterpriseVarSampOrderBy struct {
	BusinessScope       *OrderBy `json:"business_scope"`
	CheckStatus         *OrderBy `json:"check_status"`
	CityID              *OrderBy `json:"city_id"`
	DisplayNumber       *OrderBy `json:"display_number"`
	DistrictID          *OrderBy `json:"district_id"`
	EnterpriseLevel     *OrderBy `json:"enterprise_level"`
	EnterpriseNature    *OrderBy `json:"enterprise_nature"`
	ID                  *OrderBy `json:"id"`
	InstitutionCategory *OrderBy `json:"institution_category"`
	ProvinceID          *OrderBy `json:"province_id"`
	Score               *OrderBy `json:"score"`
}

// aggregate variance on columns
type EnterpriseVarianceFields struct {
	BusinessScope       *float64 `json:"business_scope"`
	CheckStatus         *float64 `json:"check_status"`
	CityID              *float64 `json:"city_id"`
	DisplayNumber       *float64 `json:"display_number"`
	DistrictID          *float64 `json:"district_id"`
	EnterpriseLevel     *float64 `json:"enterprise_level"`
	EnterpriseNature    *float64 `json:"enterprise_nature"`
	ID                  *float64 `json:"id"`
	InstitutionCategory *float64 `json:"institution_category"`
	ProvinceID          *float64 `json:"province_id"`
	Score               *float64 `json:"score"`
}

// order by variance() on columns of table "enterprise"
type EnterpriseVarianceOrderBy struct {
	BusinessScope       *OrderBy `json:"business_scope"`
	CheckStatus         *OrderBy `json:"check_status"`
	CityID              *OrderBy `json:"city_id"`
	DisplayNumber       *OrderBy `json:"display_number"`
	DistrictID          *OrderBy `json:"district_id"`
	EnterpriseLevel     *OrderBy `json:"enterprise_level"`
	EnterpriseNature    *OrderBy `json:"enterprise_nature"`
	ID                  *OrderBy `json:"id"`
	InstitutionCategory *OrderBy `json:"institution_category"`
	ProvinceID          *OrderBy `json:"province_id"`
	Score               *OrderBy `json:"score"`
}

// expression to compare columns of type timestamptz. All fields are combined with logical 'AND'.
type TimestamptzComparisonExp struct {
	Eq     *string  `json:"_eq"`
	Gt     *string  `json:"_gt"`
	Gte    *string  `json:"_gte"`
	In     []string `json:"_in"`
	IsNull *bool    `json:"_is_null"`
	Lt     *string  `json:"_lt"`
	Lte    *string  `json:"_lte"`
	Neq    *string  `json:"_neq"`
	Nin    []string `json:"_nin"`
}

// unique or primary key constraints on table "enterprise"
type EnterpriseConstraint string

const (
	// unique or primary key constraint
	EnterpriseConstraintNewtablePk EnterpriseConstraint = "newtable_pk"
)

var AllEnterpriseConstraint = []EnterpriseConstraint{
	EnterpriseConstraintNewtablePk,
}

func (e EnterpriseConstraint) IsValid() bool {
	switch e {
	case EnterpriseConstraintNewtablePk:
		return true
	}
	return false
}

func (e EnterpriseConstraint) String() string {
	return string(e)
}

func (e *EnterpriseConstraint) UnmarshalGQL(v interface{}) error {
	str, ok := v.(string)
	if !ok {
		return fmt.Errorf("enums must be strings")
	}

	*e = EnterpriseConstraint(str)
	if !e.IsValid() {
		return fmt.Errorf("%s is not a valid enterprise_constraint", str)
	}
	return nil
}

func (e EnterpriseConstraint) MarshalGQL(w io.Writer) {
	fmt.Fprint(w, strconv.Quote(e.String()))
}

// select columns of table "enterprise"
type EnterpriseSelectColumn string

const (
	// column name
	EnterpriseSelectColumnAssociationReviewBy EnterpriseSelectColumn = "association_review_by"
	// column name
	EnterpriseSelectColumnAssociationReviewOpinion EnterpriseSelectColumn = "association_review_opinion"
	// column name
	EnterpriseSelectColumnAssociationReviewTime EnterpriseSelectColumn = "association_review_time"
	// column name
	EnterpriseSelectColumnBrigadeID EnterpriseSelectColumn = "brigade_id"
	// column name
	EnterpriseSelectColumnBrigadeReviewBy EnterpriseSelectColumn = "brigade_review_by"
	// column name
	EnterpriseSelectColumnBrigadeReviewOpinion EnterpriseSelectColumn = "brigade_review_opinion"
	// column name
	EnterpriseSelectColumnBrigadeReviewTime EnterpriseSelectColumn = "brigade_review_time"
	// column name
	EnterpriseSelectColumnBusinessLicenseExpiryDate EnterpriseSelectColumn = "business_license_expiry_date"
	// column name
	EnterpriseSelectColumnBusinessLicenseIssuanceDate EnterpriseSelectColumn = "business_license_issuance_date"
	// column name
	EnterpriseSelectColumnBusinessLicensePhoto EnterpriseSelectColumn = "business_license_photo"
	// column name
	EnterpriseSelectColumnBusinessPhoto EnterpriseSelectColumn = "business_photo"
	// column name
	EnterpriseSelectColumnBusinessScope EnterpriseSelectColumn = "business_scope"
	// column name
	EnterpriseSelectColumnCheckStatus EnterpriseSelectColumn = "check_status"
	// column name
	EnterpriseSelectColumnCityID EnterpriseSelectColumn = "city_id"
	// column name
	EnterpriseSelectColumnContactPersons EnterpriseSelectColumn = "contact_persons"
	// column name
	EnterpriseSelectColumnCreateAt EnterpriseSelectColumn = "create_at"
	// column name
	EnterpriseSelectColumnCreateBy EnterpriseSelectColumn = "create_by"
	// column name
	EnterpriseSelectColumnDeleteAt EnterpriseSelectColumn = "delete_at"
	// column name
	EnterpriseSelectColumnDeleteBy EnterpriseSelectColumn = "delete_by"
	// column name
	EnterpriseSelectColumnDisplayNumber EnterpriseSelectColumn = "display_number"
	// column name
	EnterpriseSelectColumnDistrictID EnterpriseSelectColumn = "district_id"
	// column name
	EnterpriseSelectColumnEnterpriseAddress EnterpriseSelectColumn = "enterprise_address"
	// column name
	EnterpriseSelectColumnEnterpriseCode EnterpriseSelectColumn = "enterprise_code"
	// column name
	EnterpriseSelectColumnEnterpriseID EnterpriseSelectColumn = "enterprise_id"
	// column name
	EnterpriseSelectColumnEnterpriseLevel EnterpriseSelectColumn = "enterprise_level"
	// column name
	EnterpriseSelectColumnEnterpriseName EnterpriseSelectColumn = "enterprise_name"
	// column name
	EnterpriseSelectColumnEnterpriseNature EnterpriseSelectColumn = "enterprise_nature"
	// column name
	EnterpriseSelectColumnEntrustedAgent EnterpriseSelectColumn = "entrusted_agent"
	// column name
	EnterpriseSelectColumnEntrustedAgentIDCard EnterpriseSelectColumn = "entrusted_agent_id_card"
	// column name
	EnterpriseSelectColumnEntrustedAgentIDCardPhoto EnterpriseSelectColumn = "entrusted_agent_id_card_photo"
	// column name
	EnterpriseSelectColumnEntrustedAgentPhone EnterpriseSelectColumn = "entrusted_agent_phone"
	// column name
	EnterpriseSelectColumnFaxNumber EnterpriseSelectColumn = "fax_number"
	// column name
	EnterpriseSelectColumnID EnterpriseSelectColumn = "id"
	// column name
	EnterpriseSelectColumnInstitutionCategory EnterpriseSelectColumn = "institution_category"
	// column name
	EnterpriseSelectColumnIsBlack EnterpriseSelectColumn = "is_black"
	// column name
	EnterpriseSelectColumnIsDeleted EnterpriseSelectColumn = "is_deleted"
	// column name
	EnterpriseSelectColumnIsInput EnterpriseSelectColumn = "is_input"
	// column name
	EnterpriseSelectColumnIsInstall EnterpriseSelectColumn = "is_install"
	// column name
	EnterpriseSelectColumnIsUploadProvince EnterpriseSelectColumn = "is_upload_province"
	// column name
	EnterpriseSelectColumnLegalRepresentative EnterpriseSelectColumn = "legal_representative"
	// column name
	EnterpriseSelectColumnLegalRepresentativeIDCard EnterpriseSelectColumn = "legal_representative_id_card"
	// column name
	EnterpriseSelectColumnLegalRepresentativeIDCardPhoto EnterpriseSelectColumn = "legal_representative_id_card_photo"
	// column name
	EnterpriseSelectColumnLegalRepresentativePhone EnterpriseSelectColumn = "legal_representative_phone"
	// column name
	EnterpriseSelectColumnOperatingLicensePhoto EnterpriseSelectColumn = "operating_license_photo"
	// column name
	EnterpriseSelectColumnOrganizationCode EnterpriseSelectColumn = "organization_code"
	// column name
	EnterpriseSelectColumnOrganizationCodeCertificatePhoto EnterpriseSelectColumn = "organization_code_certificate_photo"
	// column name
	EnterpriseSelectColumnPoliceStationID EnterpriseSelectColumn = "police_station_id"
	// column name
	EnterpriseSelectColumnProvinceID EnterpriseSelectColumn = "province_id"
	// column name
	EnterpriseSelectColumnRecordAt EnterpriseSelectColumn = "record_at"
	// column name
	EnterpriseSelectColumnRecordBy EnterpriseSelectColumn = "record_by"
	// column name
	EnterpriseSelectColumnRemarks EnterpriseSelectColumn = "remarks"
	// column name
	EnterpriseSelectColumnScore EnterpriseSelectColumn = "score"
	// column name
	EnterpriseSelectColumnSuperiorEnterpriseID EnterpriseSelectColumn = "superior_enterprise_id"
	// column name
	EnterpriseSelectColumnUpdateAt EnterpriseSelectColumn = "update_at"
	// column name
	EnterpriseSelectColumnUpdateBy EnterpriseSelectColumn = "update_by"
	// column name
	EnterpriseSelectColumnUpdateTimeIn EnterpriseSelectColumn = "update_time_in"
)

var AllEnterpriseSelectColumn = []EnterpriseSelectColumn{
	EnterpriseSelectColumnAssociationReviewBy,
	EnterpriseSelectColumnAssociationReviewOpinion,
	EnterpriseSelectColumnAssociationReviewTime,
	EnterpriseSelectColumnBrigadeID,
	EnterpriseSelectColumnBrigadeReviewBy,
	EnterpriseSelectColumnBrigadeReviewOpinion,
	EnterpriseSelectColumnBrigadeReviewTime,
	EnterpriseSelectColumnBusinessLicenseExpiryDate,
	EnterpriseSelectColumnBusinessLicenseIssuanceDate,
	EnterpriseSelectColumnBusinessLicensePhoto,
	EnterpriseSelectColumnBusinessPhoto,
	EnterpriseSelectColumnBusinessScope,
	EnterpriseSelectColumnCheckStatus,
	EnterpriseSelectColumnCityID,
	EnterpriseSelectColumnContactPersons,
	EnterpriseSelectColumnCreateAt,
	EnterpriseSelectColumnCreateBy,
	EnterpriseSelectColumnDeleteAt,
	EnterpriseSelectColumnDeleteBy,
	EnterpriseSelectColumnDisplayNumber,
	EnterpriseSelectColumnDistrictID,
	EnterpriseSelectColumnEnterpriseAddress,
	EnterpriseSelectColumnEnterpriseCode,
	EnterpriseSelectColumnEnterpriseID,
	EnterpriseSelectColumnEnterpriseLevel,
	EnterpriseSelectColumnEnterpriseName,
	EnterpriseSelectColumnEnterpriseNature,
	EnterpriseSelectColumnEntrustedAgent,
	EnterpriseSelectColumnEntrustedAgentIDCard,
	EnterpriseSelectColumnEntrustedAgentIDCardPhoto,
	EnterpriseSelectColumnEntrustedAgentPhone,
	EnterpriseSelectColumnFaxNumber,
	EnterpriseSelectColumnID,
	EnterpriseSelectColumnInstitutionCategory,
	EnterpriseSelectColumnIsBlack,
	EnterpriseSelectColumnIsDeleted,
	EnterpriseSelectColumnIsInput,
	EnterpriseSelectColumnIsInstall,
	EnterpriseSelectColumnIsUploadProvince,
	EnterpriseSelectColumnLegalRepresentative,
	EnterpriseSelectColumnLegalRepresentativeIDCard,
	EnterpriseSelectColumnLegalRepresentativeIDCardPhoto,
	EnterpriseSelectColumnLegalRepresentativePhone,
	EnterpriseSelectColumnOperatingLicensePhoto,
	EnterpriseSelectColumnOrganizationCode,
	EnterpriseSelectColumnOrganizationCodeCertificatePhoto,
	EnterpriseSelectColumnPoliceStationID,
	EnterpriseSelectColumnProvinceID,
	EnterpriseSelectColumnRecordAt,
	EnterpriseSelectColumnRecordBy,
	EnterpriseSelectColumnRemarks,
	EnterpriseSelectColumnScore,
	EnterpriseSelectColumnSuperiorEnterpriseID,
	EnterpriseSelectColumnUpdateAt,
	EnterpriseSelectColumnUpdateBy,
	EnterpriseSelectColumnUpdateTimeIn,
}

func (e EnterpriseSelectColumn) IsValid() bool {
	switch e {
	case EnterpriseSelectColumnAssociationReviewBy, EnterpriseSelectColumnAssociationReviewOpinion, EnterpriseSelectColumnAssociationReviewTime, EnterpriseSelectColumnBrigadeID, EnterpriseSelectColumnBrigadeReviewBy, EnterpriseSelectColumnBrigadeReviewOpinion, EnterpriseSelectColumnBrigadeReviewTime, EnterpriseSelectColumnBusinessLicenseExpiryDate, EnterpriseSelectColumnBusinessLicenseIssuanceDate, EnterpriseSelectColumnBusinessLicensePhoto, EnterpriseSelectColumnBusinessPhoto, EnterpriseSelectColumnBusinessScope, EnterpriseSelectColumnCheckStatus, EnterpriseSelectColumnCityID, EnterpriseSelectColumnContactPersons, EnterpriseSelectColumnCreateAt, EnterpriseSelectColumnCreateBy, EnterpriseSelectColumnDeleteAt, EnterpriseSelectColumnDeleteBy, EnterpriseSelectColumnDisplayNumber, EnterpriseSelectColumnDistrictID, EnterpriseSelectColumnEnterpriseAddress, EnterpriseSelectColumnEnterpriseCode, EnterpriseSelectColumnEnterpriseID, EnterpriseSelectColumnEnterpriseLevel, EnterpriseSelectColumnEnterpriseName, EnterpriseSelectColumnEnterpriseNature, EnterpriseSelectColumnEntrustedAgent, EnterpriseSelectColumnEntrustedAgentIDCard, EnterpriseSelectColumnEntrustedAgentIDCardPhoto, EnterpriseSelectColumnEntrustedAgentPhone, EnterpriseSelectColumnFaxNumber, EnterpriseSelectColumnID, EnterpriseSelectColumnInstitutionCategory, EnterpriseSelectColumnIsBlack, EnterpriseSelectColumnIsDeleted, EnterpriseSelectColumnIsInput, EnterpriseSelectColumnIsInstall, EnterpriseSelectColumnIsUploadProvince, EnterpriseSelectColumnLegalRepresentative, EnterpriseSelectColumnLegalRepresentativeIDCard, EnterpriseSelectColumnLegalRepresentativeIDCardPhoto, EnterpriseSelectColumnLegalRepresentativePhone, EnterpriseSelectColumnOperatingLicensePhoto, EnterpriseSelectColumnOrganizationCode, EnterpriseSelectColumnOrganizationCodeCertificatePhoto, EnterpriseSelectColumnPoliceStationID, EnterpriseSelectColumnProvinceID, EnterpriseSelectColumnRecordAt, EnterpriseSelectColumnRecordBy, EnterpriseSelectColumnRemarks, EnterpriseSelectColumnScore, EnterpriseSelectColumnSuperiorEnterpriseID, EnterpriseSelectColumnUpdateAt, EnterpriseSelectColumnUpdateBy, EnterpriseSelectColumnUpdateTimeIn:
		return true
	}
	return false
}

func (e EnterpriseSelectColumn) String() string {
	return string(e)
}

func (e *EnterpriseSelectColumn) UnmarshalGQL(v interface{}) error {
	str, ok := v.(string)
	if !ok {
		return fmt.Errorf("enums must be strings")
	}

	*e = EnterpriseSelectColumn(str)
	if !e.IsValid() {
		return fmt.Errorf("%s is not a valid enterprise_select_column", str)
	}
	return nil
}

func (e EnterpriseSelectColumn) MarshalGQL(w io.Writer) {
	fmt.Fprint(w, strconv.Quote(e.String()))
}

// update columns of table "enterprise"
type EnterpriseUpdateColumn string

const (
	// column name
	EnterpriseUpdateColumnAssociationReviewBy EnterpriseUpdateColumn = "association_review_by"
	// column name
	EnterpriseUpdateColumnAssociationReviewOpinion EnterpriseUpdateColumn = "association_review_opinion"
	// column name
	EnterpriseUpdateColumnAssociationReviewTime EnterpriseUpdateColumn = "association_review_time"
	// column name
	EnterpriseUpdateColumnBrigadeID EnterpriseUpdateColumn = "brigade_id"
	// column name
	EnterpriseUpdateColumnBrigadeReviewBy EnterpriseUpdateColumn = "brigade_review_by"
	// column name
	EnterpriseUpdateColumnBrigadeReviewOpinion EnterpriseUpdateColumn = "brigade_review_opinion"
	// column name
	EnterpriseUpdateColumnBrigadeReviewTime EnterpriseUpdateColumn = "brigade_review_time"
	// column name
	EnterpriseUpdateColumnBusinessLicenseExpiryDate EnterpriseUpdateColumn = "business_license_expiry_date"
	// column name
	EnterpriseUpdateColumnBusinessLicenseIssuanceDate EnterpriseUpdateColumn = "business_license_issuance_date"
	// column name
	EnterpriseUpdateColumnBusinessLicensePhoto EnterpriseUpdateColumn = "business_license_photo"
	// column name
	EnterpriseUpdateColumnBusinessPhoto EnterpriseUpdateColumn = "business_photo"
	// column name
	EnterpriseUpdateColumnBusinessScope EnterpriseUpdateColumn = "business_scope"
	// column name
	EnterpriseUpdateColumnCheckStatus EnterpriseUpdateColumn = "check_status"
	// column name
	EnterpriseUpdateColumnCityID EnterpriseUpdateColumn = "city_id"
	// column name
	EnterpriseUpdateColumnContactPersons EnterpriseUpdateColumn = "contact_persons"
	// column name
	EnterpriseUpdateColumnCreateAt EnterpriseUpdateColumn = "create_at"
	// column name
	EnterpriseUpdateColumnCreateBy EnterpriseUpdateColumn = "create_by"
	// column name
	EnterpriseUpdateColumnDeleteAt EnterpriseUpdateColumn = "delete_at"
	// column name
	EnterpriseUpdateColumnDeleteBy EnterpriseUpdateColumn = "delete_by"
	// column name
	EnterpriseUpdateColumnDisplayNumber EnterpriseUpdateColumn = "display_number"
	// column name
	EnterpriseUpdateColumnDistrictID EnterpriseUpdateColumn = "district_id"
	// column name
	EnterpriseUpdateColumnEnterpriseAddress EnterpriseUpdateColumn = "enterprise_address"
	// column name
	EnterpriseUpdateColumnEnterpriseCode EnterpriseUpdateColumn = "enterprise_code"
	// column name
	EnterpriseUpdateColumnEnterpriseID EnterpriseUpdateColumn = "enterprise_id"
	// column name
	EnterpriseUpdateColumnEnterpriseLevel EnterpriseUpdateColumn = "enterprise_level"
	// column name
	EnterpriseUpdateColumnEnterpriseName EnterpriseUpdateColumn = "enterprise_name"
	// column name
	EnterpriseUpdateColumnEnterpriseNature EnterpriseUpdateColumn = "enterprise_nature"
	// column name
	EnterpriseUpdateColumnEntrustedAgent EnterpriseUpdateColumn = "entrusted_agent"
	// column name
	EnterpriseUpdateColumnEntrustedAgentIDCard EnterpriseUpdateColumn = "entrusted_agent_id_card"
	// column name
	EnterpriseUpdateColumnEntrustedAgentIDCardPhoto EnterpriseUpdateColumn = "entrusted_agent_id_card_photo"
	// column name
	EnterpriseUpdateColumnEntrustedAgentPhone EnterpriseUpdateColumn = "entrusted_agent_phone"
	// column name
	EnterpriseUpdateColumnFaxNumber EnterpriseUpdateColumn = "fax_number"
	// column name
	EnterpriseUpdateColumnID EnterpriseUpdateColumn = "id"
	// column name
	EnterpriseUpdateColumnInstitutionCategory EnterpriseUpdateColumn = "institution_category"
	// column name
	EnterpriseUpdateColumnIsBlack EnterpriseUpdateColumn = "is_black"
	// column name
	EnterpriseUpdateColumnIsDeleted EnterpriseUpdateColumn = "is_deleted"
	// column name
	EnterpriseUpdateColumnIsInput EnterpriseUpdateColumn = "is_input"
	// column name
	EnterpriseUpdateColumnIsInstall EnterpriseUpdateColumn = "is_install"
	// column name
	EnterpriseUpdateColumnIsUploadProvince EnterpriseUpdateColumn = "is_upload_province"
	// column name
	EnterpriseUpdateColumnLegalRepresentative EnterpriseUpdateColumn = "legal_representative"
	// column name
	EnterpriseUpdateColumnLegalRepresentativeIDCard EnterpriseUpdateColumn = "legal_representative_id_card"
	// column name
	EnterpriseUpdateColumnLegalRepresentativeIDCardPhoto EnterpriseUpdateColumn = "legal_representative_id_card_photo"
	// column name
	EnterpriseUpdateColumnLegalRepresentativePhone EnterpriseUpdateColumn = "legal_representative_phone"
	// column name
	EnterpriseUpdateColumnOperatingLicensePhoto EnterpriseUpdateColumn = "operating_license_photo"
	// column name
	EnterpriseUpdateColumnOrganizationCode EnterpriseUpdateColumn = "organization_code"
	// column name
	EnterpriseUpdateColumnOrganizationCodeCertificatePhoto EnterpriseUpdateColumn = "organization_code_certificate_photo"
	// column name
	EnterpriseUpdateColumnPoliceStationID EnterpriseUpdateColumn = "police_station_id"
	// column name
	EnterpriseUpdateColumnProvinceID EnterpriseUpdateColumn = "province_id"
	// column name
	EnterpriseUpdateColumnRecordAt EnterpriseUpdateColumn = "record_at"
	// column name
	EnterpriseUpdateColumnRecordBy EnterpriseUpdateColumn = "record_by"
	// column name
	EnterpriseUpdateColumnRemarks EnterpriseUpdateColumn = "remarks"
	// column name
	EnterpriseUpdateColumnScore EnterpriseUpdateColumn = "score"
	// column name
	EnterpriseUpdateColumnSuperiorEnterpriseID EnterpriseUpdateColumn = "superior_enterprise_id"
	// column name
	EnterpriseUpdateColumnUpdateAt EnterpriseUpdateColumn = "update_at"
	// column name
	EnterpriseUpdateColumnUpdateBy EnterpriseUpdateColumn = "update_by"
	// column name
	EnterpriseUpdateColumnUpdateTimeIn EnterpriseUpdateColumn = "update_time_in"
)

var AllEnterpriseUpdateColumn = []EnterpriseUpdateColumn{
	EnterpriseUpdateColumnAssociationReviewBy,
	EnterpriseUpdateColumnAssociationReviewOpinion,
	EnterpriseUpdateColumnAssociationReviewTime,
	EnterpriseUpdateColumnBrigadeID,
	EnterpriseUpdateColumnBrigadeReviewBy,
	EnterpriseUpdateColumnBrigadeReviewOpinion,
	EnterpriseUpdateColumnBrigadeReviewTime,
	EnterpriseUpdateColumnBusinessLicenseExpiryDate,
	EnterpriseUpdateColumnBusinessLicenseIssuanceDate,
	EnterpriseUpdateColumnBusinessLicensePhoto,
	EnterpriseUpdateColumnBusinessPhoto,
	EnterpriseUpdateColumnBusinessScope,
	EnterpriseUpdateColumnCheckStatus,
	EnterpriseUpdateColumnCityID,
	EnterpriseUpdateColumnContactPersons,
	EnterpriseUpdateColumnCreateAt,
	EnterpriseUpdateColumnCreateBy,
	EnterpriseUpdateColumnDeleteAt,
	EnterpriseUpdateColumnDeleteBy,
	EnterpriseUpdateColumnDisplayNumber,
	EnterpriseUpdateColumnDistrictID,
	EnterpriseUpdateColumnEnterpriseAddress,
	EnterpriseUpdateColumnEnterpriseCode,
	EnterpriseUpdateColumnEnterpriseID,
	EnterpriseUpdateColumnEnterpriseLevel,
	EnterpriseUpdateColumnEnterpriseName,
	EnterpriseUpdateColumnEnterpriseNature,
	EnterpriseUpdateColumnEntrustedAgent,
	EnterpriseUpdateColumnEntrustedAgentIDCard,
	EnterpriseUpdateColumnEntrustedAgentIDCardPhoto,
	EnterpriseUpdateColumnEntrustedAgentPhone,
	EnterpriseUpdateColumnFaxNumber,
	EnterpriseUpdateColumnID,
	EnterpriseUpdateColumnInstitutionCategory,
	EnterpriseUpdateColumnIsBlack,
	EnterpriseUpdateColumnIsDeleted,
	EnterpriseUpdateColumnIsInput,
	EnterpriseUpdateColumnIsInstall,
	EnterpriseUpdateColumnIsUploadProvince,
	EnterpriseUpdateColumnLegalRepresentative,
	EnterpriseUpdateColumnLegalRepresentativeIDCard,
	EnterpriseUpdateColumnLegalRepresentativeIDCardPhoto,
	EnterpriseUpdateColumnLegalRepresentativePhone,
	EnterpriseUpdateColumnOperatingLicensePhoto,
	EnterpriseUpdateColumnOrganizationCode,
	EnterpriseUpdateColumnOrganizationCodeCertificatePhoto,
	EnterpriseUpdateColumnPoliceStationID,
	EnterpriseUpdateColumnProvinceID,
	EnterpriseUpdateColumnRecordAt,
	EnterpriseUpdateColumnRecordBy,
	EnterpriseUpdateColumnRemarks,
	EnterpriseUpdateColumnScore,
	EnterpriseUpdateColumnSuperiorEnterpriseID,
	EnterpriseUpdateColumnUpdateAt,
	EnterpriseUpdateColumnUpdateBy,
	EnterpriseUpdateColumnUpdateTimeIn,
}

func (e EnterpriseUpdateColumn) IsValid() bool {
	switch e {
	case EnterpriseUpdateColumnAssociationReviewBy, EnterpriseUpdateColumnAssociationReviewOpinion, EnterpriseUpdateColumnAssociationReviewTime, EnterpriseUpdateColumnBrigadeID, EnterpriseUpdateColumnBrigadeReviewBy, EnterpriseUpdateColumnBrigadeReviewOpinion, EnterpriseUpdateColumnBrigadeReviewTime, EnterpriseUpdateColumnBusinessLicenseExpiryDate, EnterpriseUpdateColumnBusinessLicenseIssuanceDate, EnterpriseUpdateColumnBusinessLicensePhoto, EnterpriseUpdateColumnBusinessPhoto, EnterpriseUpdateColumnBusinessScope, EnterpriseUpdateColumnCheckStatus, EnterpriseUpdateColumnCityID, EnterpriseUpdateColumnContactPersons, EnterpriseUpdateColumnCreateAt, EnterpriseUpdateColumnCreateBy, EnterpriseUpdateColumnDeleteAt, EnterpriseUpdateColumnDeleteBy, EnterpriseUpdateColumnDisplayNumber, EnterpriseUpdateColumnDistrictID, EnterpriseUpdateColumnEnterpriseAddress, EnterpriseUpdateColumnEnterpriseCode, EnterpriseUpdateColumnEnterpriseID, EnterpriseUpdateColumnEnterpriseLevel, EnterpriseUpdateColumnEnterpriseName, EnterpriseUpdateColumnEnterpriseNature, EnterpriseUpdateColumnEntrustedAgent, EnterpriseUpdateColumnEntrustedAgentIDCard, EnterpriseUpdateColumnEntrustedAgentIDCardPhoto, EnterpriseUpdateColumnEntrustedAgentPhone, EnterpriseUpdateColumnFaxNumber, EnterpriseUpdateColumnID, EnterpriseUpdateColumnInstitutionCategory, EnterpriseUpdateColumnIsBlack, EnterpriseUpdateColumnIsDeleted, EnterpriseUpdateColumnIsInput, EnterpriseUpdateColumnIsInstall, EnterpriseUpdateColumnIsUploadProvince, EnterpriseUpdateColumnLegalRepresentative, EnterpriseUpdateColumnLegalRepresentativeIDCard, EnterpriseUpdateColumnLegalRepresentativeIDCardPhoto, EnterpriseUpdateColumnLegalRepresentativePhone, EnterpriseUpdateColumnOperatingLicensePhoto, EnterpriseUpdateColumnOrganizationCode, EnterpriseUpdateColumnOrganizationCodeCertificatePhoto, EnterpriseUpdateColumnPoliceStationID, EnterpriseUpdateColumnProvinceID, EnterpriseUpdateColumnRecordAt, EnterpriseUpdateColumnRecordBy, EnterpriseUpdateColumnRemarks, EnterpriseUpdateColumnScore, EnterpriseUpdateColumnSuperiorEnterpriseID, EnterpriseUpdateColumnUpdateAt, EnterpriseUpdateColumnUpdateBy, EnterpriseUpdateColumnUpdateTimeIn:
		return true
	}
	return false
}

func (e EnterpriseUpdateColumn) String() string {
	return string(e)
}

func (e *EnterpriseUpdateColumn) UnmarshalGQL(v interface{}) error {
	str, ok := v.(string)
	if !ok {
		return fmt.Errorf("enums must be strings")
	}

	*e = EnterpriseUpdateColumn(str)
	if !e.IsValid() {
		return fmt.Errorf("%s is not a valid enterprise_update_column", str)
	}
	return nil
}

func (e EnterpriseUpdateColumn) MarshalGQL(w io.Writer) {
	fmt.Fprint(w, strconv.Quote(e.String()))
}

// column ordering options
type OrderBy string

const (
	// in the ascending order, nulls last
	OrderByAsc OrderBy = "asc"
	// in the ascending order, nulls first
	OrderByAscNullsFirst OrderBy = "asc_nulls_first"
	// in the ascending order, nulls last
	OrderByAscNullsLast OrderBy = "asc_nulls_last"
	// in the descending order, nulls first
	OrderByDesc OrderBy = "desc"
	// in the descending order, nulls first
	OrderByDescNullsFirst OrderBy = "desc_nulls_first"
	// in the descending order, nulls last
	OrderByDescNullsLast OrderBy = "desc_nulls_last"
)

var AllOrderBy = []OrderBy{
	OrderByAsc,
	OrderByAscNullsFirst,
	OrderByAscNullsLast,
	OrderByDesc,
	OrderByDescNullsFirst,
	OrderByDescNullsLast,
}

func (e OrderBy) IsValid() bool {
	switch e {
	case OrderByAsc, OrderByAscNullsFirst, OrderByAscNullsLast, OrderByDesc, OrderByDescNullsFirst, OrderByDescNullsLast:
		return true
	}
	return false
}

func (e OrderBy) String() string {
	return string(e)
}

func (e *OrderBy) UnmarshalGQL(v interface{}) error {
	str, ok := v.(string)
	if !ok {
		return fmt.Errorf("enums must be strings")
	}

	*e = OrderBy(str)
	if !e.IsValid() {
		return fmt.Errorf("%s is not a valid order_by", str)
	}
	return nil
}

func (e OrderBy) MarshalGQL(w io.Writer) {
	fmt.Fprint(w, strconv.Quote(e.String()))
}
