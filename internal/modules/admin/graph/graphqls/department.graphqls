
"""
部门


columns and relationships of "department"

"""
type department {
  """创建时间"""
  create_at: timestamptz

  """创建人"""
  create_by: String

  """删除时间"""
  delete_at: timestamptz

  """删除人"""
  delete_by: String

  """部门类型"""
  department_category: Int

  """部门编号"""
  department_code: String

  """部门ID"""
  department_id: String!

  """部门名称"""
  department_name: String

  """企业ID"""
  enterprise_id: String!

  """ID"""
  id: bigint!

  """排序"""
  internal_number: Int

  """是否删除"""
  is_delete: Boolean!

  """备注"""
  remarks: String

  """上级部门ID"""
  superior_department_id: String

  """修改时间"""
  update_at: timestamptz

  """修改人"""
  update_by: String
}

"""
aggregated selection of "department"
"""
type department_aggregate {
  aggregate: department_aggregate_fields
  nodes: [department!]!
}

"""
aggregate fields of "department"
"""
type department_aggregate_fields {
  avg: department_avg_fields
  count(columns: [department_select_column!], distinct: Boolean): Int
  max: department_max_fields
  min: department_min_fields
  stddev: department_stddev_fields
  stddev_pop: department_stddev_pop_fields
  stddev_samp: department_stddev_samp_fields
  sum: department_sum_fields
  var_pop: department_var_pop_fields
  var_samp: department_var_samp_fields
  variance: department_variance_fields
}

"""
order by aggregate values of table "department"
"""
input department_aggregate_order_by {
  avg: department_avg_order_by
  count: order_by
  max: department_max_order_by
  min: department_min_order_by
  stddev: department_stddev_order_by
  stddev_pop: department_stddev_pop_order_by
  stddev_samp: department_stddev_samp_order_by
  sum: department_sum_order_by
  var_pop: department_var_pop_order_by
  var_samp: department_var_samp_order_by
  variance: department_variance_order_by
}

"""
input type for inserting array relation for remote table "department"
"""
input department_arr_rel_insert_input {
  data: [department_insert_input!]!
  on_conflict: department_on_conflict
}

"""aggregate avg on columns"""
type department_avg_fields {
  department_category: Float
  id: Float
  internal_number: Float
}

"""
order by avg() on columns of table "department"
"""
input department_avg_order_by {
  department_category: order_by
  id: order_by
  internal_number: order_by
}

"""
Boolean expression to filter rows from the table "department". All fields are combined with a logical 'AND'.
"""
input department_bool_exp {
  _and: [department_bool_exp]
  _not: department_bool_exp
  _or: [department_bool_exp]
  create_at: timestamptz_comparison_exp
  create_by: String_comparison_exp
  delete_at: timestamptz_comparison_exp
  delete_by: String_comparison_exp
  department_category: Int_comparison_exp
  department_code: String_comparison_exp
  department_id: String_comparison_exp
  department_name: String_comparison_exp
  enterprise_id: String_comparison_exp
  id: bigint_comparison_exp
  internal_number: Int_comparison_exp
  is_delete: Boolean_comparison_exp
  remarks: String_comparison_exp
  superior_department_id: String_comparison_exp
  update_at: timestamptz_comparison_exp
  update_by: String_comparison_exp
}

"""
unique or primary key constraints on table "department"
"""
enum department_constraint {
  """unique or primary key constraint"""
  department_pkey
}

"""
input type for incrementing integer column in table "department"
"""
input department_inc_input {
  department_category: Int
  id: bigint
  internal_number: Int
}

"""
input type for inserting data into table "department"
"""
input department_insert_input {
  create_at: timestamptz
  create_by: String
  delete_at: timestamptz
  delete_by: String
  department_category: Int
  department_code: String
  department_id: String
  department_name: String
  enterprise_id: String
  id: bigint
  internal_number: Int
  is_delete: Boolean
  remarks: String
  superior_department_id: String
  update_at: timestamptz
  update_by: String
}

"""aggregate max on columns"""
type department_max_fields {
  create_at: timestamptz
  create_by: String
  delete_at: timestamptz
  delete_by: String
  department_category: Int
  department_code: String
  department_id: String
  department_name: String
  enterprise_id: String
  id: bigint
  internal_number: Int
  remarks: String
  superior_department_id: String
  update_at: timestamptz
  update_by: String
}

"""
order by max() on columns of table "department"
"""
input department_max_order_by {
  create_at: order_by
  create_by: order_by
  delete_at: order_by
  delete_by: order_by
  department_category: order_by
  department_code: order_by
  department_id: order_by
  department_name: order_by
  enterprise_id: order_by
  id: order_by
  internal_number: order_by
  remarks: order_by
  superior_department_id: order_by
  update_at: order_by
  update_by: order_by
}

"""aggregate min on columns"""
type department_min_fields {
  create_at: timestamptz
  create_by: String
  delete_at: timestamptz
  delete_by: String
  department_category: Int
  department_code: String
  department_id: String
  department_name: String
  enterprise_id: String
  id: bigint
  internal_number: Int
  remarks: String
  superior_department_id: String
  update_at: timestamptz
  update_by: String
}

"""
order by min() on columns of table "department"
"""
input department_min_order_by {
  create_at: order_by
  create_by: order_by
  delete_at: order_by
  delete_by: order_by
  department_category: order_by
  department_code: order_by
  department_id: order_by
  department_name: order_by
  enterprise_id: order_by
  id: order_by
  internal_number: order_by
  remarks: order_by
  superior_department_id: order_by
  update_at: order_by
  update_by: order_by
}

"""
response of any mutation on the table "department"
"""
type department_mutation_response {
  """number of affected rows by the mutation"""
  affected_rows: Int!

  """data of the affected rows by the mutation"""
  returning: [department!]!
}

"""
input type for inserting object relation for remote table "department"
"""
input department_obj_rel_insert_input {
  data: department_insert_input!
  on_conflict: department_on_conflict
}

"""
on conflict condition type for table "department"
"""
input department_on_conflict {
  constraint: department_constraint!
  update_columns: [department_update_column!]!
  where: department_bool_exp
}

"""
ordering options when selecting data from "department"
"""
input department_order_by {
  create_at: order_by
  create_by: order_by
  delete_at: order_by
  delete_by: order_by
  department_category: order_by
  department_code: order_by
  department_id: order_by
  department_name: order_by
  enterprise_id: order_by
  id: order_by
  internal_number: order_by
  is_delete: order_by
  remarks: order_by
  superior_department_id: order_by
  update_at: order_by
  update_by: order_by
}

"""
primary key columns input for table: "department"
"""
input department_pk_columns_input {
  """ID"""
  id: bigint!
}

"""
select columns of table "department"
"""
enum department_select_column {
  """column name"""
  create_at

  """column name"""
  create_by

  """column name"""
  delete_at

  """column name"""
  delete_by

  """column name"""
  department_category

  """column name"""
  department_code

  """column name"""
  department_id

  """column name"""
  department_name

  """column name"""
  enterprise_id

  """column name"""
  id

  """column name"""
  internal_number

  """column name"""
  is_delete

  """column name"""
  remarks

  """column name"""
  superior_department_id

  """column name"""
  update_at

  """column name"""
  update_by
}

"""
input type for updating data in table "department"
"""
input department_set_input {
  create_at: timestamptz
  create_by: String
  delete_at: timestamptz
  delete_by: String
  department_category: Int
  department_code: String
  department_id: String
  department_name: String
  enterprise_id: String
  id: bigint
  internal_number: Int
  is_delete: Boolean
  remarks: String
  superior_department_id: String
  update_at: timestamptz
  update_by: String
}

"""aggregate stddev on columns"""
type department_stddev_fields {
  department_category: Float
  id: Float
  internal_number: Float
}

"""
order by stddev() on columns of table "department"
"""
input department_stddev_order_by {
  department_category: order_by
  id: order_by
  internal_number: order_by
}

"""aggregate stddev_pop on columns"""
type department_stddev_pop_fields {
  department_category: Float
  id: Float
  internal_number: Float
}

"""
order by stddev_pop() on columns of table "department"
"""
input department_stddev_pop_order_by {
  department_category: order_by
  id: order_by
  internal_number: order_by
}

"""aggregate stddev_samp on columns"""
type department_stddev_samp_fields {
  department_category: Float
  id: Float
  internal_number: Float
}

"""
order by stddev_samp() on columns of table "department"
"""
input department_stddev_samp_order_by {
  department_category: order_by
  id: order_by
  internal_number: order_by
}

"""aggregate sum on columns"""
type department_sum_fields {
  department_category: Int
  id: bigint
  internal_number: Int
}

"""
order by sum() on columns of table "department"
"""
input department_sum_order_by {
  department_category: order_by
  id: order_by
  internal_number: order_by
}

"""
update columns of table "department"
"""
enum department_update_column {
  """column name"""
  create_at

  """column name"""
  create_by

  """column name"""
  delete_at

  """column name"""
  delete_by

  """column name"""
  department_category

  """column name"""
  department_code

  """column name"""
  department_id

  """column name"""
  department_name

  """column name"""
  enterprise_id

  """column name"""
  id

  """column name"""
  internal_number

  """column name"""
  is_delete

  """column name"""
  remarks

  """column name"""
  superior_department_id

  """column name"""
  update_at

  """column name"""
  update_by
}

"""aggregate var_pop on columns"""
type department_var_pop_fields {
  department_category: Float
  id: Float
  internal_number: Float
}

"""
order by var_pop() on columns of table "department"
"""
input department_var_pop_order_by {
  department_category: order_by
  id: order_by
  internal_number: order_by
}

"""aggregate var_samp on columns"""
type department_var_samp_fields {
  department_category: Float
  id: Float
  internal_number: Float
}

"""
order by var_samp() on columns of table "department"
"""
input department_var_samp_order_by {
  department_category: order_by
  id: order_by
  internal_number: order_by
}

"""aggregate variance on columns"""
type department_variance_fields {
  department_category: Float
  id: Float
  internal_number: Float
}

"""
order by variance() on columns of table "department"
"""
input department_variance_order_by {
  department_category: order_by
  id: order_by
  internal_number: order_by
}

extend type Mutation {
  """
  delete data from the table: "department"
  """
  delete_department(
    """filter the rows which have to be deleted"""
    where: department_bool_exp!
  ): department_mutation_response

  """
  delete single row from the table: "department"
  """
  delete_department_by_pk(
    """ID"""
    id: bigint!
  ): department

  """
  insert data into the table: "department"
  """
  insert_department(
    """the rows to be inserted"""
    objects: [department_insert_input!]!

    """on conflict condition"""
    on_conflict: department_on_conflict
  ): department_mutation_response

  """
  insert a single row into the table: "department"
  """
  insert_department_one(
    """the row to be inserted"""
    object: department_insert_input!

    """on conflict condition"""
    on_conflict: department_on_conflict
  ): department

  """
  update data of the table: "department"
  """
  update_department(
    """increments the integer columns with given value of the filtered values"""
    _inc: department_inc_input

    """sets the columns of the filtered rows to the given values"""
    _set: department_set_input

    """filter the rows which have to be updated"""
    where: department_bool_exp!
  ): department_mutation_response

  """
  update single row of the table: "department"
  """
  update_department_by_pk(
    """increments the integer columns with given value of the filtered values"""
    _inc: department_inc_input

    """sets the columns of the filtered rows to the given values"""
    _set: department_set_input
    pk_columns: department_pk_columns_input!
  ): department
}

extend type Query {
  """
  fetch data from the table: "department"
  """
  department(
    """distinct select on columns"""
    distinct_on: [department_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [department_order_by!]

    """filter the rows returned"""
    where: department_bool_exp
  ): [department!]!

  """
  fetch aggregated fields from the table: "department"
  """
  department_aggregate(
    """distinct select on columns"""
    distinct_on: [department_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [department_order_by!]

    """filter the rows returned"""
    where: department_bool_exp
  ): department_aggregate!

  """fetch data from the table: "department" using primary key columns"""
  department_by_pk(
    """ID"""
    id: bigint!
  ): department
}
