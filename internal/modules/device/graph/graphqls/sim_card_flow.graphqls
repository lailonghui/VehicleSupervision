
extend type Mutation {
	"""
	delete data from the table: "sim_card_flow"
	"""
	delete_sim_card_flow("""
	filter the rows which have to be deleted
	"""
	where: SimCardFlowBoolExp!): SimCardFlowMutationResponse
	"""
	delete single row from the table: "sim_card_flow"
	"""
	delete_sim_card_flow_by_pk("""
	ID
	"""
	id: Bigint!): SimCardFlow
	"""
	insert data into the table: "sim_card_flow"
	"""
	insert_sim_card_flow("""
	the rows to be inserted
	"""
	objects: [SimCardFlowInsertInput!]!, """
	on conflict condition
	"""
	on_conflict: SimCardFlowOnConflict): SimCardFlowMutationResponse
	"""
	insert a single row into the table: "sim_card_flow"
	"""
	insert_sim_card_flow_one("""
	the row to be inserted
	"""
	object: SimCardFlowInsertInput!, """
	on conflict condition
	"""
	on_conflict: SimCardFlowOnConflict): SimCardFlow
	"""
	update data of the table: "sim_card_flow"
	"""
	update_sim_card_flow("""
	increments the integer columns with given value of the filtered values
	"""
	_inc: SimCardFlowIncInput, """
	sets the columns of the filtered rows to the given values
	"""
	_set: SimCardFlowSetInput, """
	filter the rows which have to be updated
	"""
	where: SimCardFlowBoolExp!): SimCardFlowMutationResponse
	"""
	update single row of the table: "sim_card_flow"
	"""
	update_sim_card_flow_by_pk("""
	increments the integer columns with given value of the filtered values
	"""
	_inc: SimCardFlowIncInput, """
	sets the columns of the filtered rows to the given values
	"""
	_set: SimCardFlowSetInput, pk_columns: SimCardFlowPkColumnsInput!): SimCardFlow
}

extend type Query {
	"""
	fetch data from the table: "sim_card_flow"
	"""
	sim_card_flow("""
	distinct select on columns
	"""
	distinct_on: [SimCardFlowSelectColumn!], """
	limit the number of rows returned
	"""
	limit: Int, """
	skip the first n rows. Use only with order_by
	"""
	offset: Int, """
	sort the rows by one or more columns
	"""
	order_by: [SimCardFlowOrderBy!], """
	filter the rows returned
	"""
	where: SimCardFlowBoolExp): [SimCardFlow!]!
	"""
	fetch aggregated fields from the table: "sim_card_flow"
	"""
	sim_card_flow_aggregate("""
	distinct select on columns
	"""
	distinct_on: [SimCardFlowSelectColumn!], """
	limit the number of rows returned
	"""
	limit: Int, """
	skip the first n rows. Use only with order_by
	"""
	offset: Int, """
	sort the rows by one or more columns
	"""
	order_by: [SimCardFlowOrderBy!], """
	filter the rows returned
	"""
	where: SimCardFlowBoolExp): SimCardFlowAggregate!
	"""
	fetch data from the table: "sim_card_flow" using primary key columns
	"""
	sim_card_flow_by_pk("""
	ID
	"""
	id: Bigint!): SimCardFlow
}
"""
sim卡流量信息


columns and relationships of "sim_card_flow"
"""
type SimCardFlow {
	"""
	已产生流量卡均流量(KB)
	"""
	card_avg_flow: Numeric
	"""
	卡号备注
	"""
	card_no_remark: String
	"""
	创建时间
	"""
	create_at: Timestamptz!
	"""
	创建人
	"""
	create_by: String
	"""
	删除时间
	"""
	delete_at: Timestamptz
	"""
	删除人
	"""
	delete_by: String
	"""
	企业ID
	"""
	enterprise_id: String
	"""
	ICCID
	"""
	iccid: String
	"""
	ID
	"""
	id: Bigint!
	"""
	是否删除
	"""
	is_delete: Boolean!
	"""
	是否共享池
	"""
	is_share_pool: Boolean!
	"""
	流量池卡均流量(KB)
	"""
	pool_avg_flow: Numeric
	"""
	SIM卡流量ID
	"""
	sim_card_flow_id: String!
	"""
	SIM卡ID
	"""
	sim_card_id: SimCard!
	"""
	套餐流量(MB)
	"""
	suit_flow: Numeric
	"""
	套餐剩余流量(MB)
	"""
	suit_left_flow: Numeric
	"""
	已超套餐流量(MB)
	"""
	suit_over_flow: Numeric
	"""
	套餐剩余短信条数
	"""
	suit_sms_left_num: Int
	"""
	套餐短信条数
	"""
	suit_sms_num: Int
	"""
	已超套餐短信条数
	"""
	suit_sms_over_num: Int
	"""
	上行短信已用条数
	"""
	suit_use_sms_num: Int
	"""
	修改时间
	"""
	update_at: Timestamptz
	"""
	修改人
	"""
	update_by: String
	"""
	数据服务已用流量(KB)
	"""
	use_flow: Numeric
}
"""
aggregated selection of "sim_card_flow"
"""
type SimCardFlowAggregate {
	aggregate: SimCardFlowAggregateFields
	nodes: [SimCardFlow!]!
}
"""
aggregate fields of "sim_card_flow"
"""
type SimCardFlowAggregateFields {
	avg: SimCardFlowAvgFields
	count(columns: [SimCardFlowSelectColumn!], distinct: Boolean): Int
	max: SimCardFlowMaxFields
	min: SimCardFlowMinFields
	stddev: SimCardFlowStddevFields
	stddev_pop: SimCardFlowStddevPopFields
	stddev_samp: SimCardFlowStddevSampFields
	sum: SimCardFlowSumFields
	var_pop: SimCardFlowVarPopFields
	var_samp: SimCardFlowVarSampFields
	variance: SimCardFlowVarianceFields
}
"""
order by aggregate values of table "sim_card_flow"
"""
input SimCardFlowAggregateOrderBy {
	avg: SimCardFlowAvgOrderBy
	count: OrderBy
	max: SimCardFlowMaxOrderBy
	min: SimCardFlowMinOrderBy
	stddev: SimCardFlowStddevOrderBy
	stddev_pop: SimCardFlowStddevPopOrderBy
	stddev_samp: SimCardFlowStddevSampOrderBy
	sum: SimCardFlowSumOrderBy
	var_pop: SimCardFlowVarPopOrderBy
	var_samp: SimCardFlowVarSampOrderBy
	variance: SimCardFlowVarianceOrderBy
}
"""
input type for inserting array relation for remote table "sim_card_flow"
"""
input SimCardFlowArrRelInsertInput {
	data: [SimCardFlowInsertInput!]!
	on_conflict: SimCardFlowOnConflict
}
"""
aggregate avg on columns
"""
type SimCardFlowAvgFields {
	card_avg_flow: Float
	id: Float
	pool_avg_flow: Float
	suit_flow: Float
	suit_left_flow: Float
	suit_over_flow: Float
	suit_sms_left_num: Float
	suit_sms_num: Float
	suit_sms_over_num: Float
	suit_use_sms_num: Float
	use_flow: Float
}
"""
order by avg() on columns of table "sim_card_flow"
"""
input SimCardFlowAvgOrderBy {
	card_avg_flow: OrderBy
	id: OrderBy
	pool_avg_flow: OrderBy
	suit_flow: OrderBy
	suit_left_flow: OrderBy
	suit_over_flow: OrderBy
	suit_sms_left_num: OrderBy
	suit_sms_num: OrderBy
	suit_sms_over_num: OrderBy
	suit_use_sms_num: OrderBy
	use_flow: OrderBy
}
"""
Boolean expression to filter rows from the table "sim_card_flow". All fields are combined with a logical 'AND'.
"""
input SimCardFlowBoolExp {
	_and: [SimCardFlowBoolExp]
	_not: SimCardFlowBoolExp
	_or: [SimCardFlowBoolExp]
	card_avg_flow: NumericComparisonExp
	card_no_remark: StringComparisonExp
	create_at: TimestamptzComparisonExp
	create_by: StringComparisonExp
	delete_at: TimestamptzComparisonExp
	delete_by: StringComparisonExp
	enterprise_id: StringComparisonExp
	iccid: StringComparisonExp
	id: BigintComparisonExp
	is_delete: BooleanComparisonExp
	is_share_pool: BooleanComparisonExp
	pool_avg_flow: NumericComparisonExp
	sim_card_flow_id: StringComparisonExp
	sim_card_id: StringComparisonExp
	suit_flow: NumericComparisonExp
	suit_left_flow: NumericComparisonExp
	suit_over_flow: NumericComparisonExp
	suit_sms_left_num: IntComparisonExp
	suit_sms_num: IntComparisonExp
	suit_sms_over_num: IntComparisonExp
	suit_use_sms_num: IntComparisonExp
	update_at: TimestamptzComparisonExp
	update_by: StringComparisonExp
	use_flow: NumericComparisonExp
}
"""
unique or primary key constraints on table "sim_card_flow"
"""
enum SimCardFlowConstraint {
	"""
	unique or primary key constraint
	"""
	sim_card_flow_pkey
}
"""
input type for incrementing integer column in table "sim_card_flow"
"""
input SimCardFlowIncInput {
	card_avg_flow: Numeric
	id: Bigint
	pool_avg_flow: Numeric
	suit_flow: Numeric
	suit_left_flow: Numeric
	suit_over_flow: Numeric
	suit_sms_left_num: Int
	suit_sms_num: Int
	suit_sms_over_num: Int
	suit_use_sms_num: Int
	use_flow: Numeric
}
"""
input type for inserting data into table "sim_card_flow"
"""
input SimCardFlowInsertInput {
	card_avg_flow: Numeric
	card_no_remark: String
	create_at: Timestamptz
	create_by: String
	delete_at: Timestamptz
	delete_by: String
	enterprise_id: String
	iccid: String
	id: Bigint
	is_delete: Boolean
	is_share_pool: Boolean
	pool_avg_flow: Numeric
	sim_card_flow_id: String
	sim_card_id: String
	suit_flow: Numeric
	suit_left_flow: Numeric
	suit_over_flow: Numeric
	suit_sms_left_num: Int
	suit_sms_num: Int
	suit_sms_over_num: Int
	suit_use_sms_num: Int
	update_at: Timestamptz
	update_by: String
	use_flow: Numeric
}
"""
aggregate max on columns
"""
type SimCardFlowMaxFields {
	card_avg_flow: Numeric
	card_no_remark: String
	create_at: Timestamptz
	create_by: String
	delete_at: Timestamptz
	delete_by: String
	enterprise_id: String
	iccid: String
	id: Bigint
	pool_avg_flow: Numeric
	sim_card_flow_id: String
	sim_card_id: String
	suit_flow: Numeric
	suit_left_flow: Numeric
	suit_over_flow: Numeric
	suit_sms_left_num: Int
	suit_sms_num: Int
	suit_sms_over_num: Int
	suit_use_sms_num: Int
	update_at: Timestamptz
	update_by: String
	use_flow: Numeric
}
"""
order by max() on columns of table "sim_card_flow"
"""
input SimCardFlowMaxOrderBy {
	card_avg_flow: OrderBy
	card_no_remark: OrderBy
	create_at: OrderBy
	create_by: OrderBy
	delete_at: OrderBy
	delete_by: OrderBy
	enterprise_id: OrderBy
	iccid: OrderBy
	id: OrderBy
	pool_avg_flow: OrderBy
	sim_card_flow_id: OrderBy
	sim_card_id: OrderBy
	suit_flow: OrderBy
	suit_left_flow: OrderBy
	suit_over_flow: OrderBy
	suit_sms_left_num: OrderBy
	suit_sms_num: OrderBy
	suit_sms_over_num: OrderBy
	suit_use_sms_num: OrderBy
	update_at: OrderBy
	update_by: OrderBy
	use_flow: OrderBy
}
"""
aggregate min on columns
"""
type SimCardFlowMinFields {
	card_avg_flow: Numeric
	card_no_remark: String
	create_at: Timestamptz
	create_by: String
	delete_at: Timestamptz
	delete_by: String
	enterprise_id: String
	iccid: String
	id: Bigint
	pool_avg_flow: Numeric
	sim_card_flow_id: String
	sim_card_id: String
	suit_flow: Numeric
	suit_left_flow: Numeric
	suit_over_flow: Numeric
	suit_sms_left_num: Int
	suit_sms_num: Int
	suit_sms_over_num: Int
	suit_use_sms_num: Int
	update_at: Timestamptz
	update_by: String
	use_flow: Numeric
}
"""
order by min() on columns of table "sim_card_flow"
"""
input SimCardFlowMinOrderBy {
	card_avg_flow: OrderBy
	card_no_remark: OrderBy
	create_at: OrderBy
	create_by: OrderBy
	delete_at: OrderBy
	delete_by: OrderBy
	enterprise_id: OrderBy
	iccid: OrderBy
	id: OrderBy
	pool_avg_flow: OrderBy
	sim_card_flow_id: OrderBy
	sim_card_id: OrderBy
	suit_flow: OrderBy
	suit_left_flow: OrderBy
	suit_over_flow: OrderBy
	suit_sms_left_num: OrderBy
	suit_sms_num: OrderBy
	suit_sms_over_num: OrderBy
	suit_use_sms_num: OrderBy
	update_at: OrderBy
	update_by: OrderBy
	use_flow: OrderBy
}
"""
response of any mutation on the table "sim_card_flow"
"""
type SimCardFlowMutationResponse {
	"""
	number of affected rows by the mutation
	"""
	affected_rows: Int!
	"""
	data of the affected rows by the mutation
	"""
	returning: [SimCardFlow!]!
}
"""
input type for inserting object relation for remote table "sim_card_flow"
"""
input SimCardFlowObjRelInsertInput {
	data: SimCardFlowInsertInput!
	on_conflict: SimCardFlowOnConflict
}
"""
on conflict condition type for table "sim_card_flow"
"""
input SimCardFlowOnConflict {
	constraint: SimCardFlowConstraint!
	update_columns: [SimCardFlowUpdateColumn!]!
	where: SimCardFlowBoolExp
}
"""
ordering options when selecting data from "sim_card_flow"
"""
input SimCardFlowOrderBy {
	card_avg_flow: OrderBy
	card_no_remark: OrderBy
	create_at: OrderBy
	create_by: OrderBy
	delete_at: OrderBy
	delete_by: OrderBy
	enterprise_id: OrderBy
	iccid: OrderBy
	id: OrderBy
	is_delete: OrderBy
	is_share_pool: OrderBy
	pool_avg_flow: OrderBy
	sim_card_flow_id: OrderBy
	sim_card_id: OrderBy
	suit_flow: OrderBy
	suit_left_flow: OrderBy
	suit_over_flow: OrderBy
	suit_sms_left_num: OrderBy
	suit_sms_num: OrderBy
	suit_sms_over_num: OrderBy
	suit_use_sms_num: OrderBy
	update_at: OrderBy
	update_by: OrderBy
	use_flow: OrderBy
}
"""
primary key columns input for table: "sim_card_flow"
"""
input SimCardFlowPkColumnsInput {
	"""
	ID
	"""
	id: Bigint!
}
"""
select columns of table "sim_card_flow"
"""
enum SimCardFlowSelectColumn {
	"""
	column name
	"""
	card_avg_flow
	"""
	column name
	"""
	card_no_remark
	"""
	column name
	"""
	create_at
	"""
	column name
	"""
	create_by
	"""
	column name
	"""
	delete_at
	"""
	column name
	"""
	delete_by
	"""
	column name
	"""
	enterprise_id
	"""
	column name
	"""
	iccid
	"""
	column name
	"""
	id
	"""
	column name
	"""
	is_delete
	"""
	column name
	"""
	is_share_pool
	"""
	column name
	"""
	pool_avg_flow
	"""
	column name
	"""
	sim_card_flow_id
	"""
	column name
	"""
	sim_card_id
	"""
	column name
	"""
	suit_flow
	"""
	column name
	"""
	suit_left_flow
	"""
	column name
	"""
	suit_over_flow
	"""
	column name
	"""
	suit_sms_left_num
	"""
	column name
	"""
	suit_sms_num
	"""
	column name
	"""
	suit_sms_over_num
	"""
	column name
	"""
	suit_use_sms_num
	"""
	column name
	"""
	update_at
	"""
	column name
	"""
	update_by
	"""
	column name
	"""
	use_flow
}
"""
input type for updating data in table "sim_card_flow"
"""
input SimCardFlowSetInput {
	card_avg_flow: Numeric
	card_no_remark: String
	create_at: Timestamptz
	create_by: String
	delete_at: Timestamptz
	delete_by: String
	enterprise_id: String
	iccid: String
	id: Bigint
	is_delete: Boolean
	is_share_pool: Boolean
	pool_avg_flow: Numeric
	sim_card_flow_id: String
	sim_card_id: String
	suit_flow: Numeric
	suit_left_flow: Numeric
	suit_over_flow: Numeric
	suit_sms_left_num: Int
	suit_sms_num: Int
	suit_sms_over_num: Int
	suit_use_sms_num: Int
	update_at: Timestamptz
	update_by: String
	use_flow: Numeric
}
"""
aggregate stddev on columns
"""
type SimCardFlowStddevFields {
	card_avg_flow: Float
	id: Float
	pool_avg_flow: Float
	suit_flow: Float
	suit_left_flow: Float
	suit_over_flow: Float
	suit_sms_left_num: Float
	suit_sms_num: Float
	suit_sms_over_num: Float
	suit_use_sms_num: Float
	use_flow: Float
}
"""
order by stddev() on columns of table "sim_card_flow"
"""
input SimCardFlowStddevOrderBy {
	card_avg_flow: OrderBy
	id: OrderBy
	pool_avg_flow: OrderBy
	suit_flow: OrderBy
	suit_left_flow: OrderBy
	suit_over_flow: OrderBy
	suit_sms_left_num: OrderBy
	suit_sms_num: OrderBy
	suit_sms_over_num: OrderBy
	suit_use_sms_num: OrderBy
	use_flow: OrderBy
}
"""
aggregate stddev_pop on columns
"""
type SimCardFlowStddevPopFields {
	card_avg_flow: Float
	id: Float
	pool_avg_flow: Float
	suit_flow: Float
	suit_left_flow: Float
	suit_over_flow: Float
	suit_sms_left_num: Float
	suit_sms_num: Float
	suit_sms_over_num: Float
	suit_use_sms_num: Float
	use_flow: Float
}
"""
order by stddev_pop() on columns of table "sim_card_flow"
"""
input SimCardFlowStddevPopOrderBy {
	card_avg_flow: OrderBy
	id: OrderBy
	pool_avg_flow: OrderBy
	suit_flow: OrderBy
	suit_left_flow: OrderBy
	suit_over_flow: OrderBy
	suit_sms_left_num: OrderBy
	suit_sms_num: OrderBy
	suit_sms_over_num: OrderBy
	suit_use_sms_num: OrderBy
	use_flow: OrderBy
}
"""
aggregate stddev_samp on columns
"""
type SimCardFlowStddevSampFields {
	card_avg_flow: Float
	id: Float
	pool_avg_flow: Float
	suit_flow: Float
	suit_left_flow: Float
	suit_over_flow: Float
	suit_sms_left_num: Float
	suit_sms_num: Float
	suit_sms_over_num: Float
	suit_use_sms_num: Float
	use_flow: Float
}
"""
order by stddev_samp() on columns of table "sim_card_flow"
"""
input SimCardFlowStddevSampOrderBy {
	card_avg_flow: OrderBy
	id: OrderBy
	pool_avg_flow: OrderBy
	suit_flow: OrderBy
	suit_left_flow: OrderBy
	suit_over_flow: OrderBy
	suit_sms_left_num: OrderBy
	suit_sms_num: OrderBy
	suit_sms_over_num: OrderBy
	suit_use_sms_num: OrderBy
	use_flow: OrderBy
}
"""
aggregate sum on columns
"""
type SimCardFlowSumFields {
	card_avg_flow: Numeric
	id: Bigint
	pool_avg_flow: Numeric
	suit_flow: Numeric
	suit_left_flow: Numeric
	suit_over_flow: Numeric
	suit_sms_left_num: Int
	suit_sms_num: Int
	suit_sms_over_num: Int
	suit_use_sms_num: Int
	use_flow: Numeric
}
"""
order by sum() on columns of table "sim_card_flow"
"""
input SimCardFlowSumOrderBy {
	card_avg_flow: OrderBy
	id: OrderBy
	pool_avg_flow: OrderBy
	suit_flow: OrderBy
	suit_left_flow: OrderBy
	suit_over_flow: OrderBy
	suit_sms_left_num: OrderBy
	suit_sms_num: OrderBy
	suit_sms_over_num: OrderBy
	suit_use_sms_num: OrderBy
	use_flow: OrderBy
}
"""
update columns of table "sim_card_flow"
"""
enum SimCardFlowUpdateColumn {
	"""
	column name
	"""
	card_avg_flow
	"""
	column name
	"""
	card_no_remark
	"""
	column name
	"""
	create_at
	"""
	column name
	"""
	create_by
	"""
	column name
	"""
	delete_at
	"""
	column name
	"""
	delete_by
	"""
	column name
	"""
	enterprise_id
	"""
	column name
	"""
	iccid
	"""
	column name
	"""
	id
	"""
	column name
	"""
	is_delete
	"""
	column name
	"""
	is_share_pool
	"""
	column name
	"""
	pool_avg_flow
	"""
	column name
	"""
	sim_card_flow_id
	"""
	column name
	"""
	sim_card_id
	"""
	column name
	"""
	suit_flow
	"""
	column name
	"""
	suit_left_flow
	"""
	column name
	"""
	suit_over_flow
	"""
	column name
	"""
	suit_sms_left_num
	"""
	column name
	"""
	suit_sms_num
	"""
	column name
	"""
	suit_sms_over_num
	"""
	column name
	"""
	suit_use_sms_num
	"""
	column name
	"""
	update_at
	"""
	column name
	"""
	update_by
	"""
	column name
	"""
	use_flow
}
"""
aggregate var_pop on columns
"""
type SimCardFlowVarPopFields {
	card_avg_flow: Float
	id: Float
	pool_avg_flow: Float
	suit_flow: Float
	suit_left_flow: Float
	suit_over_flow: Float
	suit_sms_left_num: Float
	suit_sms_num: Float
	suit_sms_over_num: Float
	suit_use_sms_num: Float
	use_flow: Float
}
"""
order by var_pop() on columns of table "sim_card_flow"
"""
input SimCardFlowVarPopOrderBy {
	card_avg_flow: OrderBy
	id: OrderBy
	pool_avg_flow: OrderBy
	suit_flow: OrderBy
	suit_left_flow: OrderBy
	suit_over_flow: OrderBy
	suit_sms_left_num: OrderBy
	suit_sms_num: OrderBy
	suit_sms_over_num: OrderBy
	suit_use_sms_num: OrderBy
	use_flow: OrderBy
}
"""
aggregate var_samp on columns
"""
type SimCardFlowVarSampFields {
	card_avg_flow: Float
	id: Float
	pool_avg_flow: Float
	suit_flow: Float
	suit_left_flow: Float
	suit_over_flow: Float
	suit_sms_left_num: Float
	suit_sms_num: Float
	suit_sms_over_num: Float
	suit_use_sms_num: Float
	use_flow: Float
}
"""
order by var_samp() on columns of table "sim_card_flow"
"""
input SimCardFlowVarSampOrderBy {
	card_avg_flow: OrderBy
	id: OrderBy
	pool_avg_flow: OrderBy
	suit_flow: OrderBy
	suit_left_flow: OrderBy
	suit_over_flow: OrderBy
	suit_sms_left_num: OrderBy
	suit_sms_num: OrderBy
	suit_sms_over_num: OrderBy
	suit_use_sms_num: OrderBy
	use_flow: OrderBy
}
"""
aggregate variance on columns
"""
type SimCardFlowVarianceFields {
	card_avg_flow: Float
	id: Float
	pool_avg_flow: Float
	suit_flow: Float
	suit_left_flow: Float
	suit_over_flow: Float
	suit_sms_left_num: Float
	suit_sms_num: Float
	suit_sms_over_num: Float
	suit_use_sms_num: Float
	use_flow: Float
}
"""
order by variance() on columns of table "sim_card_flow"
"""
input SimCardFlowVarianceOrderBy {
	card_avg_flow: OrderBy
	id: OrderBy
	pool_avg_flow: OrderBy
	suit_flow: OrderBy
	suit_left_flow: OrderBy
	suit_over_flow: OrderBy
	suit_sms_left_num: OrderBy
	suit_sms_num: OrderBy
	suit_sms_over_num: OrderBy
	suit_use_sms_num: OrderBy
	use_flow: OrderBy
}
