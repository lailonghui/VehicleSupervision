
extend type Mutation {
  """
  delete data from the table: "sim_card_flow"
  """
  delete_sim_card_flow(
    """filter the rows which have to be deleted"""
    where: sim_card_flow_bool_exp!
  ): sim_card_flow_mutation_response

  """
  delete single row from the table: "sim_card_flow"
  """
  delete_sim_card_flow_by_pk(
    """ID"""
    id: bigint!
  ): sim_card_flow

  """
  insert data into the table: "sim_card_flow"
  """
  insert_sim_card_flow(
    """the rows to be inserted"""
    objects: [sim_card_flow_insert_input!]!

    """on conflict condition"""
    on_conflict: sim_card_flow_on_conflict
  ): sim_card_flow_mutation_response

  """
  insert a single row into the table: "sim_card_flow"
  """
  insert_sim_card_flow_one(
    """the row to be inserted"""
    object: sim_card_flow_insert_input!

    """on conflict condition"""
    on_conflict: sim_card_flow_on_conflict
  ): sim_card_flow

  """
  update data of the table: "sim_card_flow"
  """
  update_sim_card_flow(
    """increments the integer columns with given value of the filtered values"""
    _inc: sim_card_flow_inc_input

    """sets the columns of the filtered rows to the given values"""
    _set: sim_card_flow_set_input

    """filter the rows which have to be updated"""
    where: sim_card_flow_bool_exp!
  ): sim_card_flow_mutation_response

  """
  update single row of the table: "sim_card_flow"
  """
  update_sim_card_flow_by_pk(
    """increments the integer columns with given value of the filtered values"""
    _inc: sim_card_flow_inc_input

    """sets the columns of the filtered rows to the given values"""
    _set: sim_card_flow_set_input
    pk_columns: sim_card_flow_pk_columns_input!
  ): sim_card_flow
}

extend type Query {
  """
  fetch data from the table: "sim_card_flow"
  """
  sim_card_flow(
    """distinct select on columns"""
    distinct_on: [sim_card_flow_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [sim_card_flow_order_by!]

    """filter the rows returned"""
    where: sim_card_flow_bool_exp
  ): [sim_card_flow!]!

  """
  fetch aggregated fields from the table: "sim_card_flow"
  """
  sim_card_flow_aggregate(
    """distinct select on columns"""
    distinct_on: [sim_card_flow_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [sim_card_flow_order_by!]

    """filter the rows returned"""
    where: sim_card_flow_bool_exp
  ): sim_card_flow_aggregate!

  """fetch data from the table: "sim_card_flow" using primary key columns"""
  sim_card_flow_by_pk(
    """ID"""
    id: bigint!
  ): sim_card_flow
}

"""
sim卡流量信息


columns and relationships of "sim_card_flow"

"""
type sim_card_flow {
  """已产生流量卡均流量(KB)"""
  card_avg_flow: numeric

  """卡号备注"""
  card_no_remark: String

  """创建时间"""
  create_at: timestamptz!

  """创建人"""
  create_by: String

  """删除时间"""
  delete_at: timestamptz

  """删除人"""
  delete_by: String

  """企业ID"""
  enterprise_id: String

  """ICCID"""
  iccid: String

  """ID"""
  id: bigint!

  """物联卡号"""
  iot_card_no: String!

  """是否删除"""
  is_delete: Boolean!

  """是否共享池"""
  is_share_pool: Boolean!

  """流量池卡均流量(KB)"""
  pool_avg_flow: numeric

  """SIM卡流量ID"""
  sim_card_flow_id: String!

  """套餐流量(MB)"""
  suit_flow: numeric

  """套餐剩余流量(MB)"""
  suit_left_flow: numeric

  """已超套餐流量(MB)"""
  suit_over_flow: numeric

  """套餐剩余短信条数"""
  suit_sms_left_num: Int

  """套餐短信条数"""
  suit_sms_num: Int

  """已超套餐短信条数"""
  suit_sms_over_num: Int

  """上行短信已用条数"""
  suit_use_sms_num: Int

  """修改时间"""
  update_at: timestamptz

  """修改人"""
  update_by: String

  """数据服务已用流量(KB)"""
  use_flow: numeric
}

"""
aggregated selection of "sim_card_flow"
"""
type sim_card_flow_aggregate {
  aggregate: sim_card_flow_aggregate_fields
  nodes: [sim_card_flow!]!
}

"""
aggregate fields of "sim_card_flow"
"""
type sim_card_flow_aggregate_fields {
  avg: sim_card_flow_avg_fields
  count(columns: [sim_card_flow_select_column!], distinct: Boolean): Int
  max: sim_card_flow_max_fields
  min: sim_card_flow_min_fields
  stddev: sim_card_flow_stddev_fields
  stddev_pop: sim_card_flow_stddev_pop_fields
  stddev_samp: sim_card_flow_stddev_samp_fields
  sum: sim_card_flow_sum_fields
  var_pop: sim_card_flow_var_pop_fields
  var_samp: sim_card_flow_var_samp_fields
  variance: sim_card_flow_variance_fields
}

"""
order by aggregate values of table "sim_card_flow"
"""
input sim_card_flow_aggregate_order_by {
  avg: sim_card_flow_avg_order_by
  count: order_by
  max: sim_card_flow_max_order_by
  min: sim_card_flow_min_order_by
  stddev: sim_card_flow_stddev_order_by
  stddev_pop: sim_card_flow_stddev_pop_order_by
  stddev_samp: sim_card_flow_stddev_samp_order_by
  sum: sim_card_flow_sum_order_by
  var_pop: sim_card_flow_var_pop_order_by
  var_samp: sim_card_flow_var_samp_order_by
  variance: sim_card_flow_variance_order_by
}

"""
input type for inserting array relation for remote table "sim_card_flow"
"""
input sim_card_flow_arr_rel_insert_input {
  data: [sim_card_flow_insert_input!]!
  on_conflict: sim_card_flow_on_conflict
}

"""aggregate avg on columns"""
type sim_card_flow_avg_fields {
  card_avg_flow: Float
  id: Float
  pool_avg_flow: Float
  suit_flow: Float
  suit_left_flow: Float
  suit_over_flow: Float
  suit_sms_left_num: Float
  suit_sms_num: Float
  suit_sms_over_num: Float
  suit_use_sms_num: Float
  use_flow: Float
}

"""
order by avg() on columns of table "sim_card_flow"
"""
input sim_card_flow_avg_order_by {
  card_avg_flow: order_by
  id: order_by
  pool_avg_flow: order_by
  suit_flow: order_by
  suit_left_flow: order_by
  suit_over_flow: order_by
  suit_sms_left_num: order_by
  suit_sms_num: order_by
  suit_sms_over_num: order_by
  suit_use_sms_num: order_by
  use_flow: order_by
}

"""
Boolean expression to filter rows from the table "sim_card_flow". All fields are combined with a logical 'AND'.
"""
input sim_card_flow_bool_exp {
  _and: [sim_card_flow_bool_exp]
  _not: sim_card_flow_bool_exp
  _or: [sim_card_flow_bool_exp]
  card_avg_flow: numeric_comparison_exp
  card_no_remark: String_comparison_exp
  create_at: timestamptz_comparison_exp
  create_by: String_comparison_exp
  delete_at: timestamptz_comparison_exp
  delete_by: String_comparison_exp
  enterprise_id: String_comparison_exp
  iccid: String_comparison_exp
  id: bigint_comparison_exp
  iot_card_no: String_comparison_exp
  is_delete: Boolean_comparison_exp
  is_share_pool: Boolean_comparison_exp
  pool_avg_flow: numeric_comparison_exp
  sim_card_flow_id: String_comparison_exp
  suit_flow: numeric_comparison_exp
  suit_left_flow: numeric_comparison_exp
  suit_over_flow: numeric_comparison_exp
  suit_sms_left_num: Int_comparison_exp
  suit_sms_num: Int_comparison_exp
  suit_sms_over_num: Int_comparison_exp
  suit_use_sms_num: Int_comparison_exp
  update_at: timestamptz_comparison_exp
  update_by: String_comparison_exp
  use_flow: numeric_comparison_exp
}

"""
unique or primary key constraints on table "sim_card_flow"
"""
enum sim_card_flow_constraint {
  """unique or primary key constraint"""
  sim_card_flow_pkey
}

"""
input type for incrementing integer column in table "sim_card_flow"
"""
input sim_card_flow_inc_input {
  card_avg_flow: numeric
  id: bigint
  pool_avg_flow: numeric
  suit_flow: numeric
  suit_left_flow: numeric
  suit_over_flow: numeric
  suit_sms_left_num: Int
  suit_sms_num: Int
  suit_sms_over_num: Int
  suit_use_sms_num: Int
  use_flow: numeric
}

"""
input type for inserting data into table "sim_card_flow"
"""
input sim_card_flow_insert_input {
  card_avg_flow: numeric
  card_no_remark: String
  create_at: timestamptz
  create_by: String
  delete_at: timestamptz
  delete_by: String
  enterprise_id: String
  iccid: String
  id: bigint
  iot_card_no: String
  is_delete: Boolean
  is_share_pool: Boolean
  pool_avg_flow: numeric
  sim_card_flow_id: String
  suit_flow: numeric
  suit_left_flow: numeric
  suit_over_flow: numeric
  suit_sms_left_num: Int
  suit_sms_num: Int
  suit_sms_over_num: Int
  suit_use_sms_num: Int
  update_at: timestamptz
  update_by: String
  use_flow: numeric
}

"""aggregate max on columns"""
type sim_card_flow_max_fields {
  card_avg_flow: numeric
  card_no_remark: String
  create_at: timestamptz
  create_by: String
  delete_at: timestamptz
  delete_by: String
  enterprise_id: String
  iccid: String
  id: bigint
  iot_card_no: String
  pool_avg_flow: numeric
  sim_card_flow_id: String
  suit_flow: numeric
  suit_left_flow: numeric
  suit_over_flow: numeric
  suit_sms_left_num: Int
  suit_sms_num: Int
  suit_sms_over_num: Int
  suit_use_sms_num: Int
  update_at: timestamptz
  update_by: String
  use_flow: numeric
}

"""
order by max() on columns of table "sim_card_flow"
"""
input sim_card_flow_max_order_by {
  card_avg_flow: order_by
  card_no_remark: order_by
  create_at: order_by
  create_by: order_by
  delete_at: order_by
  delete_by: order_by
  enterprise_id: order_by
  iccid: order_by
  id: order_by
  iot_card_no: order_by
  pool_avg_flow: order_by
  sim_card_flow_id: order_by
  suit_flow: order_by
  suit_left_flow: order_by
  suit_over_flow: order_by
  suit_sms_left_num: order_by
  suit_sms_num: order_by
  suit_sms_over_num: order_by
  suit_use_sms_num: order_by
  update_at: order_by
  update_by: order_by
  use_flow: order_by
}

"""aggregate min on columns"""
type sim_card_flow_min_fields {
  card_avg_flow: numeric
  card_no_remark: String
  create_at: timestamptz
  create_by: String
  delete_at: timestamptz
  delete_by: String
  enterprise_id: String
  iccid: String
  id: bigint
  iot_card_no: String
  pool_avg_flow: numeric
  sim_card_flow_id: String
  suit_flow: numeric
  suit_left_flow: numeric
  suit_over_flow: numeric
  suit_sms_left_num: Int
  suit_sms_num: Int
  suit_sms_over_num: Int
  suit_use_sms_num: Int
  update_at: timestamptz
  update_by: String
  use_flow: numeric
}

"""
order by min() on columns of table "sim_card_flow"
"""
input sim_card_flow_min_order_by {
  card_avg_flow: order_by
  card_no_remark: order_by
  create_at: order_by
  create_by: order_by
  delete_at: order_by
  delete_by: order_by
  enterprise_id: order_by
  iccid: order_by
  id: order_by
  iot_card_no: order_by
  pool_avg_flow: order_by
  sim_card_flow_id: order_by
  suit_flow: order_by
  suit_left_flow: order_by
  suit_over_flow: order_by
  suit_sms_left_num: order_by
  suit_sms_num: order_by
  suit_sms_over_num: order_by
  suit_use_sms_num: order_by
  update_at: order_by
  update_by: order_by
  use_flow: order_by
}

"""
response of any mutation on the table "sim_card_flow"
"""
type sim_card_flow_mutation_response {
  """number of affected rows by the mutation"""
  affected_rows: Int!

  """data of the affected rows by the mutation"""
  returning: [sim_card_flow!]!
}

"""
input type for inserting object relation for remote table "sim_card_flow"
"""
input sim_card_flow_obj_rel_insert_input {
  data: sim_card_flow_insert_input!
  on_conflict: sim_card_flow_on_conflict
}

"""
on conflict condition type for table "sim_card_flow"
"""
input sim_card_flow_on_conflict {
  constraint: sim_card_flow_constraint!
  update_columns: [sim_card_flow_update_column!]!
  where: sim_card_flow_bool_exp
}

"""
ordering options when selecting data from "sim_card_flow"
"""
input sim_card_flow_order_by {
  card_avg_flow: order_by
  card_no_remark: order_by
  create_at: order_by
  create_by: order_by
  delete_at: order_by
  delete_by: order_by
  enterprise_id: order_by
  iccid: order_by
  id: order_by
  iot_card_no: order_by
  is_delete: order_by
  is_share_pool: order_by
  pool_avg_flow: order_by
  sim_card_flow_id: order_by
  suit_flow: order_by
  suit_left_flow: order_by
  suit_over_flow: order_by
  suit_sms_left_num: order_by
  suit_sms_num: order_by
  suit_sms_over_num: order_by
  suit_use_sms_num: order_by
  update_at: order_by
  update_by: order_by
  use_flow: order_by
}

"""
primary key columns input for table: "sim_card_flow"
"""
input sim_card_flow_pk_columns_input {
  """ID"""
  id: bigint!
}

"""
select columns of table "sim_card_flow"
"""
enum sim_card_flow_select_column {
  """column name"""
  card_avg_flow

  """column name"""
  card_no_remark

  """column name"""
  create_at

  """column name"""
  create_by

  """column name"""
  delete_at

  """column name"""
  delete_by

  """column name"""
  enterprise_id

  """column name"""
  iccid

  """column name"""
  id

  """column name"""
  iot_card_no

  """column name"""
  is_delete

  """column name"""
  is_share_pool

  """column name"""
  pool_avg_flow

  """column name"""
  sim_card_flow_id

  """column name"""
  suit_flow

  """column name"""
  suit_left_flow

  """column name"""
  suit_over_flow

  """column name"""
  suit_sms_left_num

  """column name"""
  suit_sms_num

  """column name"""
  suit_sms_over_num

  """column name"""
  suit_use_sms_num

  """column name"""
  update_at

  """column name"""
  update_by

  """column name"""
  use_flow
}

"""
input type for updating data in table "sim_card_flow"
"""
input sim_card_flow_set_input {
  card_avg_flow: numeric
  card_no_remark: String
  create_at: timestamptz
  create_by: String
  delete_at: timestamptz
  delete_by: String
  enterprise_id: String
  iccid: String
  id: bigint
  iot_card_no: String
  is_delete: Boolean
  is_share_pool: Boolean
  pool_avg_flow: numeric
  sim_card_flow_id: String
  suit_flow: numeric
  suit_left_flow: numeric
  suit_over_flow: numeric
  suit_sms_left_num: Int
  suit_sms_num: Int
  suit_sms_over_num: Int
  suit_use_sms_num: Int
  update_at: timestamptz
  update_by: String
  use_flow: numeric
}

"""aggregate stddev on columns"""
type sim_card_flow_stddev_fields {
  card_avg_flow: Float
  id: Float
  pool_avg_flow: Float
  suit_flow: Float
  suit_left_flow: Float
  suit_over_flow: Float
  suit_sms_left_num: Float
  suit_sms_num: Float
  suit_sms_over_num: Float
  suit_use_sms_num: Float
  use_flow: Float
}

"""
order by stddev() on columns of table "sim_card_flow"
"""
input sim_card_flow_stddev_order_by {
  card_avg_flow: order_by
  id: order_by
  pool_avg_flow: order_by
  suit_flow: order_by
  suit_left_flow: order_by
  suit_over_flow: order_by
  suit_sms_left_num: order_by
  suit_sms_num: order_by
  suit_sms_over_num: order_by
  suit_use_sms_num: order_by
  use_flow: order_by
}

"""aggregate stddev_pop on columns"""
type sim_card_flow_stddev_pop_fields {
  card_avg_flow: Float
  id: Float
  pool_avg_flow: Float
  suit_flow: Float
  suit_left_flow: Float
  suit_over_flow: Float
  suit_sms_left_num: Float
  suit_sms_num: Float
  suit_sms_over_num: Float
  suit_use_sms_num: Float
  use_flow: Float
}

"""
order by stddev_pop() on columns of table "sim_card_flow"
"""
input sim_card_flow_stddev_pop_order_by {
  card_avg_flow: order_by
  id: order_by
  pool_avg_flow: order_by
  suit_flow: order_by
  suit_left_flow: order_by
  suit_over_flow: order_by
  suit_sms_left_num: order_by
  suit_sms_num: order_by
  suit_sms_over_num: order_by
  suit_use_sms_num: order_by
  use_flow: order_by
}

"""aggregate stddev_samp on columns"""
type sim_card_flow_stddev_samp_fields {
  card_avg_flow: Float
  id: Float
  pool_avg_flow: Float
  suit_flow: Float
  suit_left_flow: Float
  suit_over_flow: Float
  suit_sms_left_num: Float
  suit_sms_num: Float
  suit_sms_over_num: Float
  suit_use_sms_num: Float
  use_flow: Float
}

"""
order by stddev_samp() on columns of table "sim_card_flow"
"""
input sim_card_flow_stddev_samp_order_by {
  card_avg_flow: order_by
  id: order_by
  pool_avg_flow: order_by
  suit_flow: order_by
  suit_left_flow: order_by
  suit_over_flow: order_by
  suit_sms_left_num: order_by
  suit_sms_num: order_by
  suit_sms_over_num: order_by
  suit_use_sms_num: order_by
  use_flow: order_by
}

"""aggregate sum on columns"""
type sim_card_flow_sum_fields {
  card_avg_flow: numeric
  id: bigint
  pool_avg_flow: numeric
  suit_flow: numeric
  suit_left_flow: numeric
  suit_over_flow: numeric
  suit_sms_left_num: Int
  suit_sms_num: Int
  suit_sms_over_num: Int
  suit_use_sms_num: Int
  use_flow: numeric
}

"""
order by sum() on columns of table "sim_card_flow"
"""
input sim_card_flow_sum_order_by {
  card_avg_flow: order_by
  id: order_by
  pool_avg_flow: order_by
  suit_flow: order_by
  suit_left_flow: order_by
  suit_over_flow: order_by
  suit_sms_left_num: order_by
  suit_sms_num: order_by
  suit_sms_over_num: order_by
  suit_use_sms_num: order_by
  use_flow: order_by
}

"""
update columns of table "sim_card_flow"
"""
enum sim_card_flow_update_column {
  """column name"""
  card_avg_flow

  """column name"""
  card_no_remark

  """column name"""
  create_at

  """column name"""
  create_by

  """column name"""
  delete_at

  """column name"""
  delete_by

  """column name"""
  enterprise_id

  """column name"""
  iccid

  """column name"""
  id

  """column name"""
  iot_card_no

  """column name"""
  is_delete

  """column name"""
  is_share_pool

  """column name"""
  pool_avg_flow

  """column name"""
  sim_card_flow_id

  """column name"""
  suit_flow

  """column name"""
  suit_left_flow

  """column name"""
  suit_over_flow

  """column name"""
  suit_sms_left_num

  """column name"""
  suit_sms_num

  """column name"""
  suit_sms_over_num

  """column name"""
  suit_use_sms_num

  """column name"""
  update_at

  """column name"""
  update_by

  """column name"""
  use_flow
}

"""aggregate var_pop on columns"""
type sim_card_flow_var_pop_fields {
  card_avg_flow: Float
  id: Float
  pool_avg_flow: Float
  suit_flow: Float
  suit_left_flow: Float
  suit_over_flow: Float
  suit_sms_left_num: Float
  suit_sms_num: Float
  suit_sms_over_num: Float
  suit_use_sms_num: Float
  use_flow: Float
}

"""
order by var_pop() on columns of table "sim_card_flow"
"""
input sim_card_flow_var_pop_order_by {
  card_avg_flow: order_by
  id: order_by
  pool_avg_flow: order_by
  suit_flow: order_by
  suit_left_flow: order_by
  suit_over_flow: order_by
  suit_sms_left_num: order_by
  suit_sms_num: order_by
  suit_sms_over_num: order_by
  suit_use_sms_num: order_by
  use_flow: order_by
}

"""aggregate var_samp on columns"""
type sim_card_flow_var_samp_fields {
  card_avg_flow: Float
  id: Float
  pool_avg_flow: Float
  suit_flow: Float
  suit_left_flow: Float
  suit_over_flow: Float
  suit_sms_left_num: Float
  suit_sms_num: Float
  suit_sms_over_num: Float
  suit_use_sms_num: Float
  use_flow: Float
}

"""
order by var_samp() on columns of table "sim_card_flow"
"""
input sim_card_flow_var_samp_order_by {
  card_avg_flow: order_by
  id: order_by
  pool_avg_flow: order_by
  suit_flow: order_by
  suit_left_flow: order_by
  suit_over_flow: order_by
  suit_sms_left_num: order_by
  suit_sms_num: order_by
  suit_sms_over_num: order_by
  suit_use_sms_num: order_by
  use_flow: order_by
}

"""aggregate variance on columns"""
type sim_card_flow_variance_fields {
  card_avg_flow: Float
  id: Float
  pool_avg_flow: Float
  suit_flow: Float
  suit_left_flow: Float
  suit_over_flow: Float
  suit_sms_left_num: Float
  suit_sms_num: Float
  suit_sms_over_num: Float
  suit_use_sms_num: Float
  use_flow: Float
}

"""
order by variance() on columns of table "sim_card_flow"
"""
input sim_card_flow_variance_order_by {
  card_avg_flow: order_by
  id: order_by
  pool_avg_flow: order_by
  suit_flow: order_by
  suit_left_flow: order_by
  suit_over_flow: order_by
  suit_sms_left_num: order_by
  suit_sms_num: order_by
  suit_sms_over_num: order_by
  suit_use_sms_num: order_by
  use_flow: order_by
}
