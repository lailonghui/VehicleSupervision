"""
SIM卡


columns and relationships of "sim_card"
"""
type SimCard {
	"""
	创建时间
	"""
	create_at: Timestamptz!
	"""
	创建人
	"""
	create_by: String
	"""
	删除时间
	"""
	delete_at: Timestamptz
	"""
	删除人
	"""
	delete_by: String
	"""
	所属部门ID
	"""
	dept_id: String
	"""
	ID
	"""
	id: Bigint!
	"""
	是否删除
	"""
	is_delete: Boolean!
	"""
	运营商类型
	"""
	mobile_type: Int
	"""
	运营商ID
	"""
	operators_id: String
	"""
	代理商ID
	"""
	proxyrg_id: String
	"""
	备注
	"""
	remark: String
	"""
	SIM卡ID
	"""
	sim_card_id: String!
	"""
	SIM卡号
	"""
	sim_number: String
	"""
	绑定终端ID
	"""
	terminal_id: Terminal
	"""
	修改时间
	"""
	update_at: Timestamptz
	"""
	修改人
	"""
	update_by: String
}
"""
aggregated selection of "sim_card"
"""
type SimCardAggregate {
	aggregate: SimCardAggregateFields
	nodes: [SimCard!]!
}
"""
aggregate fields of "sim_card"
"""
type SimCardAggregateFields {
	avg: SimCardAvgFields
	count(columns: [SimCardSelectColumn!], distinct: Boolean): Int
	max: SimCardMaxFields
	min: SimCardMinFields
	stddev: SimCardStddevFields
	stddev_pop: SimCardStddevPopFields
	stddev_samp: SimCardStddevSampFields
	sum: SimCardSumFields
	var_pop: SimCardVarPopFields
	var_samp: SimCardVarSampFields
	variance: SimCardVarianceFields
}
"""
order by aggregate values of table "sim_card"
"""
input SimCardAggregateOrderBy {
	avg: SimCardAvgOrderBy
	count: OrderBy
	max: SimCardMaxOrderBy
	min: SimCardMinOrderBy
	stddev: SimCardStddevOrderBy
	stddev_pop: SimCardStddevPopOrderBy
	stddev_samp: SimCardStddevSampOrderBy
	sum: SimCardSumOrderBy
	var_pop: SimCardVarPopOrderBy
	var_samp: SimCardVarSampOrderBy
	variance: SimCardVarianceOrderBy
}
"""
input type for inserting array relation for remote table "sim_card"
"""
input SimCardArrRelInsertInput {
	data: [SimCardInsertInput!]!
	on_conflict: SimCardOnConflict
}
"""
aggregate avg on columns
"""
type SimCardAvgFields {
	id: Float
	mobile_type: Float
}
"""
order by avg() on columns of table "sim_card"
"""
input SimCardAvgOrderBy {
	id: OrderBy
	mobile_type: OrderBy
}
"""
Boolean expression to filter rows from the table "sim_card". All fields are combined with a logical 'AND'.
"""
input SimCardBoolExp {
	_and: [SimCardBoolExp]
	_not: SimCardBoolExp
	_or: [SimCardBoolExp]
	create_at: TimestamptzComparisonExp
	create_by: StringComparisonExp
	delete_at: TimestamptzComparisonExp
	delete_by: StringComparisonExp
	dept_id: StringComparisonExp
	id: BigintComparisonExp
	is_delete: BooleanComparisonExp
	mobile_type: IntComparisonExp
	operators_id: StringComparisonExp
	proxyrg_id: StringComparisonExp
	remark: StringComparisonExp
	sim_card_id: StringComparisonExp
	sim_number: StringComparisonExp
	terminal_id: StringComparisonExp
	update_at: TimestamptzComparisonExp
	update_by: StringComparisonExp
}
"""
unique or primary key constraints on table "sim_card"
"""
enum SimCardConstraint {
	"""
	unique or primary key constraint
	"""
	sim_card_pkey
}
"""
input type for incrementing integer column in table "sim_card"
"""
input SimCardIncInput {
	id: Bigint
	mobile_type: Int
}
"""
input type for inserting data into table "sim_card"
"""
input SimCardInsertInput {
	create_at: Timestamptz
	create_by: String
	delete_at: Timestamptz
	delete_by: String
	dept_id: String
	id: Bigint
	is_delete: Boolean
	mobile_type: Int
	operators_id: String
	proxyrg_id: String
	remark: String
	sim_card_id: String
	sim_number: String
	terminal_id: String
	update_at: Timestamptz
	update_by: String
}
"""
aggregate max on columns
"""
type SimCardMaxFields {
	create_at: Timestamptz
	create_by: String
	delete_at: Timestamptz
	delete_by: String
	dept_id: String
	id: Bigint
	mobile_type: Int
	operators_id: String
	proxyrg_id: String
	remark: String
	sim_card_id: String
	sim_number: String
	terminal_id: String
	update_at: Timestamptz
	update_by: String
}
"""
order by max() on columns of table "sim_card"
"""
input SimCardMaxOrderBy {
	create_at: OrderBy
	create_by: OrderBy
	delete_at: OrderBy
	delete_by: OrderBy
	dept_id: OrderBy
	id: OrderBy
	mobile_type: OrderBy
	operators_id: OrderBy
	proxyrg_id: OrderBy
	remark: OrderBy
	sim_card_id: OrderBy
	sim_number: OrderBy
	terminal_id: OrderBy
	update_at: OrderBy
	update_by: OrderBy
}
"""
aggregate min on columns
"""
type SimCardMinFields {
	create_at: Timestamptz
	create_by: String
	delete_at: Timestamptz
	delete_by: String
	dept_id: String
	id: Bigint
	mobile_type: Int
	operators_id: String
	proxyrg_id: String
	remark: String
	sim_card_id: String
	sim_number: String
	terminal_id: String
	update_at: Timestamptz
	update_by: String
}
"""
order by min() on columns of table "sim_card"
"""
input SimCardMinOrderBy {
	create_at: OrderBy
	create_by: OrderBy
	delete_at: OrderBy
	delete_by: OrderBy
	dept_id: OrderBy
	id: OrderBy
	mobile_type: OrderBy
	operators_id: OrderBy
	proxyrg_id: OrderBy
	remark: OrderBy
	sim_card_id: OrderBy
	sim_number: OrderBy
	terminal_id: OrderBy
	update_at: OrderBy
	update_by: OrderBy
}
"""
response of any mutation on the table "sim_card"
"""
type SimCardMutationResponse {
	"""
	number of affected rows by the mutation
	"""
	affected_rows: Int!
	"""
	data of the affected rows by the mutation
	"""
	returning: [SimCard!]!
}
"""
input type for inserting object relation for remote table "sim_card"
"""
input SimCardObjRelInsertInput {
	data: SimCardInsertInput!
	on_conflict: SimCardOnConflict
}
"""
on conflict condition type for table "sim_card"
"""
input SimCardOnConflict {
	constraint: SimCardConstraint!
	update_columns: [SimCardUpdateColumn!]!
	where: SimCardBoolExp
}
"""
ordering options when selecting data from "sim_card"
"""
input SimCardOrderBy {
	create_at: OrderBy
	create_by: OrderBy
	delete_at: OrderBy
	delete_by: OrderBy
	dept_id: OrderBy
	id: OrderBy
	is_delete: OrderBy
	mobile_type: OrderBy
	operators_id: OrderBy
	proxyrg_id: OrderBy
	remark: OrderBy
	sim_card_id: OrderBy
	sim_number: OrderBy
	terminal_id: OrderBy
	update_at: OrderBy
	update_by: OrderBy
}
"""
primary key columns input for table: "sim_card"
"""
input SimCardPkColumnsInput {
	"""
	ID
	"""
	id: Bigint!
}
"""
select columns of table "sim_card"
"""
enum SimCardSelectColumn {
	"""
	column name
	"""
	create_at
	"""
	column name
	"""
	create_by
	"""
	column name
	"""
	delete_at
	"""
	column name
	"""
	delete_by
	"""
	column name
	"""
	dept_id
	"""
	column name
	"""
	id
	"""
	column name
	"""
	is_delete
	"""
	column name
	"""
	mobile_type
	"""
	column name
	"""
	operators_id
	"""
	column name
	"""
	proxyrg_id
	"""
	column name
	"""
	remark
	"""
	column name
	"""
	sim_card_id
	"""
	column name
	"""
	sim_number
	"""
	column name
	"""
	terminal_id
	"""
	column name
	"""
	update_at
	"""
	column name
	"""
	update_by
}
"""
input type for updating data in table "sim_card"
"""
input SimCardSetInput {
	create_at: Timestamptz
	create_by: String
	delete_at: Timestamptz
	delete_by: String
	dept_id: String
	id: Bigint
	is_delete: Boolean
	mobile_type: Int
	operators_id: String
	proxyrg_id: String
	remark: String
	sim_card_id: String
	sim_number: String
	terminal_id: String
	update_at: Timestamptz
	update_by: String
}
"""
aggregate stddev on columns
"""
type SimCardStddevFields {
	id: Float
	mobile_type: Float
}
"""
order by stddev() on columns of table "sim_card"
"""
input SimCardStddevOrderBy {
	id: OrderBy
	mobile_type: OrderBy
}
"""
aggregate stddev_pop on columns
"""
type SimCardStddevPopFields {
	id: Float
	mobile_type: Float
}
"""
order by stddev_pop() on columns of table "sim_card"
"""
input SimCardStddevPopOrderBy {
	id: OrderBy
	mobile_type: OrderBy
}
"""
aggregate stddev_samp on columns
"""
type SimCardStddevSampFields {
	id: Float
	mobile_type: Float
}
"""
order by stddev_samp() on columns of table "sim_card"
"""
input SimCardStddevSampOrderBy {
	id: OrderBy
	mobile_type: OrderBy
}
"""
aggregate sum on columns
"""
type SimCardSumFields {
	id: Bigint
	mobile_type: Int
}
"""
order by sum() on columns of table "sim_card"
"""
input SimCardSumOrderBy {
	id: OrderBy
	mobile_type: OrderBy
}
"""
update columns of table "sim_card"
"""
enum SimCardUpdateColumn {
	"""
	column name
	"""
	create_at
	"""
	column name
	"""
	create_by
	"""
	column name
	"""
	delete_at
	"""
	column name
	"""
	delete_by
	"""
	column name
	"""
	dept_id
	"""
	column name
	"""
	id
	"""
	column name
	"""
	is_delete
	"""
	column name
	"""
	mobile_type
	"""
	column name
	"""
	operators_id
	"""
	column name
	"""
	proxyrg_id
	"""
	column name
	"""
	remark
	"""
	column name
	"""
	sim_card_id
	"""
	column name
	"""
	sim_number
	"""
	column name
	"""
	terminal_id
	"""
	column name
	"""
	update_at
	"""
	column name
	"""
	update_by
}
"""
aggregate var_pop on columns
"""
type SimCardVarPopFields {
	id: Float
	mobile_type: Float
}
"""
order by var_pop() on columns of table "sim_card"
"""
input SimCardVarPopOrderBy {
	id: OrderBy
	mobile_type: OrderBy
}
"""
aggregate var_samp on columns
"""
type SimCardVarSampFields {
	id: Float
	mobile_type: Float
}
"""
order by var_samp() on columns of table "sim_card"
"""
input SimCardVarSampOrderBy {
	id: OrderBy
	mobile_type: OrderBy
}
"""
aggregate variance on columns
"""
type SimCardVarianceFields {
	id: Float
	mobile_type: Float
}
"""
order by variance() on columns of table "sim_card"
"""
input SimCardVarianceOrderBy {
	id: OrderBy
	mobile_type: OrderBy
}
extend type Mutation {
	"""
	delete data from the table: "sim_card"
	"""
	delete_sim_card("""
	filter the rows which have to be deleted
	"""
	where: SimCardBoolExp!): SimCardMutationResponse
	"""
	delete single row from the table: "sim_card"
	"""
	delete_sim_card_by_pk("""
	ID
	"""
	id: Bigint!): SimCard
	"""
	insert data into the table: "sim_card"
	"""
	insert_sim_card("""
	the rows to be inserted
	"""
	objects: [SimCardInsertInput!]!, """
	on conflict condition
	"""
	on_conflict: SimCardOnConflict): SimCardMutationResponse
	"""
	insert a single row into the table: "sim_card"
	"""
	insert_sim_card_one("""
	the row to be inserted
	"""
	object: SimCardInsertInput!, """
	on conflict condition
	"""
	on_conflict: SimCardOnConflict): SimCard
	"""
	update data of the table: "sim_card"
	"""
	update_sim_card("""
	increments the integer columns with given value of the filtered values
	"""
	_inc: SimCardIncInput, """
	sets the columns of the filtered rows to the given values
	"""
	_set: SimCardSetInput, """
	filter the rows which have to be updated
	"""
	where: SimCardBoolExp!): SimCardMutationResponse
	"""
	update single row of the table: "sim_card"
	"""
	update_sim_card_by_pk("""
	increments the integer columns with given value of the filtered values
	"""
	_inc: SimCardIncInput, """
	sets the columns of the filtered rows to the given values
	"""
	_set: SimCardSetInput, pk_columns: SimCardPkColumnsInput!): SimCard
}
extend type Query {
	"""
	fetch data from the table: "sim_card"
	"""
	sim_card("""
	distinct select on columns
	"""
	distinct_on: [SimCardSelectColumn!], """
	limit the number of rows returned
	"""
	limit: Int, """
	skip the first n rows. Use only with order_by
	"""
	offset: Int, """
	sort the rows by one or more columns
	"""
	order_by: [SimCardOrderBy!], """
	filter the rows returned
	"""
	where: SimCardBoolExp): [SimCard!]!
	"""
	fetch aggregated fields from the table: "sim_card"
	"""
	sim_card_aggregate("""
	distinct select on columns
	"""
	distinct_on: [SimCardSelectColumn!], """
	limit the number of rows returned
	"""
	limit: Int, """
	skip the first n rows. Use only with order_by
	"""
	offset: Int, """
	sort the rows by one or more columns
	"""
	order_by: [SimCardOrderBy!], """
	filter the rows returned
	"""
	where: SimCardBoolExp): SimCardAggregate!
	"""
	fetch data from the table: "sim_card" using primary key columns
	"""
	sim_card_by_pk("""
	ID
	"""
	id: Bigint!): SimCard
}
