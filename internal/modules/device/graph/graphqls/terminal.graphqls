
extend type Mutation {
  """
  delete data from the table: "terminal"
  """
  delete_terminal(
    """filter the rows which have to be deleted"""
    where: terminal_bool_exp!
  ): terminal_mutation_response

  """
  delete single row from the table: "terminal"
  """
  delete_terminal_by_pk(
    """ID"""
    id: bigint!
  ): terminal

  """
  insert data into the table: "terminal"
  """
  insert_terminal(
    """the rows to be inserted"""
    objects: [terminal_insert_input!]!

    """on conflict condition"""
    on_conflict: terminal_on_conflict
  ): terminal_mutation_response

  """
  insert a single row into the table: "terminal"
  """
  insert_terminal_one(
    """the row to be inserted"""
    object: terminal_insert_input!

    """on conflict condition"""
    on_conflict: terminal_on_conflict
  ): terminal

  """
  update data of the table: "terminal"
  """
  update_terminal(
    """increments the integer columns with given value of the filtered values"""
    _inc: terminal_inc_input

    """sets the columns of the filtered rows to the given values"""
    _set: terminal_set_input

    """filter the rows which have to be updated"""
    where: terminal_bool_exp!
  ): terminal_mutation_response

  """
  update single row of the table: "terminal"
  """
  update_terminal_by_pk(
    """increments the integer columns with given value of the filtered values"""
    _inc: terminal_inc_input

    """sets the columns of the filtered rows to the given values"""
    _set: terminal_set_input
    pk_columns: terminal_pk_columns_input!
  ): terminal
}

extend type Query {
  """
  fetch data from the table: "terminal"
  """
  terminal(
    """distinct select on columns"""
    distinct_on: [terminal_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [terminal_order_by!]

    """filter the rows returned"""
    where: terminal_bool_exp
  ): [terminal!]!

  """
  fetch aggregated fields from the table: "terminal"
  """
  terminal_aggregate(
    """distinct select on columns"""
    distinct_on: [terminal_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [terminal_order_by!]

    """filter the rows returned"""
    where: terminal_bool_exp
  ): terminal_aggregate!

  """fetch data from the table: "terminal" using primary key columns"""
  terminal_by_pk(
    """ID"""
    id: bigint!
  ): terminal
}


"""
终端


columns and relationships of "terminal"

"""
type terminal {
  """ADAS型号"""
  adas_model: String

  """外接鉴权码"""
  auth_key: String

  """摄像头数量"""
  camera_num: Int

  """摄像头安装位置"""
  channel_no: String

  """城市ID"""
  city_id: String

  """新建时间"""
  create_at: timestamptz!

  """新建人"""
  create_by: String

  """删除时间"""
  delete_at: timestamptz

  """删除人"""
  delete_by: String

  """部门ID"""
  dept_id: String

  """首次安装时间"""
  first_install_time: timestamptz

  """保修期到期时间"""
  guarantee_date: timestamptz

  """ID"""
  id: bigint!

  """终端IMEI"""
  imei: String!

  """安装人员ID"""
  install_man_id: String

  """是否删除"""
  is_delete: Boolean!

  """是否注册"""
  is_reg: Boolean

  """是否支持拍照"""
  is_support_photo: Boolean!

  """模拟鉴权码"""
  mock_auth_key: String

  """生产日期"""
  produce_date: timestamptz

  """终端安装证明代理商"""
  prove_proxyrg_id: String

  """省份ID"""
  province_id: String

  """代理商ID"""
  proxyrg_id: String

  """登记时间"""
  record_date: timestamptz

  """终端注册ID"""
  reg_id: String

  """备注"""
  remarks: String

  """解绑原因"""
  remove_reason: String

  """SIM卡ID"""
  sim_id: String

  """运营商"""
  sprg_id: String

  """终端ID"""
  terminal_id: String!

  """终端类型ID"""
  type_id: String

  """修改时间"""
  update_at: timestamptz

  """修改人"""
  update_by: String

  """车辆ID"""
  vehicle_id: String

  """版本号"""
  version_number: String
}

"""
aggregated selection of "terminal"
"""
type terminal_aggregate {
  aggregate: terminal_aggregate_fields
  nodes: [terminal!]!
}

"""
aggregate fields of "terminal"
"""
type terminal_aggregate_fields {
  avg: terminal_avg_fields
  count(columns: [terminal_select_column!], distinct: Boolean): Int
  max: terminal_max_fields
  min: terminal_min_fields
  stddev: terminal_stddev_fields
  stddev_pop: terminal_stddev_pop_fields
  stddev_samp: terminal_stddev_samp_fields
  sum: terminal_sum_fields
  var_pop: terminal_var_pop_fields
  var_samp: terminal_var_samp_fields
  variance: terminal_variance_fields
}

"""
order by aggregate values of table "terminal"
"""
input terminal_aggregate_order_by {
  avg: terminal_avg_order_by
  count: order_by
  max: terminal_max_order_by
  min: terminal_min_order_by
  stddev: terminal_stddev_order_by
  stddev_pop: terminal_stddev_pop_order_by
  stddev_samp: terminal_stddev_samp_order_by
  sum: terminal_sum_order_by
  var_pop: terminal_var_pop_order_by
  var_samp: terminal_var_samp_order_by
  variance: terminal_variance_order_by
}

"""
input type for inserting array relation for remote table "terminal"
"""
input terminal_arr_rel_insert_input {
  data: [terminal_insert_input!]!
  on_conflict: terminal_on_conflict
}

"""aggregate avg on columns"""
type terminal_avg_fields {
  camera_num: Float
  id: Float
}

"""
order by avg() on columns of table "terminal"
"""
input terminal_avg_order_by {
  camera_num: order_by
  id: order_by
}

"""
Boolean expression to filter rows from the table "terminal". All fields are combined with a logical 'AND'.
"""
input terminal_bool_exp {
  _and: [terminal_bool_exp]
  _not: terminal_bool_exp
  _or: [terminal_bool_exp]
  adas_model: String_comparison_exp
  auth_key: String_comparison_exp
  camera_num: Int_comparison_exp
  channel_no: String_comparison_exp
  city_id: String_comparison_exp
  create_at: timestamptz_comparison_exp
  create_by: String_comparison_exp
  delete_at: timestamptz_comparison_exp
  delete_by: String_comparison_exp
  dept_id: String_comparison_exp
  first_install_time: timestamptz_comparison_exp
  guarantee_date: timestamptz_comparison_exp
  id: bigint_comparison_exp
  imei: String_comparison_exp
  install_man_id: String_comparison_exp
  is_delete: Boolean_comparison_exp
  is_reg: Boolean_comparison_exp
  is_support_photo: Boolean_comparison_exp
  mock_auth_key: String_comparison_exp
  produce_date: timestamptz_comparison_exp
  prove_proxyrg_id: String_comparison_exp
  province_id: String_comparison_exp
  proxyrg_id: String_comparison_exp
  record_date: timestamptz_comparison_exp
  reg_id: String_comparison_exp
  remarks: String_comparison_exp
  remove_reason: String_comparison_exp
  sim_id: String_comparison_exp
  sprg_id: String_comparison_exp
  terminal_id: String_comparison_exp
  type_id: String_comparison_exp
  update_at: timestamptz_comparison_exp
  update_by: String_comparison_exp
  vehicle_id: String_comparison_exp
  version_number: String_comparison_exp
}

"""
unique or primary key constraints on table "terminal"
"""
enum terminal_constraint {
  """unique or primary key constraint"""
  terminal_pkey
}

"""
input type for incrementing integer column in table "terminal"
"""
input terminal_inc_input {
  camera_num: Int
  id: bigint
}

"""
input type for inserting data into table "terminal"
"""
input terminal_insert_input {
  adas_model: String
  auth_key: String
  camera_num: Int
  channel_no: String
  city_id: String
  create_at: timestamptz
  create_by: String
  delete_at: timestamptz
  delete_by: String
  dept_id: String
  first_install_time: timestamptz
  guarantee_date: timestamptz
  id: bigint
  imei: String
  install_man_id: String
  is_delete: Boolean
  is_reg: Boolean
  is_support_photo: Boolean
  mock_auth_key: String
  produce_date: timestamptz
  prove_proxyrg_id: String
  province_id: String
  proxyrg_id: String
  record_date: timestamptz
  reg_id: String
  remarks: String
  remove_reason: String
  sim_id: String
  sprg_id: String
  terminal_id: String
  type_id: String
  update_at: timestamptz
  update_by: String
  vehicle_id: String
  version_number: String
}

"""aggregate max on columns"""
type terminal_max_fields {
  adas_model: String
  auth_key: String
  camera_num: Int
  channel_no: String
  city_id: String
  create_at: timestamptz
  create_by: String
  delete_at: timestamptz
  delete_by: String
  dept_id: String
  first_install_time: timestamptz
  guarantee_date: timestamptz
  id: bigint
  imei: String
  install_man_id: String
  mock_auth_key: String
  produce_date: timestamptz
  prove_proxyrg_id: String
  province_id: String
  proxyrg_id: String
  record_date: timestamptz
  reg_id: String
  remarks: String
  remove_reason: String
  sim_id: String
  sprg_id: String
  terminal_id: String
  type_id: String
  update_at: timestamptz
  update_by: String
  vehicle_id: String
  version_number: String
}

"""
order by max() on columns of table "terminal"
"""
input terminal_max_order_by {
  adas_model: order_by
  auth_key: order_by
  camera_num: order_by
  channel_no: order_by
  city_id: order_by
  create_at: order_by
  create_by: order_by
  delete_at: order_by
  delete_by: order_by
  dept_id: order_by
  first_install_time: order_by
  guarantee_date: order_by
  id: order_by
  imei: order_by
  install_man_id: order_by
  mock_auth_key: order_by
  produce_date: order_by
  prove_proxyrg_id: order_by
  province_id: order_by
  proxyrg_id: order_by
  record_date: order_by
  reg_id: order_by
  remarks: order_by
  remove_reason: order_by
  sim_id: order_by
  sprg_id: order_by
  terminal_id: order_by
  type_id: order_by
  update_at: order_by
  update_by: order_by
  vehicle_id: order_by
  version_number: order_by
}

"""aggregate min on columns"""
type terminal_min_fields {
  adas_model: String
  auth_key: String
  camera_num: Int
  channel_no: String
  city_id: String
  create_at: timestamptz
  create_by: String
  delete_at: timestamptz
  delete_by: String
  dept_id: String
  first_install_time: timestamptz
  guarantee_date: timestamptz
  id: bigint
  imei: String
  install_man_id: String
  mock_auth_key: String
  produce_date: timestamptz
  prove_proxyrg_id: String
  province_id: String
  proxyrg_id: String
  record_date: timestamptz
  reg_id: String
  remarks: String
  remove_reason: String
  sim_id: String
  sprg_id: String
  terminal_id: String
  type_id: String
  update_at: timestamptz
  update_by: String
  vehicle_id: String
  version_number: String
}

"""
order by min() on columns of table "terminal"
"""
input terminal_min_order_by {
  adas_model: order_by
  auth_key: order_by
  camera_num: order_by
  channel_no: order_by
  city_id: order_by
  create_at: order_by
  create_by: order_by
  delete_at: order_by
  delete_by: order_by
  dept_id: order_by
  first_install_time: order_by
  guarantee_date: order_by
  id: order_by
  imei: order_by
  install_man_id: order_by
  mock_auth_key: order_by
  produce_date: order_by
  prove_proxyrg_id: order_by
  province_id: order_by
  proxyrg_id: order_by
  record_date: order_by
  reg_id: order_by
  remarks: order_by
  remove_reason: order_by
  sim_id: order_by
  sprg_id: order_by
  terminal_id: order_by
  type_id: order_by
  update_at: order_by
  update_by: order_by
  vehicle_id: order_by
  version_number: order_by
}

"""
response of any mutation on the table "terminal"
"""
type terminal_mutation_response {
  """number of affected rows by the mutation"""
  affected_rows: Int!

  """data of the affected rows by the mutation"""
  returning: [terminal!]!
}

"""
input type for inserting object relation for remote table "terminal"
"""
input terminal_obj_rel_insert_input {
  data: terminal_insert_input!
  on_conflict: terminal_on_conflict
}

"""
on conflict condition type for table "terminal"
"""
input terminal_on_conflict {
  constraint: terminal_constraint!
  update_columns: [terminal_update_column!]!
  where: terminal_bool_exp
}

"""
ordering options when selecting data from "terminal"
"""
input terminal_order_by {
  adas_model: order_by
  auth_key: order_by
  camera_num: order_by
  channel_no: order_by
  city_id: order_by
  create_at: order_by
  create_by: order_by
  delete_at: order_by
  delete_by: order_by
  dept_id: order_by
  first_install_time: order_by
  guarantee_date: order_by
  id: order_by
  imei: order_by
  install_man_id: order_by
  is_delete: order_by
  is_reg: order_by
  is_support_photo: order_by
  mock_auth_key: order_by
  produce_date: order_by
  prove_proxyrg_id: order_by
  province_id: order_by
  proxyrg_id: order_by
  record_date: order_by
  reg_id: order_by
  remarks: order_by
  remove_reason: order_by
  sim_id: order_by
  sprg_id: order_by
  terminal_id: order_by
  type_id: order_by
  update_at: order_by
  update_by: order_by
  vehicle_id: order_by
  version_number: order_by
}

"""
primary key columns input for table: "terminal"
"""
input terminal_pk_columns_input {
  """ID"""
  id: bigint!
}

"""
select columns of table "terminal"
"""
enum terminal_select_column {
  """column name"""
  adas_model

  """column name"""
  auth_key

  """column name"""
  camera_num

  """column name"""
  channel_no

  """column name"""
  city_id

  """column name"""
  create_at

  """column name"""
  create_by

  """column name"""
  delete_at

  """column name"""
  delete_by

  """column name"""
  dept_id

  """column name"""
  first_install_time

  """column name"""
  guarantee_date

  """column name"""
  id

  """column name"""
  imei

  """column name"""
  install_man_id

  """column name"""
  is_delete

  """column name"""
  is_reg

  """column name"""
  is_support_photo

  """column name"""
  mock_auth_key

  """column name"""
  produce_date

  """column name"""
  prove_proxyrg_id

  """column name"""
  province_id

  """column name"""
  proxyrg_id

  """column name"""
  record_date

  """column name"""
  reg_id

  """column name"""
  remarks

  """column name"""
  remove_reason

  """column name"""
  sim_id

  """column name"""
  sprg_id

  """column name"""
  terminal_id

  """column name"""
  type_id

  """column name"""
  update_at

  """column name"""
  update_by

  """column name"""
  vehicle_id

  """column name"""
  version_number
}

"""
input type for updating data in table "terminal"
"""
input terminal_set_input {
  adas_model: String
  auth_key: String
  camera_num: Int
  channel_no: String
  city_id: String
  create_at: timestamptz
  create_by: String
  delete_at: timestamptz
  delete_by: String
  dept_id: String
  first_install_time: timestamptz
  guarantee_date: timestamptz
  id: bigint
  imei: String
  install_man_id: String
  is_delete: Boolean
  is_reg: Boolean
  is_support_photo: Boolean
  mock_auth_key: String
  produce_date: timestamptz
  prove_proxyrg_id: String
  province_id: String
  proxyrg_id: String
  record_date: timestamptz
  reg_id: String
  remarks: String
  remove_reason: String
  sim_id: String
  sprg_id: String
  terminal_id: String
  type_id: String
  update_at: timestamptz
  update_by: String
  vehicle_id: String
  version_number: String
}

"""aggregate stddev on columns"""
type terminal_stddev_fields {
  camera_num: Float
  id: Float
}

"""
order by stddev() on columns of table "terminal"
"""
input terminal_stddev_order_by {
  camera_num: order_by
  id: order_by
}

"""aggregate stddev_pop on columns"""
type terminal_stddev_pop_fields {
  camera_num: Float
  id: Float
}

"""
order by stddev_pop() on columns of table "terminal"
"""
input terminal_stddev_pop_order_by {
  camera_num: order_by
  id: order_by
}

"""aggregate stddev_samp on columns"""
type terminal_stddev_samp_fields {
  camera_num: Float
  id: Float
}

"""
order by stddev_samp() on columns of table "terminal"
"""
input terminal_stddev_samp_order_by {
  camera_num: order_by
  id: order_by
}

"""aggregate sum on columns"""
type terminal_sum_fields {
  camera_num: Int
  id: bigint
}

"""
order by sum() on columns of table "terminal"
"""
input terminal_sum_order_by {
  camera_num: order_by
  id: order_by
}

"""
update columns of table "terminal"
"""
enum terminal_update_column {
  """column name"""
  adas_model

  """column name"""
  auth_key

  """column name"""
  camera_num

  """column name"""
  channel_no

  """column name"""
  city_id

  """column name"""
  create_at

  """column name"""
  create_by

  """column name"""
  delete_at

  """column name"""
  delete_by

  """column name"""
  dept_id

  """column name"""
  first_install_time

  """column name"""
  guarantee_date

  """column name"""
  id

  """column name"""
  imei

  """column name"""
  install_man_id

  """column name"""
  is_delete

  """column name"""
  is_reg

  """column name"""
  is_support_photo

  """column name"""
  mock_auth_key

  """column name"""
  produce_date

  """column name"""
  prove_proxyrg_id

  """column name"""
  province_id

  """column name"""
  proxyrg_id

  """column name"""
  record_date

  """column name"""
  reg_id

  """column name"""
  remarks

  """column name"""
  remove_reason

  """column name"""
  sim_id

  """column name"""
  sprg_id

  """column name"""
  terminal_id

  """column name"""
  type_id

  """column name"""
  update_at

  """column name"""
  update_by

  """column name"""
  vehicle_id

  """column name"""
  version_number
}

"""aggregate var_pop on columns"""
type terminal_var_pop_fields {
  camera_num: Float
  id: Float
}

"""
order by var_pop() on columns of table "terminal"
"""
input terminal_var_pop_order_by {
  camera_num: order_by
  id: order_by
}

"""aggregate var_samp on columns"""
type terminal_var_samp_fields {
  camera_num: Float
  id: Float
}

"""
order by var_samp() on columns of table "terminal"
"""
input terminal_var_samp_order_by {
  camera_num: order_by
  id: order_by
}

"""aggregate variance on columns"""
type terminal_variance_fields {
  camera_num: Float
  id: Float
}

"""
order by variance() on columns of table "terminal"
"""
input terminal_variance_order_by {
  camera_num: order_by
  id: order_by
}

