"""
终端


columns and relationships of "terminal"
"""
type Terminal {
	"""
	ADAS型号
	"""
	adas_model: String
	"""
	外接鉴权码
	"""
	auth_key: String
	"""
	摄像头数量
	"""
	camera_num: Int
	"""
	摄像头安装位置
	"""
	channel_no: String
	"""
	城市ID
	"""
	city_id: String
	"""
	新建时间
	"""
	create_at: Timestamptz!
	"""
	新建人
	"""
	create_by: String
	"""
	删除时间
	"""
	delete_at: Timestamptz
	"""
	删除人
	"""
	delete_by: String
	"""
	部门ID
	"""
	dept_id: String
	"""
	首次安装时间
	"""
	first_install_time: Timestamptz
	"""
	保修期到期时间
	"""
	guarantee_date: Timestamptz
	"""
	ID
	"""
	id: Bigint!
	"""
	终端IMEI
	"""
	imei: String!
	"""
	安装人员ID
	"""
	install_man_id: String
	"""
	是否删除
	"""
	is_delete: Boolean!
	"""
	是否注册
	"""
	is_reg: Boolean
	"""
	是否支持拍照
	"""
	is_support_photo: Boolean!
	"""
	模拟鉴权码
	"""
	mock_auth_key: String
	"""
	生产日期
	"""
	produce_date: Timestamptz
	"""
	终端安装证明代理商
	"""
	prove_proxyrg_id: String
	"""
	省份ID
	"""
	province_id: String
	"""
	代理商ID
	"""
	proxyrg_id: String
	"""
	登记时间
	"""
	record_date: Timestamptz
	"""
	终端注册ID
	"""
	reg_id: String
	"""
	备注
	"""
	remarks: String
	"""
	解绑原因
	"""
	remove_reason: String
	"""
	SIM卡ID
	"""
	sim_id: SimCard
	"""
	运营商
	"""
	sprg_id: String
	"""
	终端ID
	"""
	terminal_id: String!
	"""
	终端类型ID
	"""
	type_id: TerminalType
	"""
	修改时间
	"""
	update_at: Timestamptz
	"""
	修改人
	"""
	update_by: String
	"""
	车辆ID
	"""
	vehicle_id: String
	"""
	版本号
	"""
	version_number: String
}
"""
aggregated selection of "terminal"
"""
type TerminalAggregate {
	aggregate: TerminalAggregateFields
	nodes: [Terminal!]!
}
"""
aggregate fields of "terminal"
"""
type TerminalAggregateFields {
	avg: TerminalAvgFields
	count(columns: [TerminalSelectColumn!], distinct: Boolean): Int
	max: TerminalMaxFields
	min: TerminalMinFields
	stddev: TerminalStddevFields
	stddev_pop: TerminalStddevPopFields
	stddev_samp: TerminalStddevSampFields
	sum: TerminalSumFields
	var_pop: TerminalVarPopFields
	var_samp: TerminalVarSampFields
	variance: TerminalVarianceFields
}
"""
order by aggregate values of table "terminal"
"""
input TerminalAggregateOrderBy {
	avg: TerminalAvgOrderBy
	count: OrderBy
	max: TerminalMaxOrderBy
	min: TerminalMinOrderBy
	stddev: TerminalStddevOrderBy
	stddev_pop: TerminalStddevPopOrderBy
	stddev_samp: TerminalStddevSampOrderBy
	sum: TerminalSumOrderBy
	var_pop: TerminalVarPopOrderBy
	var_samp: TerminalVarSampOrderBy
	variance: TerminalVarianceOrderBy
}
"""
input type for inserting array relation for remote table "terminal"
"""
input TerminalArrRelInsertInput {
	data: [TerminalInsertInput!]!
	on_conflict: TerminalOnConflict
}
"""
aggregate avg on columns
"""
type TerminalAvgFields {
	camera_num: Float
	id: Float
}
"""
order by avg() on columns of table "terminal"
"""
input TerminalAvgOrderBy {
	camera_num: OrderBy
	id: OrderBy
}
"""
Boolean expression to filter rows from the table "terminal". All fields are combined with a logical 'AND'.
"""
input TerminalBoolExp {
	_and: [TerminalBoolExp]
	_not: TerminalBoolExp
	_or: [TerminalBoolExp]
	adas_model: StringComparisonExp
	auth_key: StringComparisonExp
	camera_num: IntComparisonExp
	channel_no: StringComparisonExp
	city_id: StringComparisonExp
	create_at: TimestamptzComparisonExp
	create_by: StringComparisonExp
	delete_at: TimestamptzComparisonExp
	delete_by: StringComparisonExp
	dept_id: StringComparisonExp
	first_install_time: TimestamptzComparisonExp
	guarantee_date: TimestamptzComparisonExp
	id: BigintComparisonExp
	imei: StringComparisonExp
	install_man_id: StringComparisonExp
	is_delete: BooleanComparisonExp
	is_reg: BooleanComparisonExp
	is_support_photo: BooleanComparisonExp
	mock_auth_key: StringComparisonExp
	produce_date: TimestamptzComparisonExp
	prove_proxyrg_id: StringComparisonExp
	province_id: StringComparisonExp
	proxyrg_id: StringComparisonExp
	record_date: TimestamptzComparisonExp
	reg_id: StringComparisonExp
	remarks: StringComparisonExp
	remove_reason: StringComparisonExp
	sim_id: StringComparisonExp
	sprg_id: StringComparisonExp
	terminal_id: StringComparisonExp
	type_id: StringComparisonExp
	update_at: TimestamptzComparisonExp
	update_by: StringComparisonExp
	vehicle_id: StringComparisonExp
	version_number: StringComparisonExp
}
"""
unique or primary key constraints on table "terminal"
"""
enum TerminalConstraint {
	"""
	unique or primary key constraint
	"""
	terminal_pkey
}
"""
input type for incrementing integer column in table "terminal"
"""
input TerminalIncInput {
	camera_num: Int
	id: Bigint
}
"""
input type for inserting data into table "terminal"
"""
input TerminalInsertInput {
	adas_model: String
	auth_key: String
	camera_num: Int
	channel_no: String
	city_id: String
	create_at: Timestamptz
	create_by: String
	delete_at: Timestamptz
	delete_by: String
	dept_id: String
	first_install_time: Timestamptz
	guarantee_date: Timestamptz
	id: Bigint
	imei: String
	install_man_id: String
	is_delete: Boolean
	is_reg: Boolean
	is_support_photo: Boolean
	mock_auth_key: String
	produce_date: Timestamptz
	prove_proxyrg_id: String
	province_id: String
	proxyrg_id: String
	record_date: Timestamptz
	reg_id: String
	remarks: String
	remove_reason: String
	sim_id: String
	sprg_id: String
	terminal_id: String
	type_id: String
	update_at: Timestamptz
	update_by: String
	vehicle_id: String
	version_number: String
}
"""
aggregate max on columns
"""
type TerminalMaxFields {
	adas_model: String
	auth_key: String
	camera_num: Int
	channel_no: String
	city_id: String
	create_at: Timestamptz
	create_by: String
	delete_at: Timestamptz
	delete_by: String
	dept_id: String
	first_install_time: Timestamptz
	guarantee_date: Timestamptz
	id: Bigint
	imei: String
	install_man_id: String
	mock_auth_key: String
	produce_date: Timestamptz
	prove_proxyrg_id: String
	province_id: String
	proxyrg_id: String
	record_date: Timestamptz
	reg_id: String
	remarks: String
	remove_reason: String
	sim_id: String
	sprg_id: String
	terminal_id: String
	type_id: String
	update_at: Timestamptz
	update_by: String
	vehicle_id: String
	version_number: String
}
"""
order by max() on columns of table "terminal"
"""
input TerminalMaxOrderBy {
	adas_model: OrderBy
	auth_key: OrderBy
	camera_num: OrderBy
	channel_no: OrderBy
	city_id: OrderBy
	create_at: OrderBy
	create_by: OrderBy
	delete_at: OrderBy
	delete_by: OrderBy
	dept_id: OrderBy
	first_install_time: OrderBy
	guarantee_date: OrderBy
	id: OrderBy
	imei: OrderBy
	install_man_id: OrderBy
	mock_auth_key: OrderBy
	produce_date: OrderBy
	prove_proxyrg_id: OrderBy
	province_id: OrderBy
	proxyrg_id: OrderBy
	record_date: OrderBy
	reg_id: OrderBy
	remarks: OrderBy
	remove_reason: OrderBy
	sim_id: OrderBy
	sprg_id: OrderBy
	terminal_id: OrderBy
	type_id: OrderBy
	update_at: OrderBy
	update_by: OrderBy
	vehicle_id: OrderBy
	version_number: OrderBy
}
"""
aggregate min on columns
"""
type TerminalMinFields {
	adas_model: String
	auth_key: String
	camera_num: Int
	channel_no: String
	city_id: String
	create_at: Timestamptz
	create_by: String
	delete_at: Timestamptz
	delete_by: String
	dept_id: String
	first_install_time: Timestamptz
	guarantee_date: Timestamptz
	id: Bigint
	imei: String
	install_man_id: String
	mock_auth_key: String
	produce_date: Timestamptz
	prove_proxyrg_id: String
	province_id: String
	proxyrg_id: String
	record_date: Timestamptz
	reg_id: String
	remarks: String
	remove_reason: String
	sim_id: String
	sprg_id: String
	terminal_id: String
	type_id: String
	update_at: Timestamptz
	update_by: String
	vehicle_id: String
	version_number: String
}
"""
order by min() on columns of table "terminal"
"""
input TerminalMinOrderBy {
	adas_model: OrderBy
	auth_key: OrderBy
	camera_num: OrderBy
	channel_no: OrderBy
	city_id: OrderBy
	create_at: OrderBy
	create_by: OrderBy
	delete_at: OrderBy
	delete_by: OrderBy
	dept_id: OrderBy
	first_install_time: OrderBy
	guarantee_date: OrderBy
	id: OrderBy
	imei: OrderBy
	install_man_id: OrderBy
	mock_auth_key: OrderBy
	produce_date: OrderBy
	prove_proxyrg_id: OrderBy
	province_id: OrderBy
	proxyrg_id: OrderBy
	record_date: OrderBy
	reg_id: OrderBy
	remarks: OrderBy
	remove_reason: OrderBy
	sim_id: OrderBy
	sprg_id: OrderBy
	terminal_id: OrderBy
	type_id: OrderBy
	update_at: OrderBy
	update_by: OrderBy
	vehicle_id: OrderBy
	version_number: OrderBy
}
"""
response of any mutation on the table "terminal"
"""
type TerminalMutationResponse {
	"""
	number of affected rows by the mutation
	"""
	affected_rows: Int!
	"""
	data of the affected rows by the mutation
	"""
	returning: [Terminal!]!
}
"""
input type for inserting object relation for remote table "terminal"
"""
input TerminalObjRelInsertInput {
	data: TerminalInsertInput!
	on_conflict: TerminalOnConflict
}
"""
on conflict condition type for table "terminal"
"""
input TerminalOnConflict {
	constraint: TerminalConstraint!
	update_columns: [TerminalUpdateColumn!]!
	where: TerminalBoolExp
}
"""
ordering options when selecting data from "terminal"
"""
input TerminalOrderBy {
	adas_model: OrderBy
	auth_key: OrderBy
	camera_num: OrderBy
	channel_no: OrderBy
	city_id: OrderBy
	create_at: OrderBy
	create_by: OrderBy
	delete_at: OrderBy
	delete_by: OrderBy
	dept_id: OrderBy
	first_install_time: OrderBy
	guarantee_date: OrderBy
	id: OrderBy
	imei: OrderBy
	install_man_id: OrderBy
	is_delete: OrderBy
	is_reg: OrderBy
	is_support_photo: OrderBy
	mock_auth_key: OrderBy
	produce_date: OrderBy
	prove_proxyrg_id: OrderBy
	province_id: OrderBy
	proxyrg_id: OrderBy
	record_date: OrderBy
	reg_id: OrderBy
	remarks: OrderBy
	remove_reason: OrderBy
	sim_id: OrderBy
	sprg_id: OrderBy
	terminal_id: OrderBy
	type_id: OrderBy
	update_at: OrderBy
	update_by: OrderBy
	vehicle_id: OrderBy
	version_number: OrderBy
}
"""
primary key columns input for table: "terminal"
"""
input TerminalPkColumnsInput {
	"""
	ID
	"""
	id: Bigint!
}
"""
select columns of table "terminal"
"""
enum TerminalSelectColumn {
	"""
	column name
	"""
	adas_model
	"""
	column name
	"""
	auth_key
	"""
	column name
	"""
	camera_num
	"""
	column name
	"""
	channel_no
	"""
	column name
	"""
	city_id
	"""
	column name
	"""
	create_at
	"""
	column name
	"""
	create_by
	"""
	column name
	"""
	delete_at
	"""
	column name
	"""
	delete_by
	"""
	column name
	"""
	dept_id
	"""
	column name
	"""
	first_install_time
	"""
	column name
	"""
	guarantee_date
	"""
	column name
	"""
	id
	"""
	column name
	"""
	imei
	"""
	column name
	"""
	install_man_id
	"""
	column name
	"""
	is_delete
	"""
	column name
	"""
	is_reg
	"""
	column name
	"""
	is_support_photo
	"""
	column name
	"""
	mock_auth_key
	"""
	column name
	"""
	produce_date
	"""
	column name
	"""
	prove_proxyrg_id
	"""
	column name
	"""
	province_id
	"""
	column name
	"""
	proxyrg_id
	"""
	column name
	"""
	record_date
	"""
	column name
	"""
	reg_id
	"""
	column name
	"""
	remarks
	"""
	column name
	"""
	remove_reason
	"""
	column name
	"""
	sim_id
	"""
	column name
	"""
	sprg_id
	"""
	column name
	"""
	terminal_id
	"""
	column name
	"""
	type_id
	"""
	column name
	"""
	update_at
	"""
	column name
	"""
	update_by
	"""
	column name
	"""
	vehicle_id
	"""
	column name
	"""
	version_number
}
"""
input type for updating data in table "terminal"
"""
input TerminalSetInput {
	adas_model: String
	auth_key: String
	camera_num: Int
	channel_no: String
	city_id: String
	create_at: Timestamptz
	create_by: String
	delete_at: Timestamptz
	delete_by: String
	dept_id: String
	first_install_time: Timestamptz
	guarantee_date: Timestamptz
	id: Bigint
	imei: String
	install_man_id: String
	is_delete: Boolean
	is_reg: Boolean
	is_support_photo: Boolean
	mock_auth_key: String
	produce_date: Timestamptz
	prove_proxyrg_id: String
	province_id: String
	proxyrg_id: String
	record_date: Timestamptz
	reg_id: String
	remarks: String
	remove_reason: String
	sim_id: String
	sprg_id: String
	terminal_id: String
	type_id: String
	update_at: Timestamptz
	update_by: String
	vehicle_id: String
	version_number: String
}
"""
aggregate stddev on columns
"""
type TerminalStddevFields {
	camera_num: Float
	id: Float
}
"""
order by stddev() on columns of table "terminal"
"""
input TerminalStddevOrderBy {
	camera_num: OrderBy
	id: OrderBy
}
"""
aggregate stddev_pop on columns
"""
type TerminalStddevPopFields {
	camera_num: Float
	id: Float
}
"""
order by stddev_pop() on columns of table "terminal"
"""
input TerminalStddevPopOrderBy {
	camera_num: OrderBy
	id: OrderBy
}
"""
aggregate stddev_samp on columns
"""
type TerminalStddevSampFields {
	camera_num: Float
	id: Float
}
"""
order by stddev_samp() on columns of table "terminal"
"""
input TerminalStddevSampOrderBy {
	camera_num: OrderBy
	id: OrderBy
}
"""
aggregate sum on columns
"""
type TerminalSumFields {
	camera_num: Int
	id: Bigint
}
"""
order by sum() on columns of table "terminal"
"""
input TerminalSumOrderBy {
	camera_num: OrderBy
	id: OrderBy
}
"""
update columns of table "terminal"
"""
enum TerminalUpdateColumn {
	"""
	column name
	"""
	adas_model
	"""
	column name
	"""
	auth_key
	"""
	column name
	"""
	camera_num
	"""
	column name
	"""
	channel_no
	"""
	column name
	"""
	city_id
	"""
	column name
	"""
	create_at
	"""
	column name
	"""
	create_by
	"""
	column name
	"""
	delete_at
	"""
	column name
	"""
	delete_by
	"""
	column name
	"""
	dept_id
	"""
	column name
	"""
	first_install_time
	"""
	column name
	"""
	guarantee_date
	"""
	column name
	"""
	id
	"""
	column name
	"""
	imei
	"""
	column name
	"""
	install_man_id
	"""
	column name
	"""
	is_delete
	"""
	column name
	"""
	is_reg
	"""
	column name
	"""
	is_support_photo
	"""
	column name
	"""
	mock_auth_key
	"""
	column name
	"""
	produce_date
	"""
	column name
	"""
	prove_proxyrg_id
	"""
	column name
	"""
	province_id
	"""
	column name
	"""
	proxyrg_id
	"""
	column name
	"""
	record_date
	"""
	column name
	"""
	reg_id
	"""
	column name
	"""
	remarks
	"""
	column name
	"""
	remove_reason
	"""
	column name
	"""
	sim_id
	"""
	column name
	"""
	sprg_id
	"""
	column name
	"""
	terminal_id
	"""
	column name
	"""
	type_id
	"""
	column name
	"""
	update_at
	"""
	column name
	"""
	update_by
	"""
	column name
	"""
	vehicle_id
	"""
	column name
	"""
	version_number
}
"""
aggregate var_pop on columns
"""
type TerminalVarPopFields {
	camera_num: Float
	id: Float
}
"""
order by var_pop() on columns of table "terminal"
"""
input TerminalVarPopOrderBy {
	camera_num: OrderBy
	id: OrderBy
}
"""
aggregate var_samp on columns
"""
type TerminalVarSampFields {
	camera_num: Float
	id: Float
}
"""
order by var_samp() on columns of table "terminal"
"""
input TerminalVarSampOrderBy {
	camera_num: OrderBy
	id: OrderBy
}
"""
aggregate variance on columns
"""
type TerminalVarianceFields {
	camera_num: Float
	id: Float
}
"""
order by variance() on columns of table "terminal"
"""
input TerminalVarianceOrderBy {
	camera_num: OrderBy
	id: OrderBy
}
extend type Mutation {
	"""
	delete data from the table: "terminal"
	"""
	delete_terminal("""
	filter the rows which have to be deleted
	"""
	where: TerminalBoolExp!): TerminalMutationResponse
	"""
	delete single row from the table: "terminal"
	"""
	delete_terminal_by_pk("""
	ID
	"""
	id: Bigint!): Terminal
	"""
	insert data into the table: "terminal"
	"""
	insert_terminal("""
	the rows to be inserted
	"""
	objects: [TerminalInsertInput!]!, """
	on conflict condition
	"""
	on_conflict: TerminalOnConflict): TerminalMutationResponse
	"""
	insert a single row into the table: "terminal"
	"""
	insert_terminal_one("""
	the row to be inserted
	"""
	object: TerminalInsertInput!, """
	on conflict condition
	"""
	on_conflict: TerminalOnConflict): Terminal
	"""
	update data of the table: "terminal"
	"""
	update_terminal("""
	increments the integer columns with given value of the filtered values
	"""
	_inc: TerminalIncInput, """
	sets the columns of the filtered rows to the given values
	"""
	_set: TerminalSetInput, """
	filter the rows which have to be updated
	"""
	where: TerminalBoolExp!): TerminalMutationResponse
	"""
	update single row of the table: "terminal"
	"""
	update_terminal_by_pk("""
	increments the integer columns with given value of the filtered values
	"""
	_inc: TerminalIncInput, """
	sets the columns of the filtered rows to the given values
	"""
	_set: TerminalSetInput, pk_columns: TerminalPkColumnsInput!): Terminal
}
extend type Query {
	"""
	fetch data from the table: "terminal"
	"""
	terminal("""
	distinct select on columns
	"""
	distinct_on: [TerminalSelectColumn!], """
	limit the number of rows returned
	"""
	limit: Int, """
	skip the first n rows. Use only with order_by
	"""
	offset: Int, """
	sort the rows by one or more columns
	"""
	order_by: [TerminalOrderBy!], """
	filter the rows returned
	"""
	where: TerminalBoolExp): [Terminal!]!
	"""
	fetch aggregated fields from the table: "terminal"
	"""
	terminal_aggregate("""
	distinct select on columns
	"""
	distinct_on: [TerminalSelectColumn!], """
	limit the number of rows returned
	"""
	limit: Int, """
	skip the first n rows. Use only with order_by
	"""
	offset: Int, """
	sort the rows by one or more columns
	"""
	order_by: [TerminalOrderBy!], """
	filter the rows returned
	"""
	where: TerminalBoolExp): TerminalAggregate!
	"""
	fetch data from the table: "terminal" using primary key columns
	"""
	terminal_by_pk("""
	ID
	"""
	id: Bigint!): Terminal
}
