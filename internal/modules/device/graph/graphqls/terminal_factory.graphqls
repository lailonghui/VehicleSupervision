"""
终端工厂


columns and relationships of "terminal_factory"
"""
type TerminalFactory {
	"""
	厂家地址
	"""
	address: String
	"""
	联系人
	"""
	contact: String
	"""
	联系电话
	"""
	contact_phone: String
	"""
	创建时间
	"""
	create_at: Timestamptz
	"""
	创建人
	"""
	create_by: String
	"""
	删除时间
	"""
	delete_at: Timestamptz
	"""
	删除人
	"""
	delete_by: String
	"""
	工厂ID
	"""
	factory_id: String!
	"""
	厂家名称
	"""
	factory_name: String!
	"""
	ID
	"""
	id: Bigint!
	"""
	是否删除
	"""
	is_delete: Boolean!
	"""
	备注
	"""
	remark: String
	"""
	技术支持人
	"""
	tech_contact: String
	"""
	技术支持电话
	"""
	tech_contact_phone: String
	"""
	更新时间
	"""
	update_at: Timestamptz
	"""
	更新人
	"""
	update_by: String
}
"""
aggregated selection of "terminal_factory"
"""
type TerminalFactoryAggregate {
	aggregate: TerminalFactoryAggregateFields
	nodes: [TerminalFactory!]!
}
"""
aggregate fields of "terminal_factory"
"""
type TerminalFactoryAggregateFields {
	avg: TerminalFactoryAvgFields
	count(columns: [TerminalFactorySelectColumn!], distinct: Boolean): Int
	max: TerminalFactoryMaxFields
	min: TerminalFactoryMinFields
	stddev: TerminalFactoryStddevFields
	stddev_pop: TerminalFactoryStddevPopFields
	stddev_samp: TerminalFactoryStddevSampFields
	sum: TerminalFactorySumFields
	var_pop: TerminalFactoryVarPopFields
	var_samp: TerminalFactoryVarSampFields
	variance: TerminalFactoryVarianceFields
}
"""
order by aggregate values of table "terminal_factory"
"""
input TerminalFactoryAggregateOrderBy {
	avg: TerminalFactoryAvgOrderBy
	count: OrderBy
	max: TerminalFactoryMaxOrderBy
	min: TerminalFactoryMinOrderBy
	stddev: TerminalFactoryStddevOrderBy
	stddev_pop: TerminalFactoryStddevPopOrderBy
	stddev_samp: TerminalFactoryStddevSampOrderBy
	sum: TerminalFactorySumOrderBy
	var_pop: TerminalFactoryVarPopOrderBy
	var_samp: TerminalFactoryVarSampOrderBy
	variance: TerminalFactoryVarianceOrderBy
}
"""
input type for inserting array relation for remote table "terminal_factory"
"""
input TerminalFactoryArrRelInsertInput {
	data: [TerminalFactoryInsertInput!]!
	on_conflict: TerminalFactoryOnConflict
}
"""
aggregate avg on columns
"""
type TerminalFactoryAvgFields {
	id: Float
}
"""
order by avg() on columns of table "terminal_factory"
"""
input TerminalFactoryAvgOrderBy {
	id: OrderBy
}
"""
Boolean expression to filter rows from the table "terminal_factory". All fields are combined with a logical 'AND'.
"""
input TerminalFactoryBoolExp {
	_and: [TerminalFactoryBoolExp]
	_not: TerminalFactoryBoolExp
	_or: [TerminalFactoryBoolExp]
	address: StringComparisonExp
	contact: StringComparisonExp
	contact_phone: StringComparisonExp
	create_at: TimestamptzComparisonExp
	create_by: StringComparisonExp
	delete_at: TimestamptzComparisonExp
	delete_by: StringComparisonExp
	factory_id: StringComparisonExp
	factory_name: StringComparisonExp
	id: BigintComparisonExp
	is_delete: BooleanComparisonExp
	remark: StringComparisonExp
	tech_contact: StringComparisonExp
	tech_contact_phone: StringComparisonExp
	update_at: TimestamptzComparisonExp
	update_by: StringComparisonExp
}
"""
unique or primary key constraints on table "terminal_factory"
"""
enum TerminalFactoryConstraint {
	"""
	unique or primary key constraint
	"""
	terminal_factory_pkey
}
"""
input type for incrementing integer column in table "terminal_factory"
"""
input TerminalFactoryIncInput {
	id: Bigint
}
"""
input type for inserting data into table "terminal_factory"
"""
input TerminalFactoryInsertInput {
	address: String
	contact: String
	contact_phone: String
	create_at: Timestamptz
	create_by: String
	delete_at: Timestamptz
	delete_by: String
	factory_id: String
	factory_name: String
	id: Bigint
	is_delete: Boolean
	remark: String
	tech_contact: String
	tech_contact_phone: String
	update_at: Timestamptz
	update_by: String
}
"""
aggregate max on columns
"""
type TerminalFactoryMaxFields {
	address: String
	contact: String
	contact_phone: String
	create_at: Timestamptz
	create_by: String
	delete_at: Timestamptz
	delete_by: String
	factory_id: String
	factory_name: String
	id: Bigint
	remark: String
	tech_contact: String
	tech_contact_phone: String
	update_at: Timestamptz
	update_by: String
}
"""
order by max() on columns of table "terminal_factory"
"""
input TerminalFactoryMaxOrderBy {
	address: OrderBy
	contact: OrderBy
	contact_phone: OrderBy
	create_at: OrderBy
	create_by: OrderBy
	delete_at: OrderBy
	delete_by: OrderBy
	factory_id: OrderBy
	factory_name: OrderBy
	id: OrderBy
	remark: OrderBy
	tech_contact: OrderBy
	tech_contact_phone: OrderBy
	update_at: OrderBy
	update_by: OrderBy
}
"""
aggregate min on columns
"""
type TerminalFactoryMinFields {
	address: String
	contact: String
	contact_phone: String
	create_at: Timestamptz
	create_by: String
	delete_at: Timestamptz
	delete_by: String
	factory_id: String
	factory_name: String
	id: Bigint
	remark: String
	tech_contact: String
	tech_contact_phone: String
	update_at: Timestamptz
	update_by: String
}
"""
order by min() on columns of table "terminal_factory"
"""
input TerminalFactoryMinOrderBy {
	address: OrderBy
	contact: OrderBy
	contact_phone: OrderBy
	create_at: OrderBy
	create_by: OrderBy
	delete_at: OrderBy
	delete_by: OrderBy
	factory_id: OrderBy
	factory_name: OrderBy
	id: OrderBy
	remark: OrderBy
	tech_contact: OrderBy
	tech_contact_phone: OrderBy
	update_at: OrderBy
	update_by: OrderBy
}
"""
response of any mutation on the table "terminal_factory"
"""
type TerminalFactoryMutationResponse {
	"""
	number of affected rows by the mutation
	"""
	affected_rows: Int!
	"""
	data of the affected rows by the mutation
	"""
	returning: [TerminalFactory!]!
}
"""
input type for inserting object relation for remote table "terminal_factory"
"""
input TerminalFactoryObjRelInsertInput {
	data: TerminalFactoryInsertInput!
	on_conflict: TerminalFactoryOnConflict
}
"""
on conflict condition type for table "terminal_factory"
"""
input TerminalFactoryOnConflict {
	constraint: TerminalFactoryConstraint!
	update_columns: [TerminalFactoryUpdateColumn!]!
	where: TerminalFactoryBoolExp
}
"""
ordering options when selecting data from "terminal_factory"
"""
input TerminalFactoryOrderBy {
	address: OrderBy
	contact: OrderBy
	contact_phone: OrderBy
	create_at: OrderBy
	create_by: OrderBy
	delete_at: OrderBy
	delete_by: OrderBy
	factory_id: OrderBy
	factory_name: OrderBy
	id: OrderBy
	is_delete: OrderBy
	remark: OrderBy
	tech_contact: OrderBy
	tech_contact_phone: OrderBy
	update_at: OrderBy
	update_by: OrderBy
}
"""
primary key columns input for table: "terminal_factory"
"""
input TerminalFactoryPkColumnsInput {
	"""
	ID
	"""
	id: Bigint!
}
"""
select columns of table "terminal_factory"
"""
enum TerminalFactorySelectColumn {
	"""
	column name
	"""
	address
	"""
	column name
	"""
	contact
	"""
	column name
	"""
	contact_phone
	"""
	column name
	"""
	create_at
	"""
	column name
	"""
	create_by
	"""
	column name
	"""
	delete_at
	"""
	column name
	"""
	delete_by
	"""
	column name
	"""
	factory_id
	"""
	column name
	"""
	factory_name
	"""
	column name
	"""
	id
	"""
	column name
	"""
	is_delete
	"""
	column name
	"""
	remark
	"""
	column name
	"""
	tech_contact
	"""
	column name
	"""
	tech_contact_phone
	"""
	column name
	"""
	update_at
	"""
	column name
	"""
	update_by
}
"""
input type for updating data in table "terminal_factory"
"""
input TerminalFactorySetInput {
	address: String
	contact: String
	contact_phone: String
	create_at: Timestamptz
	create_by: String
	delete_at: Timestamptz
	delete_by: String
	factory_id: String
	factory_name: String
	id: Bigint
	is_delete: Boolean
	remark: String
	tech_contact: String
	tech_contact_phone: String
	update_at: Timestamptz
	update_by: String
}
"""
aggregate stddev on columns
"""
type TerminalFactoryStddevFields {
	id: Float
}
"""
order by stddev() on columns of table "terminal_factory"
"""
input TerminalFactoryStddevOrderBy {
	id: OrderBy
}
"""
aggregate stddev_pop on columns
"""
type TerminalFactoryStddevPopFields {
	id: Float
}
"""
order by stddev_pop() on columns of table "terminal_factory"
"""
input TerminalFactoryStddevPopOrderBy {
	id: OrderBy
}
"""
aggregate stddev_samp on columns
"""
type TerminalFactoryStddevSampFields {
	id: Float
}
"""
order by stddev_samp() on columns of table "terminal_factory"
"""
input TerminalFactoryStddevSampOrderBy {
	id: OrderBy
}
"""
aggregate sum on columns
"""
type TerminalFactorySumFields {
	id: Bigint
}
"""
order by sum() on columns of table "terminal_factory"
"""
input TerminalFactorySumOrderBy {
	id: OrderBy
}
"""
update columns of table "terminal_factory"
"""
enum TerminalFactoryUpdateColumn {
	"""
	column name
	"""
	address
	"""
	column name
	"""
	contact
	"""
	column name
	"""
	contact_phone
	"""
	column name
	"""
	create_at
	"""
	column name
	"""
	create_by
	"""
	column name
	"""
	delete_at
	"""
	column name
	"""
	delete_by
	"""
	column name
	"""
	factory_id
	"""
	column name
	"""
	factory_name
	"""
	column name
	"""
	id
	"""
	column name
	"""
	is_delete
	"""
	column name
	"""
	remark
	"""
	column name
	"""
	tech_contact
	"""
	column name
	"""
	tech_contact_phone
	"""
	column name
	"""
	update_at
	"""
	column name
	"""
	update_by
}
"""
aggregate var_pop on columns
"""
type TerminalFactoryVarPopFields {
	id: Float
}
"""
order by var_pop() on columns of table "terminal_factory"
"""
input TerminalFactoryVarPopOrderBy {
	id: OrderBy
}
"""
aggregate var_samp on columns
"""
type TerminalFactoryVarSampFields {
	id: Float
}
"""
order by var_samp() on columns of table "terminal_factory"
"""
input TerminalFactoryVarSampOrderBy {
	id: OrderBy
}
"""
aggregate variance on columns
"""
type TerminalFactoryVarianceFields {
	id: Float
}
"""
order by variance() on columns of table "terminal_factory"
"""
input TerminalFactoryVarianceOrderBy {
	id: OrderBy
}
extend type Mutation {
	"""
	delete data from the table: "terminal_factory"
	"""
	delete_terminal_factory("""
	filter the rows which have to be deleted
	"""
	where: TerminalFactoryBoolExp!): TerminalFactoryMutationResponse
	"""
	delete single row from the table: "terminal_factory"
	"""
	delete_terminal_factory_by_pk("""
	ID
	"""
	id: Bigint!): TerminalFactory
	"""
	insert data into the table: "terminal_factory"
	"""
	insert_terminal_factory("""
	the rows to be inserted
	"""
	objects: [TerminalFactoryInsertInput!]!, """
	on conflict condition
	"""
	on_conflict: TerminalFactoryOnConflict): TerminalFactoryMutationResponse
	"""
	insert a single row into the table: "terminal_factory"
	"""
	insert_terminal_factory_one("""
	the row to be inserted
	"""
	object: TerminalFactoryInsertInput!, """
	on conflict condition
	"""
	on_conflict: TerminalFactoryOnConflict): TerminalFactory
	"""
	update data of the table: "terminal_factory"
	"""
	update_terminal_factory("""
	increments the integer columns with given value of the filtered values
	"""
	_inc: TerminalFactoryIncInput, """
	sets the columns of the filtered rows to the given values
	"""
	_set: TerminalFactorySetInput, """
	filter the rows which have to be updated
	"""
	where: TerminalFactoryBoolExp!): TerminalFactoryMutationResponse
	"""
	update single row of the table: "terminal_factory"
	"""
	update_terminal_factory_by_pk("""
	increments the integer columns with given value of the filtered values
	"""
	_inc: TerminalFactoryIncInput, """
	sets the columns of the filtered rows to the given values
	"""
	_set: TerminalFactorySetInput, pk_columns: TerminalFactoryPkColumnsInput!): TerminalFactory
}
extend type Query {
	"""
	fetch data from the table: "terminal_factory"
	"""
	terminal_factory("""
	distinct select on columns
	"""
	distinct_on: [TerminalFactorySelectColumn!], """
	limit the number of rows returned
	"""
	limit: Int, """
	skip the first n rows. Use only with order_by
	"""
	offset: Int, """
	sort the rows by one or more columns
	"""
	order_by: [TerminalFactoryOrderBy!], """
	filter the rows returned
	"""
	where: TerminalFactoryBoolExp): [TerminalFactory!]!
	"""
	fetch aggregated fields from the table: "terminal_factory"
	"""
	terminal_factory_aggregate("""
	distinct select on columns
	"""
	distinct_on: [TerminalFactorySelectColumn!], """
	limit the number of rows returned
	"""
	limit: Int, """
	skip the first n rows. Use only with order_by
	"""
	offset: Int, """
	sort the rows by one or more columns
	"""
	order_by: [TerminalFactoryOrderBy!], """
	filter the rows returned
	"""
	where: TerminalFactoryBoolExp): TerminalFactoryAggregate!
	"""
	fetch data from the table: "terminal_factory" using primary key columns
	"""
	terminal_factory_by_pk("""
	ID
	"""
	id: Bigint!): TerminalFactory
}
