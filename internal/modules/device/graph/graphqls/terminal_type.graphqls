"""
终端类型


columns and relationships of "terminal_types"
"""
type TerminalType {
	"""
	创建时间
	"""
	create_at: Timestamptz!
	"""
	创建人
	"""
	create_by: String
	"""
	删除时间
	"""
	delete_at: Timestamptz
	"""
	删除人
	"""
	delete_by: String
	"""
	ID
	"""
	id: Bigint!
	"""
	是否删除
	"""
	is_delete: Boolean!
	"""
	终端类型
	"""
	protocol_name: String!
	"""
	备注
	"""
	remark: String
	"""
	终端类型ID
	"""
	type_id: String!
	"""
	修改时间
	"""
	update_at: Timestamptz
	"""
	修改人
	"""
	update_by: String
}
"""
aggregated selection of "terminal_types"
"""
type TerminalTypesAggregate {
	aggregate: TerminalTypesAggregateFields
	nodes: [TerminalType!]!
}
"""
aggregate fields of "terminal_types"
"""
type TerminalTypesAggregateFields {
	avg: TerminalTypesAvgFields
	count(columns: [TerminalTypesSelectColumn!], distinct: Boolean): Int
	max: TerminalTypesMaxFields
	min: TerminalTypesMinFields
	stddev: TerminalTypesStddevFields
	stddev_pop: TerminalTypesStddevPopFields
	stddev_samp: TerminalTypesStddevSampFields
	sum: TerminalTypesSumFields
	var_pop: TerminalTypesVarPopFields
	var_samp: TerminalTypesVarSampFields
	variance: TerminalTypesVarianceFields
}
"""
order by aggregate values of table "terminal_types"
"""
input TerminalTypesAggregateOrderBy {
	avg: TerminalTypesAvgOrderBy
	count: OrderBy
	max: TerminalTypesMaxOrderBy
	min: TerminalTypesMinOrderBy
	stddev: TerminalTypesStddevOrderBy
	stddev_pop: TerminalTypesStddevPopOrderBy
	stddev_samp: TerminalTypesStddevSampOrderBy
	sum: TerminalTypesSumOrderBy
	var_pop: TerminalTypesVarPopOrderBy
	var_samp: TerminalTypesVarSampOrderBy
	variance: TerminalTypesVarianceOrderBy
}
"""
input type for inserting array relation for remote table "terminal_types"
"""
input TerminalTypesArrRelInsertInput {
	data: [TerminalTypesInsertInput!]!
	on_conflict: TerminalTypesOnConflict
}
"""
aggregate avg on columns
"""
type TerminalTypesAvgFields {
	id: Float
}
"""
order by avg() on columns of table "terminal_types"
"""
input TerminalTypesAvgOrderBy {
	id: OrderBy
}
"""
Boolean expression to filter rows from the table "terminal_types". All fields are combined with a logical 'AND'.
"""
input TerminalTypesBoolExp {
	_and: [TerminalTypesBoolExp]
	_not: TerminalTypesBoolExp
	_or: [TerminalTypesBoolExp]
	create_at: TimestamptzComparisonExp
	create_by: StringComparisonExp
	delete_at: TimestamptzComparisonExp
	delete_by: StringComparisonExp
	id: BigintComparisonExp
	is_delete: BooleanComparisonExp
	protocol_name: StringComparisonExp
	remark: StringComparisonExp
	type_id: StringComparisonExp
	update_at: TimestamptzComparisonExp
	update_by: StringComparisonExp
}
"""
unique or primary key constraints on table "terminal_types"
"""
enum TerminalTypesConstraint {
	"""
	unique or primary key constraint
	"""
	terminal_type_pkey
}
"""
input type for incrementing integer column in table "terminal_types"
"""
input TerminalTypesIncInput {
	id: Bigint
}
"""
input type for inserting data into table "terminal_types"
"""
input TerminalTypesInsertInput {
	create_at: Timestamptz
	create_by: String
	delete_at: Timestamptz
	delete_by: String
	id: Bigint
	is_delete: Boolean
	protocol_name: String
	remark: String
	type_id: String
	update_at: Timestamptz
	update_by: String
}
"""
aggregate max on columns
"""
type TerminalTypesMaxFields {
	create_at: Timestamptz
	create_by: String
	delete_at: Timestamptz
	delete_by: String
	id: Bigint
	protocol_name: String
	remark: String
	type_id: String
	update_at: Timestamptz
	update_by: String
}
"""
order by max() on columns of table "terminal_types"
"""
input TerminalTypesMaxOrderBy {
	create_at: OrderBy
	create_by: OrderBy
	delete_at: OrderBy
	delete_by: OrderBy
	id: OrderBy
	protocol_name: OrderBy
	remark: OrderBy
	type_id: OrderBy
	update_at: OrderBy
	update_by: OrderBy
}
"""
aggregate min on columns
"""
type TerminalTypesMinFields {
	create_at: Timestamptz
	create_by: String
	delete_at: Timestamptz
	delete_by: String
	id: Bigint
	protocol_name: String
	remark: String
	type_id: String
	update_at: Timestamptz
	update_by: String
}
"""
order by min() on columns of table "terminal_types"
"""
input TerminalTypesMinOrderBy {
	create_at: OrderBy
	create_by: OrderBy
	delete_at: OrderBy
	delete_by: OrderBy
	id: OrderBy
	protocol_name: OrderBy
	remark: OrderBy
	type_id: OrderBy
	update_at: OrderBy
	update_by: OrderBy
}
"""
response of any mutation on the table "terminal_types"
"""
type TerminalTypesMutationResponse {
	"""
	number of affected rows by the mutation
	"""
	affected_rows: Int!
	"""
	data of the affected rows by the mutation
	"""
	returning: [TerminalType!]!
}
"""
input type for inserting object relation for remote table "terminal_types"
"""
input TerminalTypesObjRelInsertInput {
	data: TerminalTypesInsertInput!
	on_conflict: TerminalTypesOnConflict
}
"""
on conflict condition type for table "terminal_types"
"""
input TerminalTypesOnConflict {
	constraint: TerminalTypesConstraint!
	update_columns: [TerminalTypesUpdateColumn!]!
	where: TerminalTypesBoolExp
}
"""
ordering options when selecting data from "terminal_types"
"""
input TerminalTypesOrderBy {
	create_at: OrderBy
	create_by: OrderBy
	delete_at: OrderBy
	delete_by: OrderBy
	id: OrderBy
	is_delete: OrderBy
	protocol_name: OrderBy
	remark: OrderBy
	type_id: OrderBy
	update_at: OrderBy
	update_by: OrderBy
}
"""
primary key columns input for table: "terminal_types"
"""
input TerminalTypesPkColumnsInput {
	"""
	ID
	"""
	id: Bigint!
}
"""
select columns of table "terminal_types"
"""
enum TerminalTypesSelectColumn {
	"""
	column name
	"""
	create_at
	"""
	column name
	"""
	create_by
	"""
	column name
	"""
	delete_at
	"""
	column name
	"""
	delete_by
	"""
	column name
	"""
	id
	"""
	column name
	"""
	is_delete
	"""
	column name
	"""
	protocol_name
	"""
	column name
	"""
	remark
	"""
	column name
	"""
	type_id
	"""
	column name
	"""
	update_at
	"""
	column name
	"""
	update_by
}
"""
input type for updating data in table "terminal_types"
"""
input TerminalTypesSetInput {
	create_at: Timestamptz
	create_by: String
	delete_at: Timestamptz
	delete_by: String
	id: Bigint
	is_delete: Boolean
	protocol_name: String
	remark: String
	type_id: String
	update_at: Timestamptz
	update_by: String
}
"""
aggregate stddev on columns
"""
type TerminalTypesStddevFields {
	id: Float
}
"""
order by stddev() on columns of table "terminal_types"
"""
input TerminalTypesStddevOrderBy {
	id: OrderBy
}
"""
aggregate stddev_pop on columns
"""
type TerminalTypesStddevPopFields {
	id: Float
}
"""
order by stddev_pop() on columns of table "terminal_types"
"""
input TerminalTypesStddevPopOrderBy {
	id: OrderBy
}
"""
aggregate stddev_samp on columns
"""
type TerminalTypesStddevSampFields {
	id: Float
}
"""
order by stddev_samp() on columns of table "terminal_types"
"""
input TerminalTypesStddevSampOrderBy {
	id: OrderBy
}
"""
aggregate sum on columns
"""
type TerminalTypesSumFields {
	id: Bigint
}
"""
order by sum() on columns of table "terminal_types"
"""
input TerminalTypesSumOrderBy {
	id: OrderBy
}
"""
update columns of table "terminal_types"
"""
enum TerminalTypesUpdateColumn {
	"""
	column name
	"""
	create_at
	"""
	column name
	"""
	create_by
	"""
	column name
	"""
	delete_at
	"""
	column name
	"""
	delete_by
	"""
	column name
	"""
	id
	"""
	column name
	"""
	is_delete
	"""
	column name
	"""
	protocol_name
	"""
	column name
	"""
	remark
	"""
	column name
	"""
	type_id
	"""
	column name
	"""
	update_at
	"""
	column name
	"""
	update_by
}
"""
aggregate var_pop on columns
"""
type TerminalTypesVarPopFields {
	id: Float
}
"""
order by var_pop() on columns of table "terminal_types"
"""
input TerminalTypesVarPopOrderBy {
	id: OrderBy
}
"""
aggregate var_samp on columns
"""
type TerminalTypesVarSampFields {
	id: Float
}
"""
order by var_samp() on columns of table "terminal_types"
"""
input TerminalTypesVarSampOrderBy {
	id: OrderBy
}
"""
aggregate variance on columns
"""
type TerminalTypesVarianceFields {
	id: Float
}
"""
order by variance() on columns of table "terminal_types"
"""
input TerminalTypesVarianceOrderBy {
	id: OrderBy
}
extend type Mutation {
	"""
	delete data from the table: "terminal_types"
	"""
	delete_terminal_types("""
	filter the rows which have to be deleted
	"""
	where: TerminalTypesBoolExp!): TerminalTypesMutationResponse
	"""
	delete single row from the table: "terminal_types"
	"""
	delete_terminal_types_by_pk("""
	ID
	"""
	id: Bigint!): TerminalType
	"""
	insert data into the table: "terminal_types"
	"""
	insert_terminal_types("""
	the rows to be inserted
	"""
	objects: [TerminalTypesInsertInput!]!, """
	on conflict condition
	"""
	on_conflict: TerminalTypesOnConflict): TerminalTypesMutationResponse
	"""
	insert a single row into the table: "terminal_types"
	"""
	insert_terminal_types_one("""
	the row to be inserted
	"""
	object: TerminalTypesInsertInput!, """
	on conflict condition
	"""
	on_conflict: TerminalTypesOnConflict): TerminalType
	"""
	update data of the table: "terminal_types"
	"""
	update_terminal_types("""
	increments the integer columns with given value of the filtered values
	"""
	_inc: TerminalTypesIncInput, """
	sets the columns of the filtered rows to the given values
	"""
	_set: TerminalTypesSetInput, """
	filter the rows which have to be updated
	"""
	where: TerminalTypesBoolExp!): TerminalTypesMutationResponse
	"""
	update single row of the table: "terminal_types"
	"""
	update_terminal_types_by_pk("""
	increments the integer columns with given value of the filtered values
	"""
	_inc: TerminalTypesIncInput, """
	sets the columns of the filtered rows to the given values
	"""
	_set: TerminalTypesSetInput, pk_columns: TerminalTypesPkColumnsInput!): TerminalType
}
extend type Query {
	"""
	fetch data from the table: "terminal_types"
	"""
	terminal_types("""
	distinct select on columns
	"""
	distinct_on: [TerminalTypesSelectColumn!], """
	limit the number of rows returned
	"""
	limit: Int, """
	skip the first n rows. Use only with order_by
	"""
	offset: Int, """
	sort the rows by one or more columns
	"""
	order_by: [TerminalTypesOrderBy!], """
	filter the rows returned
	"""
	where: TerminalTypesBoolExp): [TerminalType!]!
	"""
	fetch aggregated fields from the table: "terminal_types"
	"""
	terminal_types_aggregate("""
	distinct select on columns
	"""
	distinct_on: [TerminalTypesSelectColumn!], """
	limit the number of rows returned
	"""
	limit: Int, """
	skip the first n rows. Use only with order_by
	"""
	offset: Int, """
	sort the rows by one or more columns
	"""
	order_by: [TerminalTypesOrderBy!], """
	filter the rows returned
	"""
	where: TerminalTypesBoolExp): TerminalTypesAggregate!
	"""
	fetch data from the table: "terminal_types" using primary key columns
	"""
	terminal_types_by_pk("""
	ID
	"""
	id: Bigint!): TerminalType
}
