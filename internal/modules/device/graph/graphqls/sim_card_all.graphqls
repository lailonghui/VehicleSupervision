"""
sim卡管理（外部来源）
"""
type SimCardAll {
	"""
	ID
	"""
	id: Bigint!
	"""
	SIM卡管理（外部来源）ID
	"""
	simcard_all_id: String!
	"""
	车牌号码
	"""
	plate_number: String
	"""
	车牌号码
	"""
	plate_color: String
	"""
	所在部门ID
	"""
	dept_id: String
	"""
	代理商ID
	"""
	proxyrg_id: String
	"""
	所在企业ID
	"""
	enterprise_id: String
	"""
	sim卡号
	"""
	sim_number: String
	"""
	服务费到期时间
	"""
	service_end_time: Timestamptz
	"""
	终端ID
	"""
	terminal_id: String
	"""
	应用于何种系统
	"""
	system_name: String
	"""
	sim卡类型
	"""
	sim_type: Int
	"""
	用户ID
	"""
	user_id: String
	"""
	运营商类型
	"""
	mobile_type: Int
	"""
	解绑原因
	"""
	update_cause: String
	"""
	创建时间
	"""
	create_at: Timestamptz!
	"""
	创建人
	"""
	create_by: String
	"""
	更新时间
	"""
	update_at: Timestamptz
	"""
	更新人
	"""
	update_by: String
	"""
	删除时间
	"""
	delete_at: Timestamptz
	"""
	删除人
	"""
	delete_by: String
	"""
	是否删除
	"""
	is_delete: Boolean!
	"""
	备注
	"""
	remark: String
}
"""
aggregated selection of "sim_card_all"
"""
type SimCardAllAggregate {
	aggregate: SimCardAllAggregateFields
}
"""
aggregate fields of "sim_card_all"
"""
type SimCardAllAggregateFields {
	avg: SimCardAllAvgFields
	count: Int
	max: SimCardAllMaxFields
	min: SimCardAllMinFields
	stddev: SimCardAllStddevFields
	stddev_pop: SimCardAllStddevPopFields
	stddev_samp: SimCardAllStddevSampFields
	sum: SimCardAllSumFields
	var_pop: SimCardAllVarPopFields
	var_samp: SimCardAllVarSampFields
	variance: SimCardAllVarianceFields
}
"""
aggregate avg on columns of table "sim_card_all"
"""
type SimCardAllAvgFields {
	id: Bigint
	sim_type: Int
	mobile_type: Int
}
"""
aggregate max on columns of table "sim_card_all"
"""
type SimCardAllMaxFields {
	id: Bigint
	simcard_all_id: String
	plate_number: String
	plate_color: String
	dept_id: String
	proxyrg_id: String
	enterprise_id: String
	sim_number: String
	service_end_time: Timestamptz
	terminal_id: String
	system_name: String
	sim_type: Int
	user_id: String
	mobile_type: Int
	update_cause: String
	create_at: Timestamptz
	create_by: String
	update_at: Timestamptz
	update_by: String
	delete_at: Timestamptz
	delete_by: String
	is_delete: Boolean
	remark: String
}
"""
aggregate min on columns of table "sim_card_all"
"""
type SimCardAllMinFields {
	id: Bigint
	simcard_all_id: String
	plate_number: String
	plate_color: String
	dept_id: String
	proxyrg_id: String
	enterprise_id: String
	sim_number: String
	service_end_time: Timestamptz
	terminal_id: String
	system_name: String
	sim_type: Int
	user_id: String
	mobile_type: Int
	update_cause: String
	create_at: Timestamptz
	create_by: String
	update_at: Timestamptz
	update_by: String
	delete_at: Timestamptz
	delete_by: String
	is_delete: Boolean
	remark: String
}
"""
aggregate stddev on columns of table "sim_card_all"
"""
type SimCardAllStddevFields {
	id: Bigint
	sim_type: Int
	mobile_type: Int
}
"""
aggregate stddev_pop on columns of table "sim_card_all"
"""
type SimCardAllStddevPopFields {
	id: Bigint
	sim_type: Int
	mobile_type: Int
}
"""
aggregate stddev_samp on columns of table "sim_card_all"
"""
type SimCardAllStddevSampFields {
	id: Bigint
	sim_type: Int
	mobile_type: Int
}
"""
aggregate sum on columns of table "sim_card_all"
"""
type SimCardAllSumFields {
	id: Bigint
	sim_type: Int
	mobile_type: Int
}
"""
aggregate var_pop on columns of table "sim_card_all"
"""
type SimCardAllVarPopFields {
	id: Bigint
	sim_type: Int
	mobile_type: Int
}
"""
aggregate var_samp on columns of table "sim_card_all"
"""
type SimCardAllVarSampFields {
	id: Bigint
	sim_type: Int
	mobile_type: Int
}
"""
aggregate variance on columns of table "sim_card_all"
"""
type SimCardAllVarianceFields {
	id: Bigint
	sim_type: Int
	mobile_type: Int
}
"""
response of any mutation on the table "sim_card_all"
"""
type SimCardAllMutationResponse {
	affected_rows: Int!
	returning: [SimCardAll!]!
}
"""
ordering options when selecting data from "sim_card_all"
"""
input SimCardAllOrderBy {
	id: OrderBy
	simcard_all_id: OrderBy
	plate_number: OrderBy
	plate_color: OrderBy
	dept_id: OrderBy
	proxyrg_id: OrderBy
	enterprise_id: OrderBy
	sim_number: OrderBy
	service_end_time: OrderBy
	terminal_id: OrderBy
	system_name: OrderBy
	sim_type: OrderBy
	user_id: OrderBy
	mobile_type: OrderBy
	update_cause: OrderBy
	create_at: OrderBy
	create_by: OrderBy
	update_at: OrderBy
	update_by: OrderBy
	delete_at: OrderBy
	delete_by: OrderBy
	is_delete: OrderBy
	remark: OrderBy
}
"""
Boolean expression to filter rows from the table "blacklist_operation_record". All fields are combined with a logical 'sim_card_all'.
"""
input SimCardAllBoolExp {
	_and: [SimCardAllBoolExp]
	_not: SimCardAllBoolExp
	_or: [SimCardAllBoolExp]
	id: BigintComparisonExp
	simcard_all_id: StringComparisonExp
	plate_number: StringComparisonExp
	plate_color: StringComparisonExp
	dept_id: StringComparisonExp
	proxyrg_id: StringComparisonExp
	enterprise_id: StringComparisonExp
	sim_number: StringComparisonExp
	service_end_time: TimestamptzComparisonExp
	terminal_id: StringComparisonExp
	system_name: StringComparisonExp
	sim_type: IntComparisonExp
	user_id: StringComparisonExp
	mobile_type: IntComparisonExp
	update_cause: StringComparisonExp
	create_at: TimestamptzComparisonExp
	create_by: StringComparisonExp
	update_at: TimestamptzComparisonExp
	update_by: StringComparisonExp
	delete_at: TimestamptzComparisonExp
	delete_by: StringComparisonExp
	is_delete: BooleanComparisonExp
	remark: StringComparisonExp
}
"""
input type for inserting data into table "sim_card_all"
"""
input SimCardAllInsertInput {
	simcard_all_id: String!
	plate_number: String
	plate_color: String
	dept_id: String
	proxyrg_id: String
	enterprise_id: String
	sim_number: String
	service_end_time: Timestamptz
	terminal_id: String
	system_name: String
	sim_type: Int
	user_id: String
	mobile_type: Int
	update_cause: String
	create_at: Timestamptz!
	create_by: String
	update_at: Timestamptz
	update_by: String
	delete_at: Timestamptz
	delete_by: String
	is_delete: Boolean!
	remark: String
}
"""
input type for incrementing integer column in table "sim_card_all"
"""
input SimCardAllIncInput {
	id: Bigint
	sim_type: Int
	mobile_type: Int
}
"""
input type for updating data in table "sim_card_all"
"""
input SimCardAllSetInput {
	id: Bigint
	simcard_all_id: String
	plate_number: String
	plate_color: String
	dept_id: String
	proxyrg_id: String
	enterprise_id: String
	sim_number: String
	service_end_time: Timestamptz
	terminal_id: String
	system_name: String
	sim_type: Int
	user_id: String
	mobile_type: Int
	update_cause: String
	create_at: Timestamptz
	create_by: String
	update_at: Timestamptz
	update_by: String
	delete_at: Timestamptz
	delete_by: String
	is_delete: Boolean
	remark: String
}
"""
可选select
"""
enum SimCardAllSelectColumn {
	"""
	ID
	"""
	id
	"""
	SIM卡管理（外部来源）ID
	"""
	simcard_all_id
	"""
	车牌号码
	"""
	plate_number
	"""
	车牌号码
	"""
	plate_color
	"""
	所在部门ID
	"""
	dept_id
	"""
	代理商ID
	"""
	proxyrg_id
	"""
	所在企业ID
	"""
	enterprise_id
	"""
	sim卡号
	"""
	sim_number
	"""
	服务费到期时间
	"""
	service_end_time
	"""
	终端ID
	"""
	terminal_id
	"""
	应用于何种系统
	"""
	system_name
	"""
	sim卡类型
	"""
	sim_type
	"""
	用户ID
	"""
	user_id
	"""
	运营商类型
	"""
	mobile_type
	"""
	解绑原因
	"""
	update_cause
	"""
	创建时间
	"""
	create_at
	"""
	创建人
	"""
	create_by
	"""
	更新时间
	"""
	update_at
	"""
	更新人
	"""
	update_by
	"""
	删除时间
	"""
	delete_at
	"""
	删除人
	"""
	delete_by
	"""
	是否删除
	"""
	is_delete
	"""
	备注
	"""
	remark
}
extend type Query {
	"""
	列表查询
	"""
	sim_card_all(distinct_on: [SimCardAllSelectColumn!], limit: Int, offset: Int, order_by: [SimCardAllOrderBy!], where: SimCardAllBoolExp): [SimCardAll!]!
	"""
	聚合查询
	"""
	sim_card_all_aggregate(distinct_on: [SimCardAllSelectColumn!], limit: Int, offset: Int, order_by: [SimCardAllOrderBy!], where: SimCardAllBoolExp): SimCardAllAggregate!
	"""
	主键查询
	"""
	sim_card_all_by_pk(id: Bigint!): SimCardAll!
}
extend type Mutation {
	"""
	删除记录
	"""
	delete_sim_card_all(where: SimCardAllBoolExp!): SimCardAllMutationResponse
	"""
	根据主键删除记录
	"""
	delete_sim_card_all_by_pk(id: Bigint!): SimCardAll
	"""
	插入
	"""
	insert_sim_card_all(objects: [SimCardAllInsertInput!]!): SimCardAllMutationResponse
	"""
	插入一条记录
	"""
	insert_sim_card_all_one(objects: SimCardAllInsertInput!): SimCardAll
	"""
	更新
	"""
	update_sim_card_all(_inc: SimCardAllIncInput, _set: SimCardAllSetInput, where: SimCardAllBoolExp!): SimCardAllMutationResponse
	"""
	根据主键更新
	"""
	update_sim_card_all_by_pk(_inc: SimCardAllIncInput, _set: SimCardAllSetInput, id: Bigint!): SimCardAll
}
