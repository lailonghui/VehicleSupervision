// Code generated by github.com/99designs/gqlgen, DO NOT EDIT.

package model

import (
	model1 "VehicleSupervision/internal/modules/muck_truck_recommend_catalog/model"
	"VehicleSupervision/pkg/graphql/model"
	"fmt"
	"io"
	"strconv"
	"time"
)

// aggregated selection of "muck_truck_purchase_intention"
type MuckTruckPurchaseIntentionAggregate struct {
	Aggregate *MuckTruckPurchaseIntentionAggregateFields `json:"aggregate"`
}

// aggregate fields of "muck_truck_purchase_intention"
type MuckTruckPurchaseIntentionAggregateFields struct {
	Avg        *MuckTruckPurchaseIntentionAvgFields        `json:"avg"`
	Count      *int                                        `json:"count"`
	Max        *MuckTruckPurchaseIntentionMaxFields        `json:"max"`
	Min        *MuckTruckPurchaseIntentionMinFields        `json:"min"`
	Stddev     *MuckTruckPurchaseIntentionStddevFields     `json:"stddev"`
	StddevPop  *MuckTruckPurchaseIntentionStddevPopFields  `json:"stddev_pop"`
	StddevSamp *MuckTruckPurchaseIntentionStddevSampFields `json:"stddev_samp"`
	Sum        *MuckTruckPurchaseIntentionSumFields        `json:"sum"`
	VarPop     *MuckTruckPurchaseIntentionVarPopFields     `json:"var_pop"`
	VarSamp    *MuckTruckPurchaseIntentionVarSampFields    `json:"var_samp"`
	Variance   *MuckTruckPurchaseIntentionVarianceFields   `json:"variance"`
}

// aggregate avg on columns of table "muck_truck_purchase_intention"
type MuckTruckPurchaseIntentionAvgFields struct {
	ID              *int64 `json:"id"`
	VehiclePurchase *int   `json:"vehicle_purchase"`
}

// Boolean expression to filter rows from the table "blacklist_operation_record". All fields are combined with a logical 'muck_truck_purchase_intention'.
type MuckTruckPurchaseIntentionBoolExp struct {
	And                          []*MuckTruckPurchaseIntentionBoolExp `json:"_and"`
	Not                          *MuckTruckPurchaseIntentionBoolExp   `json:"_not"`
	Or                           []*MuckTruckPurchaseIntentionBoolExp `json:"_or"`
	ID                           *model.BigintComparisonExp           `json:"id"`
	MuckTruckPurchaseIntentionID *model.StringComparisonExp           `json:"muck_truck_purchase_intention_id"`
	Supplier                     *model.StringComparisonExp           `json:"supplier"`
	CustomerName                 *model.StringComparisonExp           `json:"customer_name"`
	CustomerPhone                *model.StringComparisonExp           `json:"customer_phone"`
	OwnerEnterprise              *model.StringComparisonExp           `json:"owner_enterprise"`
	ProvinceID                   *model.StringComparisonExp           `json:"province_id"`
	CityID                       *model.StringComparisonExp           `json:"city_id"`
	DistrictID                   *model.StringComparisonExp           `json:"district_id"`
	CapacigyApplication          *model.StringComparisonExp           `json:"capacigy_application"`
	BrandModel                   *model.StringComparisonExp           `json:"brand_model"`
	VehiclePurchase              *model.IntComparisonExp              `json:"vehicle_purchase"`
	Code                         *model.StringComparisonExp           `json:"code"`
	RegistrationTime             *model.TimestamptzComparisonExp      `json:"registration_time"`
	RegistrationUser             *model.StringComparisonExp           `json:"registration_user"`
	Review                       *model.StringComparisonExp           `json:"review"`
	Remarks                      *model.StringComparisonExp           `json:"remarks"`
	IsDeleted                    *model.BooleanComparisonExp          `json:"is_deleted"`
	CreatedAt                    *model.TimestamptzComparisonExp      `json:"created_at"`
	CreatedBy                    *model.StringComparisonExp           `json:"created_by"`
	UpdatedAt                    *model.TimestamptzComparisonExp      `json:"updated_at"`
	UpdatedBy                    *model.StringComparisonExp           `json:"updated_by"`
	DeletedAt                    *model.TimestamptzComparisonExp      `json:"deleted_at"`
	DeletedBy                    *model.StringComparisonExp           `json:"deleted_by"`
}

// input type for incrementing integer column in table "muck_truck_purchase_intention"
type MuckTruckPurchaseIntentionIncInput struct {
	ID              *int64 `json:"id"`
	VehiclePurchase *int   `json:"vehicle_purchase"`
}

// input type for inserting data into table "muck_truck_purchase_intention"
type MuckTruckPurchaseIntentionInsertInput struct {
	MuckTruckPurchaseIntentionID string     `json:"muck_truck_purchase_intention_id"`
	Supplier                     *string    `json:"supplier"`
	CustomerName                 *string    `json:"customer_name"`
	CustomerPhone                *string    `json:"customer_phone"`
	OwnerEnterprise              *string    `json:"owner_enterprise"`
	ProvinceID                   *string    `json:"province_id"`
	CityID                       *string    `json:"city_id"`
	DistrictID                   *string    `json:"district_id"`
	CapacigyApplication          *string    `json:"capacigy_application"`
	BrandModel                   *string    `json:"brand_model"`
	VehiclePurchase              *int       `json:"vehicle_purchase"`
	Code                         *string    `json:"code"`
	RegistrationTime             *time.Time `json:"registration_time"`
	RegistrationUser             *string    `json:"registration_user"`
	Review                       *string    `json:"review"`
	Remarks                      *string    `json:"remarks"`
	IsDeleted                    *bool      `json:"is_deleted"`
	CreatedAt                    time.Time  `json:"created_at"`
	CreatedBy                    string     `json:"created_by"`
	UpdatedAt                    *time.Time `json:"updated_at"`
	UpdatedBy                    *string    `json:"updated_by"`
	DeletedAt                    *time.Time `json:"deleted_at"`
	DeletedBy                    *string    `json:"deleted_by"`
}

// aggregate max on columns of table "muck_truck_purchase_intention"
type MuckTruckPurchaseIntentionMaxFields struct {
	ID                           *int64     `json:"id"`
	MuckTruckPurchaseIntentionID *string    `json:"muck_truck_purchase_intention_id"`
	Supplier                     *string    `json:"supplier"`
	CustomerName                 *string    `json:"customer_name"`
	CustomerPhone                *string    `json:"customer_phone"`
	OwnerEnterprise              *string    `json:"owner_enterprise"`
	ProvinceID                   *string    `json:"province_id"`
	CityID                       *string    `json:"city_id"`
	DistrictID                   *string    `json:"district_id"`
	CapacigyApplication          *string    `json:"capacigy_application"`
	BrandModel                   *string    `json:"brand_model"`
	VehiclePurchase              *int       `json:"vehicle_purchase"`
	Code                         *string    `json:"code"`
	RegistrationTime             *time.Time `json:"registration_time"`
	RegistrationUser             *string    `json:"registration_user"`
	Review                       *string    `json:"review"`
	Remarks                      *string    `json:"remarks"`
	IsDeleted                    *bool      `json:"is_deleted"`
	CreatedAt                    *time.Time `json:"created_at"`
	CreatedBy                    *string    `json:"created_by"`
	UpdatedAt                    *time.Time `json:"updated_at"`
	UpdatedBy                    *string    `json:"updated_by"`
	DeletedAt                    *time.Time `json:"deleted_at"`
	DeletedBy                    *string    `json:"deleted_by"`
}

// aggregate min on columns of table "muck_truck_purchase_intention"
type MuckTruckPurchaseIntentionMinFields struct {
	ID                           *int64     `json:"id"`
	MuckTruckPurchaseIntentionID *string    `json:"muck_truck_purchase_intention_id"`
	Supplier                     *string    `json:"supplier"`
	CustomerName                 *string    `json:"customer_name"`
	CustomerPhone                *string    `json:"customer_phone"`
	OwnerEnterprise              *string    `json:"owner_enterprise"`
	ProvinceID                   *string    `json:"province_id"`
	CityID                       *string    `json:"city_id"`
	DistrictID                   *string    `json:"district_id"`
	CapacigyApplication          *string    `json:"capacigy_application"`
	BrandModel                   *string    `json:"brand_model"`
	VehiclePurchase              *int       `json:"vehicle_purchase"`
	Code                         *string    `json:"code"`
	RegistrationTime             *time.Time `json:"registration_time"`
	RegistrationUser             *string    `json:"registration_user"`
	Review                       *string    `json:"review"`
	Remarks                      *string    `json:"remarks"`
	IsDeleted                    *bool      `json:"is_deleted"`
	CreatedAt                    *time.Time `json:"created_at"`
	CreatedBy                    *string    `json:"created_by"`
	UpdatedAt                    *time.Time `json:"updated_at"`
	UpdatedBy                    *string    `json:"updated_by"`
	DeletedAt                    *time.Time `json:"deleted_at"`
	DeletedBy                    *string    `json:"deleted_by"`
}

// response of any mutation on the table "muck_truck_purchase_intention"
type MuckTruckPurchaseIntentionMutationResponse struct {
	AffectedRows int                                  `json:"affected_rows"`
	Returning    []*model1.MuckTruckPurchaseIntention `json:"returning"`
}

// ordering options when selecting data from "muck_truck_purchase_intention"
type MuckTruckPurchaseIntentionOrderBy struct {
	ID                           *model.OrderBy `json:"id"`
	MuckTruckPurchaseIntentionID *model.OrderBy `json:"muck_truck_purchase_intention_id"`
	Supplier                     *model.OrderBy `json:"supplier"`
	CustomerName                 *model.OrderBy `json:"customer_name"`
	CustomerPhone                *model.OrderBy `json:"customer_phone"`
	OwnerEnterprise              *model.OrderBy `json:"owner_enterprise"`
	ProvinceID                   *model.OrderBy `json:"province_id"`
	CityID                       *model.OrderBy `json:"city_id"`
	DistrictID                   *model.OrderBy `json:"district_id"`
	CapacigyApplication          *model.OrderBy `json:"capacigy_application"`
	BrandModel                   *model.OrderBy `json:"brand_model"`
	VehiclePurchase              *model.OrderBy `json:"vehicle_purchase"`
	Code                         *model.OrderBy `json:"code"`
	RegistrationTime             *model.OrderBy `json:"registration_time"`
	RegistrationUser             *model.OrderBy `json:"registration_user"`
	Review                       *model.OrderBy `json:"review"`
	Remarks                      *model.OrderBy `json:"remarks"`
	IsDeleted                    *model.OrderBy `json:"is_deleted"`
	CreatedAt                    *model.OrderBy `json:"created_at"`
	CreatedBy                    *model.OrderBy `json:"created_by"`
	UpdatedAt                    *model.OrderBy `json:"updated_at"`
	UpdatedBy                    *model.OrderBy `json:"updated_by"`
	DeletedAt                    *model.OrderBy `json:"deleted_at"`
	DeletedBy                    *model.OrderBy `json:"deleted_by"`
}

// input type for updating data in table "muck_truck_purchase_intention"
type MuckTruckPurchaseIntentionSetInput struct {
	ID                           *int64     `json:"id"`
	MuckTruckPurchaseIntentionID *string    `json:"muck_truck_purchase_intention_id"`
	Supplier                     *string    `json:"supplier"`
	CustomerName                 *string    `json:"customer_name"`
	CustomerPhone                *string    `json:"customer_phone"`
	OwnerEnterprise              *string    `json:"owner_enterprise"`
	ProvinceID                   *string    `json:"province_id"`
	CityID                       *string    `json:"city_id"`
	DistrictID                   *string    `json:"district_id"`
	CapacigyApplication          *string    `json:"capacigy_application"`
	BrandModel                   *string    `json:"brand_model"`
	VehiclePurchase              *int       `json:"vehicle_purchase"`
	Code                         *string    `json:"code"`
	RegistrationTime             *time.Time `json:"registration_time"`
	RegistrationUser             *string    `json:"registration_user"`
	Review                       *string    `json:"review"`
	Remarks                      *string    `json:"remarks"`
	IsDeleted                    *bool      `json:"is_deleted"`
	CreatedAt                    *time.Time `json:"created_at"`
	CreatedBy                    *string    `json:"created_by"`
	UpdatedAt                    *time.Time `json:"updated_at"`
	UpdatedBy                    *string    `json:"updated_by"`
	DeletedAt                    *time.Time `json:"deleted_at"`
	DeletedBy                    *string    `json:"deleted_by"`
}

// aggregate stddev on columns of table "muck_truck_purchase_intention"
type MuckTruckPurchaseIntentionStddevFields struct {
	ID              *int64 `json:"id"`
	VehiclePurchase *int   `json:"vehicle_purchase"`
}

// aggregate stddev_pop on columns of table "muck_truck_purchase_intention"
type MuckTruckPurchaseIntentionStddevPopFields struct {
	ID              *int64 `json:"id"`
	VehiclePurchase *int   `json:"vehicle_purchase"`
}

// aggregate stddev_samp on columns of table "muck_truck_purchase_intention"
type MuckTruckPurchaseIntentionStddevSampFields struct {
	ID              *int64 `json:"id"`
	VehiclePurchase *int   `json:"vehicle_purchase"`
}

// aggregate sum on columns of table "muck_truck_purchase_intention"
type MuckTruckPurchaseIntentionSumFields struct {
	ID              *int64 `json:"id"`
	VehiclePurchase *int   `json:"vehicle_purchase"`
}

// aggregate var_pop on columns of table "muck_truck_purchase_intention"
type MuckTruckPurchaseIntentionVarPopFields struct {
	ID              *int64 `json:"id"`
	VehiclePurchase *int   `json:"vehicle_purchase"`
}

// aggregate var_samp on columns of table "muck_truck_purchase_intention"
type MuckTruckPurchaseIntentionVarSampFields struct {
	ID              *int64 `json:"id"`
	VehiclePurchase *int   `json:"vehicle_purchase"`
}

// aggregate variance on columns of table "muck_truck_purchase_intention"
type MuckTruckPurchaseIntentionVarianceFields struct {
	ID              *int64 `json:"id"`
	VehiclePurchase *int   `json:"vehicle_purchase"`
}

// aggregated selection of "muck_truck_sale_order"
type MuckTruckSaleOrderAggregate struct {
	Aggregate *MuckTruckSaleOrderAggregateFields `json:"aggregate"`
}

// aggregate fields of "muck_truck_sale_order"
type MuckTruckSaleOrderAggregateFields struct {
	Avg        *MuckTruckSaleOrderAvgFields        `json:"avg"`
	Count      *int                                `json:"count"`
	Max        *MuckTruckSaleOrderMaxFields        `json:"max"`
	Min        *MuckTruckSaleOrderMinFields        `json:"min"`
	Stddev     *MuckTruckSaleOrderStddevFields     `json:"stddev"`
	StddevPop  *MuckTruckSaleOrderStddevPopFields  `json:"stddev_pop"`
	StddevSamp *MuckTruckSaleOrderStddevSampFields `json:"stddev_samp"`
	Sum        *MuckTruckSaleOrderSumFields        `json:"sum"`
	VarPop     *MuckTruckSaleOrderVarPopFields     `json:"var_pop"`
	VarSamp    *MuckTruckSaleOrderVarSampFields    `json:"var_samp"`
	Variance   *MuckTruckSaleOrderVarianceFields   `json:"variance"`
}

// aggregate avg on columns of table "muck_truck_sale_order"
type MuckTruckSaleOrderAvgFields struct {
	ID                    *int64   `json:"id"`
	Progress              *float64 `json:"progress"`
	BookVehicleNumber     *int     `json:"book_vehicle_number"`
	VehicleLength         *float64 `json:"vehicle_length"`
	VehicleWidth          *float64 `json:"vehicle_width"`
	VehicleHeight         *float64 `json:"vehicle_height"`
	TipperLength          *float64 `json:"tipper_length"`
	TipperWidth           *float64 `json:"tipper_width"`
	TipperHeight          *float64 `json:"tipper_height"`
	TankTruckMarkedVolume *float64 `json:"tank_truck_marked_volume"`
	TankTruckActualVolume *float64 `json:"tank_truck_actual_volume"`
}

// Boolean expression to filter rows from the table "blacklist_operation_record". All fields are combined with a logical 'muck_truck_sale_order'.
type MuckTruckSaleOrderBoolExp struct {
	And                    []*MuckTruckSaleOrderBoolExp    `json:"_and"`
	Not                    *MuckTruckSaleOrderBoolExp      `json:"_not"`
	Or                     []*MuckTruckSaleOrderBoolExp    `json:"_or"`
	ID                     *model.BigintComparisonExp      `json:"id"`
	MuckTruckSaleOrderID   *model.StringComparisonExp      `json:"muck_truck_sale_order_id"`
	CustomerName           *model.StringComparisonExp      `json:"customer_name"`
	CustomerID             *model.StringComparisonExp      `json:"customer_id"`
	IDCardNum              *model.StringComparisonExp      `json:"id_card_num"`
	ContactPhone           *model.StringComparisonExp      `json:"contact_phone"`
	Notification           *model.StringComparisonExp      `json:"notification"`
	VehicleSaleContract    *model.StringComparisonExp      `json:"vehicle_sale_contract"`
	VehicleDepositContract *model.StringComparisonExp      `json:"vehicle_deposit_contract"`
	Commitment             *model.StringComparisonExp      `json:"commitment"`
	BookDate               *model.TimestamptzComparisonExp `json:"book_date"`
	RegistrationTime       *model.TimestamptzComparisonExp `json:"registration_time"`
	BelongingEnterprise    *model.StringComparisonExp      `json:"belonging_enterprise"`
	IDCardPicture          *model.StringComparisonExp      `json:"id_card_picture"`
	Progress               *model.NumericComparisonExp     `json:"progress"`
	VehicleSaleRecordID    *model.StringComparisonExp      `json:"vehicle_sale_record_id"`
	BookVehicleNumber      *model.IntComparisonExp         `json:"book_vehicle_number"`
	VehicleLength          *model.NumericComparisonExp     `json:"vehicle_length"`
	VehicleWidth           *model.NumericComparisonExp     `json:"vehicle_width"`
	VehicleHeight          *model.NumericComparisonExp     `json:"vehicle_height"`
	TipperLength           *model.NumericComparisonExp     `json:"tipper_length"`
	TipperWidth            *model.NumericComparisonExp     `json:"tipper_width"`
	TipperHeight           *model.NumericComparisonExp     `json:"tipper_height"`
	TankTruckMarkedVolume  *model.NumericComparisonExp     `json:"tank_truck_marked_volume"`
	TankTruckActualVolume  *model.NumericComparisonExp     `json:"tank_truck_actual_volume"`
	CarriageSealingDevice  *model.StringComparisonExp      `json:"carriage_sealing_device"`
	UShapedCargoBox        *model.StringComparisonExp      `json:"u_shaped_cargo_box"`
	IsOtherVehicleModel    *model.BooleanComparisonExp     `json:"is_other_vehicle_model"`
	IsCompleted            *model.BooleanComparisonExp     `json:"is_completed"`
	IsDeleted              *model.BooleanComparisonExp     `json:"is_deleted"`
	CreatedAt              *model.TimestamptzComparisonExp `json:"created_at"`
	CreatedBy              *model.StringComparisonExp      `json:"created_by"`
	UpdatedAt              *model.TimestamptzComparisonExp `json:"updated_at"`
	UpdatedBy              *model.StringComparisonExp      `json:"updated_by"`
	DeletedAt              *model.TimestamptzComparisonExp `json:"deleted_at"`
	DeletedBy              *model.StringComparisonExp      `json:"deleted_by"`
}

// aggregated selection of "muck_truck_sale_order_detail"
type MuckTruckSaleOrderDetailAggregate struct {
	Aggregate *MuckTruckSaleOrderDetailAggregateFields `json:"aggregate"`
}

// aggregate fields of "muck_truck_sale_order_detail"
type MuckTruckSaleOrderDetailAggregateFields struct {
	Avg        *MuckTruckSaleOrderDetailAvgFields        `json:"avg"`
	Count      *int                                      `json:"count"`
	Max        *MuckTruckSaleOrderDetailMaxFields        `json:"max"`
	Min        *MuckTruckSaleOrderDetailMinFields        `json:"min"`
	Stddev     *MuckTruckSaleOrderDetailStddevFields     `json:"stddev"`
	StddevPop  *MuckTruckSaleOrderDetailStddevPopFields  `json:"stddev_pop"`
	StddevSamp *MuckTruckSaleOrderDetailStddevSampFields `json:"stddev_samp"`
	Sum        *MuckTruckSaleOrderDetailSumFields        `json:"sum"`
	VarPop     *MuckTruckSaleOrderDetailVarPopFields     `json:"var_pop"`
	VarSamp    *MuckTruckSaleOrderDetailVarSampFields    `json:"var_samp"`
	Variance   *MuckTruckSaleOrderDetailVarianceFields   `json:"variance"`
}

// aggregate avg on columns of table "muck_truck_sale_order_detail"
type MuckTruckSaleOrderDetailAvgFields struct {
	ID                *int64 `json:"id"`
	LicensePlateColor *int   `json:"license_plate_color"`
	LicensePlateType  *int   `json:"license_plate_type"`
	Step              *int   `json:"step"`
}

// Boolean expression to filter rows from the table "blacklist_operation_record". All fields are combined with a logical 'muck_truck_sale_order_detail'.
type MuckTruckSaleOrderDetailBoolExp struct {
	And                         []*MuckTruckSaleOrderDetailBoolExp `json:"_and"`
	Not                         *MuckTruckSaleOrderDetailBoolExp   `json:"_not"`
	Or                          []*MuckTruckSaleOrderDetailBoolExp `json:"_or"`
	ID                          *model.BigintComparisonExp         `json:"id"`
	MuckTruckSaleOrderDetailID  *model.StringComparisonExp         `json:"muck_truck_sale_order_detail_id"`
	OrderID                     *model.StringComparisonExp         `json:"order_id"`
	VehicleIdentificationNumber *model.StringComparisonExp         `json:"vehicle_identification_number"`
	Certificate                 *model.StringComparisonExp         `json:"certificate"`
	TerminalProof               *model.StringComparisonExp         `json:"terminal_proof"`
	DriverLicensePic            *model.StringComparisonExp         `json:"driver_license_pic"`
	LicensePlateNumber          *model.StringComparisonExp         `json:"license_plate_number"`
	LicensePlateColor           *model.IntComparisonExp            `json:"license_plate_color"`
	LicensePlateType            *model.IntComparisonExp            `json:"license_plate_type"`
	ArriveQzDate                *model.TimestamptzComparisonExp    `json:"arrive_qz_date"`
	FirstRegistrationDate       *model.TimestamptzComparisonExp    `json:"first_registration_date"`
	RegistrationDate            *model.TimestamptzComparisonExp    `json:"registration_date"`
	Step                        *model.IntComparisonExp            `json:"step"`
	VehiclePhoto                *model.StringComparisonExp         `json:"vehicle_photo"`
	SellerPreviewNumber         *model.StringComparisonExp         `json:"seller_preview_number"`
	IsDeleted                   *model.BooleanComparisonExp        `json:"is_deleted"`
	CreatedAt                   *model.TimestamptzComparisonExp    `json:"created_at"`
	CreatedBy                   *model.StringComparisonExp         `json:"created_by"`
	UpdatedAt                   *model.TimestamptzComparisonExp    `json:"updated_at"`
	UpdatedBy                   *model.StringComparisonExp         `json:"updated_by"`
	DeletedAt                   *model.TimestamptzComparisonExp    `json:"deleted_at"`
	DeletedBy                   *model.StringComparisonExp         `json:"deleted_by"`
}

// input type for incrementing integer column in table "muck_truck_sale_order_detail"
type MuckTruckSaleOrderDetailIncInput struct {
	ID                *int64 `json:"id"`
	LicensePlateColor *int   `json:"license_plate_color"`
	LicensePlateType  *int   `json:"license_plate_type"`
	Step              *int   `json:"step"`
}

// input type for inserting data into table "muck_truck_sale_order_detail"
type MuckTruckSaleOrderDetailInsertInput struct {
	MuckTruckSaleOrderDetailID  string     `json:"muck_truck_sale_order_detail_id"`
	OrderID                     *string    `json:"order_id"`
	VehicleIdentificationNumber *string    `json:"vehicle_identification_number"`
	Certificate                 *string    `json:"certificate"`
	TerminalProof               *string    `json:"terminal_proof"`
	DriverLicensePic            *string    `json:"driver_license_pic"`
	LicensePlateNumber          *string    `json:"license_plate_number"`
	LicensePlateColor           *int       `json:"license_plate_color"`
	LicensePlateType            *int       `json:"license_plate_type"`
	ArriveQzDate                *time.Time `json:"arrive_qz_date"`
	FirstRegistrationDate       *time.Time `json:"first_registration_date"`
	RegistrationDate            *time.Time `json:"registration_date"`
	Step                        *int       `json:"step"`
	VehiclePhoto                *string    `json:"vehicle_photo"`
	SellerPreviewNumber         *string    `json:"seller_preview_number"`
	IsDeleted                   *bool      `json:"is_deleted"`
	CreatedAt                   time.Time  `json:"created_at"`
	CreatedBy                   string     `json:"created_by"`
	UpdatedAt                   *time.Time `json:"updated_at"`
	UpdatedBy                   *string    `json:"updated_by"`
	DeletedAt                   *time.Time `json:"deleted_at"`
	DeletedBy                   *string    `json:"deleted_by"`
}

// aggregate max on columns of table "muck_truck_sale_order_detail"
type MuckTruckSaleOrderDetailMaxFields struct {
	ID                          *int64     `json:"id"`
	MuckTruckSaleOrderDetailID  *string    `json:"muck_truck_sale_order_detail_id"`
	OrderID                     *string    `json:"order_id"`
	VehicleIdentificationNumber *string    `json:"vehicle_identification_number"`
	Certificate                 *string    `json:"certificate"`
	TerminalProof               *string    `json:"terminal_proof"`
	DriverLicensePic            *string    `json:"driver_license_pic"`
	LicensePlateNumber          *string    `json:"license_plate_number"`
	LicensePlateColor           *int       `json:"license_plate_color"`
	LicensePlateType            *int       `json:"license_plate_type"`
	ArriveQzDate                *time.Time `json:"arrive_qz_date"`
	FirstRegistrationDate       *time.Time `json:"first_registration_date"`
	RegistrationDate            *time.Time `json:"registration_date"`
	Step                        *int       `json:"step"`
	VehiclePhoto                *string    `json:"vehicle_photo"`
	SellerPreviewNumber         *string    `json:"seller_preview_number"`
	IsDeleted                   *bool      `json:"is_deleted"`
	CreatedAt                   *time.Time `json:"created_at"`
	CreatedBy                   *string    `json:"created_by"`
	UpdatedAt                   *time.Time `json:"updated_at"`
	UpdatedBy                   *string    `json:"updated_by"`
	DeletedAt                   *time.Time `json:"deleted_at"`
	DeletedBy                   *string    `json:"deleted_by"`
}

// aggregate min on columns of table "muck_truck_sale_order_detail"
type MuckTruckSaleOrderDetailMinFields struct {
	ID                          *int64     `json:"id"`
	MuckTruckSaleOrderDetailID  *string    `json:"muck_truck_sale_order_detail_id"`
	OrderID                     *string    `json:"order_id"`
	VehicleIdentificationNumber *string    `json:"vehicle_identification_number"`
	Certificate                 *string    `json:"certificate"`
	TerminalProof               *string    `json:"terminal_proof"`
	DriverLicensePic            *string    `json:"driver_license_pic"`
	LicensePlateNumber          *string    `json:"license_plate_number"`
	LicensePlateColor           *int       `json:"license_plate_color"`
	LicensePlateType            *int       `json:"license_plate_type"`
	ArriveQzDate                *time.Time `json:"arrive_qz_date"`
	FirstRegistrationDate       *time.Time `json:"first_registration_date"`
	RegistrationDate            *time.Time `json:"registration_date"`
	Step                        *int       `json:"step"`
	VehiclePhoto                *string    `json:"vehicle_photo"`
	SellerPreviewNumber         *string    `json:"seller_preview_number"`
	IsDeleted                   *bool      `json:"is_deleted"`
	CreatedAt                   *time.Time `json:"created_at"`
	CreatedBy                   *string    `json:"created_by"`
	UpdatedAt                   *time.Time `json:"updated_at"`
	UpdatedBy                   *string    `json:"updated_by"`
	DeletedAt                   *time.Time `json:"deleted_at"`
	DeletedBy                   *string    `json:"deleted_by"`
}

// response of any mutation on the table "muck_truck_sale_order_detail"
type MuckTruckSaleOrderDetailMutationResponse struct {
	AffectedRows int                                `json:"affected_rows"`
	Returning    []*model1.MuckTruckSaleOrderDetail `json:"returning"`
}

// ordering options when selecting data from "muck_truck_sale_order_detail"
type MuckTruckSaleOrderDetailOrderBy struct {
	ID                          *model.OrderBy `json:"id"`
	MuckTruckSaleOrderDetailID  *model.OrderBy `json:"muck_truck_sale_order_detail_id"`
	OrderID                     *model.OrderBy `json:"order_id"`
	VehicleIdentificationNumber *model.OrderBy `json:"vehicle_identification_number"`
	Certificate                 *model.OrderBy `json:"certificate"`
	TerminalProof               *model.OrderBy `json:"terminal_proof"`
	DriverLicensePic            *model.OrderBy `json:"driver_license_pic"`
	LicensePlateNumber          *model.OrderBy `json:"license_plate_number"`
	LicensePlateColor           *model.OrderBy `json:"license_plate_color"`
	LicensePlateType            *model.OrderBy `json:"license_plate_type"`
	ArriveQzDate                *model.OrderBy `json:"arrive_qz_date"`
	FirstRegistrationDate       *model.OrderBy `json:"first_registration_date"`
	RegistrationDate            *model.OrderBy `json:"registration_date"`
	Step                        *model.OrderBy `json:"step"`
	VehiclePhoto                *model.OrderBy `json:"vehicle_photo"`
	SellerPreviewNumber         *model.OrderBy `json:"seller_preview_number"`
	IsDeleted                   *model.OrderBy `json:"is_deleted"`
	CreatedAt                   *model.OrderBy `json:"created_at"`
	CreatedBy                   *model.OrderBy `json:"created_by"`
	UpdatedAt                   *model.OrderBy `json:"updated_at"`
	UpdatedBy                   *model.OrderBy `json:"updated_by"`
	DeletedAt                   *model.OrderBy `json:"deleted_at"`
	DeletedBy                   *model.OrderBy `json:"deleted_by"`
}

// input type for updating data in table "muck_truck_sale_order_detail"
type MuckTruckSaleOrderDetailSetInput struct {
	ID                          *int64     `json:"id"`
	MuckTruckSaleOrderDetailID  *string    `json:"muck_truck_sale_order_detail_id"`
	OrderID                     *string    `json:"order_id"`
	VehicleIdentificationNumber *string    `json:"vehicle_identification_number"`
	Certificate                 *string    `json:"certificate"`
	TerminalProof               *string    `json:"terminal_proof"`
	DriverLicensePic            *string    `json:"driver_license_pic"`
	LicensePlateNumber          *string    `json:"license_plate_number"`
	LicensePlateColor           *int       `json:"license_plate_color"`
	LicensePlateType            *int       `json:"license_plate_type"`
	ArriveQzDate                *time.Time `json:"arrive_qz_date"`
	FirstRegistrationDate       *time.Time `json:"first_registration_date"`
	RegistrationDate            *time.Time `json:"registration_date"`
	Step                        *int       `json:"step"`
	VehiclePhoto                *string    `json:"vehicle_photo"`
	SellerPreviewNumber         *string    `json:"seller_preview_number"`
	IsDeleted                   *bool      `json:"is_deleted"`
	CreatedAt                   *time.Time `json:"created_at"`
	CreatedBy                   *string    `json:"created_by"`
	UpdatedAt                   *time.Time `json:"updated_at"`
	UpdatedBy                   *string    `json:"updated_by"`
	DeletedAt                   *time.Time `json:"deleted_at"`
	DeletedBy                   *string    `json:"deleted_by"`
}

// aggregate stddev on columns of table "muck_truck_sale_order_detail"
type MuckTruckSaleOrderDetailStddevFields struct {
	ID                *int64 `json:"id"`
	LicensePlateColor *int   `json:"license_plate_color"`
	LicensePlateType  *int   `json:"license_plate_type"`
	Step              *int   `json:"step"`
}

// aggregate stddev_pop on columns of table "muck_truck_sale_order_detail"
type MuckTruckSaleOrderDetailStddevPopFields struct {
	ID                *int64 `json:"id"`
	LicensePlateColor *int   `json:"license_plate_color"`
	LicensePlateType  *int   `json:"license_plate_type"`
	Step              *int   `json:"step"`
}

// aggregate stddev_samp on columns of table "muck_truck_sale_order_detail"
type MuckTruckSaleOrderDetailStddevSampFields struct {
	ID                *int64 `json:"id"`
	LicensePlateColor *int   `json:"license_plate_color"`
	LicensePlateType  *int   `json:"license_plate_type"`
	Step              *int   `json:"step"`
}

// aggregate sum on columns of table "muck_truck_sale_order_detail"
type MuckTruckSaleOrderDetailSumFields struct {
	ID                *int64 `json:"id"`
	LicensePlateColor *int   `json:"license_plate_color"`
	LicensePlateType  *int   `json:"license_plate_type"`
	Step              *int   `json:"step"`
}

// aggregate var_pop on columns of table "muck_truck_sale_order_detail"
type MuckTruckSaleOrderDetailVarPopFields struct {
	ID                *int64 `json:"id"`
	LicensePlateColor *int   `json:"license_plate_color"`
	LicensePlateType  *int   `json:"license_plate_type"`
	Step              *int   `json:"step"`
}

// aggregate var_samp on columns of table "muck_truck_sale_order_detail"
type MuckTruckSaleOrderDetailVarSampFields struct {
	ID                *int64 `json:"id"`
	LicensePlateColor *int   `json:"license_plate_color"`
	LicensePlateType  *int   `json:"license_plate_type"`
	Step              *int   `json:"step"`
}

// aggregate variance on columns of table "muck_truck_sale_order_detail"
type MuckTruckSaleOrderDetailVarianceFields struct {
	ID                *int64 `json:"id"`
	LicensePlateColor *int   `json:"license_plate_color"`
	LicensePlateType  *int   `json:"license_plate_type"`
	Step              *int   `json:"step"`
}

// input type for incrementing integer column in table "muck_truck_sale_order"
type MuckTruckSaleOrderIncInput struct {
	ID                    *int64   `json:"id"`
	Progress              *float64 `json:"progress"`
	BookVehicleNumber     *int     `json:"book_vehicle_number"`
	VehicleLength         *float64 `json:"vehicle_length"`
	VehicleWidth          *float64 `json:"vehicle_width"`
	VehicleHeight         *float64 `json:"vehicle_height"`
	TipperLength          *float64 `json:"tipper_length"`
	TipperWidth           *float64 `json:"tipper_width"`
	TipperHeight          *float64 `json:"tipper_height"`
	TankTruckMarkedVolume *float64 `json:"tank_truck_marked_volume"`
	TankTruckActualVolume *float64 `json:"tank_truck_actual_volume"`
}

// input type for inserting data into table "muck_truck_sale_order"
type MuckTruckSaleOrderInsertInput struct {
	MuckTruckSaleOrderID   string     `json:"muck_truck_sale_order_id"`
	CustomerName           *string    `json:"customer_name"`
	CustomerID             *string    `json:"customer_id"`
	IDCardNum              *string    `json:"id_card_num"`
	ContactPhone           *string    `json:"contact_phone"`
	Notification           *string    `json:"notification"`
	VehicleSaleContract    *string    `json:"vehicle_sale_contract"`
	VehicleDepositContract *string    `json:"vehicle_deposit_contract"`
	Commitment             *string    `json:"commitment"`
	BookDate               *time.Time `json:"book_date"`
	RegistrationTime       *time.Time `json:"registration_time"`
	BelongingEnterprise    *string    `json:"belonging_enterprise"`
	IDCardPicture          *string    `json:"id_card_picture"`
	Progress               *float64   `json:"progress"`
	VehicleSaleRecordID    *string    `json:"vehicle_sale_record_id"`
	BookVehicleNumber      *int       `json:"book_vehicle_number"`
	VehicleLength          *float64   `json:"vehicle_length"`
	VehicleWidth           *float64   `json:"vehicle_width"`
	VehicleHeight          *float64   `json:"vehicle_height"`
	TipperLength           *float64   `json:"tipper_length"`
	TipperWidth            *float64   `json:"tipper_width"`
	TipperHeight           *float64   `json:"tipper_height"`
	TankTruckMarkedVolume  *float64   `json:"tank_truck_marked_volume"`
	TankTruckActualVolume  *float64   `json:"tank_truck_actual_volume"`
	CarriageSealingDevice  *string    `json:"carriage_sealing_device"`
	UShapedCargoBox        *string    `json:"u_shaped_cargo_box"`
	IsOtherVehicleModel    *bool      `json:"is_other_vehicle_model"`
	IsCompleted            *bool      `json:"is_completed"`
	IsDeleted              *bool      `json:"is_deleted"`
	CreatedAt              time.Time  `json:"created_at"`
	CreatedBy              string     `json:"created_by"`
	UpdatedAt              *time.Time `json:"updated_at"`
	UpdatedBy              *string    `json:"updated_by"`
	DeletedAt              *time.Time `json:"deleted_at"`
	DeletedBy              *string    `json:"deleted_by"`
}

// aggregate max on columns of table "muck_truck_sale_order"
type MuckTruckSaleOrderMaxFields struct {
	ID                     *int64     `json:"id"`
	MuckTruckSaleOrderID   *string    `json:"muck_truck_sale_order_id"`
	CustomerName           *string    `json:"customer_name"`
	CustomerID             *string    `json:"customer_id"`
	IDCardNum              *string    `json:"id_card_num"`
	ContactPhone           *string    `json:"contact_phone"`
	Notification           *string    `json:"notification"`
	VehicleSaleContract    *string    `json:"vehicle_sale_contract"`
	VehicleDepositContract *string    `json:"vehicle_deposit_contract"`
	Commitment             *string    `json:"commitment"`
	BookDate               *time.Time `json:"book_date"`
	RegistrationTime       *time.Time `json:"registration_time"`
	BelongingEnterprise    *string    `json:"belonging_enterprise"`
	IDCardPicture          *string    `json:"id_card_picture"`
	Progress               *float64   `json:"progress"`
	VehicleSaleRecordID    *string    `json:"vehicle_sale_record_id"`
	BookVehicleNumber      *int       `json:"book_vehicle_number"`
	VehicleLength          *float64   `json:"vehicle_length"`
	VehicleWidth           *float64   `json:"vehicle_width"`
	VehicleHeight          *float64   `json:"vehicle_height"`
	TipperLength           *float64   `json:"tipper_length"`
	TipperWidth            *float64   `json:"tipper_width"`
	TipperHeight           *float64   `json:"tipper_height"`
	TankTruckMarkedVolume  *float64   `json:"tank_truck_marked_volume"`
	TankTruckActualVolume  *float64   `json:"tank_truck_actual_volume"`
	CarriageSealingDevice  *string    `json:"carriage_sealing_device"`
	UShapedCargoBox        *string    `json:"u_shaped_cargo_box"`
	IsOtherVehicleModel    *bool      `json:"is_other_vehicle_model"`
	IsCompleted            *bool      `json:"is_completed"`
	IsDeleted              *bool      `json:"is_deleted"`
	CreatedAt              *time.Time `json:"created_at"`
	CreatedBy              *string    `json:"created_by"`
	UpdatedAt              *time.Time `json:"updated_at"`
	UpdatedBy              *string    `json:"updated_by"`
	DeletedAt              *time.Time `json:"deleted_at"`
	DeletedBy              *string    `json:"deleted_by"`
}

// aggregate min on columns of table "muck_truck_sale_order"
type MuckTruckSaleOrderMinFields struct {
	ID                     *int64     `json:"id"`
	MuckTruckSaleOrderID   *string    `json:"muck_truck_sale_order_id"`
	CustomerName           *string    `json:"customer_name"`
	CustomerID             *string    `json:"customer_id"`
	IDCardNum              *string    `json:"id_card_num"`
	ContactPhone           *string    `json:"contact_phone"`
	Notification           *string    `json:"notification"`
	VehicleSaleContract    *string    `json:"vehicle_sale_contract"`
	VehicleDepositContract *string    `json:"vehicle_deposit_contract"`
	Commitment             *string    `json:"commitment"`
	BookDate               *time.Time `json:"book_date"`
	RegistrationTime       *time.Time `json:"registration_time"`
	BelongingEnterprise    *string    `json:"belonging_enterprise"`
	IDCardPicture          *string    `json:"id_card_picture"`
	Progress               *float64   `json:"progress"`
	VehicleSaleRecordID    *string    `json:"vehicle_sale_record_id"`
	BookVehicleNumber      *int       `json:"book_vehicle_number"`
	VehicleLength          *float64   `json:"vehicle_length"`
	VehicleWidth           *float64   `json:"vehicle_width"`
	VehicleHeight          *float64   `json:"vehicle_height"`
	TipperLength           *float64   `json:"tipper_length"`
	TipperWidth            *float64   `json:"tipper_width"`
	TipperHeight           *float64   `json:"tipper_height"`
	TankTruckMarkedVolume  *float64   `json:"tank_truck_marked_volume"`
	TankTruckActualVolume  *float64   `json:"tank_truck_actual_volume"`
	CarriageSealingDevice  *string    `json:"carriage_sealing_device"`
	UShapedCargoBox        *string    `json:"u_shaped_cargo_box"`
	IsOtherVehicleModel    *bool      `json:"is_other_vehicle_model"`
	IsCompleted            *bool      `json:"is_completed"`
	IsDeleted              *bool      `json:"is_deleted"`
	CreatedAt              *time.Time `json:"created_at"`
	CreatedBy              *string    `json:"created_by"`
	UpdatedAt              *time.Time `json:"updated_at"`
	UpdatedBy              *string    `json:"updated_by"`
	DeletedAt              *time.Time `json:"deleted_at"`
	DeletedBy              *string    `json:"deleted_by"`
}

// response of any mutation on the table "muck_truck_sale_order"
type MuckTruckSaleOrderMutationResponse struct {
	AffectedRows int                          `json:"affected_rows"`
	Returning    []*model1.MuckTruckSaleOrder `json:"returning"`
}

// ordering options when selecting data from "muck_truck_sale_order"
type MuckTruckSaleOrderOrderBy struct {
	ID                     *model.OrderBy `json:"id"`
	MuckTruckSaleOrderID   *model.OrderBy `json:"muck_truck_sale_order_id"`
	CustomerName           *model.OrderBy `json:"customer_name"`
	CustomerID             *model.OrderBy `json:"customer_id"`
	IDCardNum              *model.OrderBy `json:"id_card_num"`
	ContactPhone           *model.OrderBy `json:"contact_phone"`
	Notification           *model.OrderBy `json:"notification"`
	VehicleSaleContract    *model.OrderBy `json:"vehicle_sale_contract"`
	VehicleDepositContract *model.OrderBy `json:"vehicle_deposit_contract"`
	Commitment             *model.OrderBy `json:"commitment"`
	BookDate               *model.OrderBy `json:"book_date"`
	RegistrationTime       *model.OrderBy `json:"registration_time"`
	BelongingEnterprise    *model.OrderBy `json:"belonging_enterprise"`
	IDCardPicture          *model.OrderBy `json:"id_card_picture"`
	Progress               *model.OrderBy `json:"progress"`
	VehicleSaleRecordID    *model.OrderBy `json:"vehicle_sale_record_id"`
	BookVehicleNumber      *model.OrderBy `json:"book_vehicle_number"`
	VehicleLength          *model.OrderBy `json:"vehicle_length"`
	VehicleWidth           *model.OrderBy `json:"vehicle_width"`
	VehicleHeight          *model.OrderBy `json:"vehicle_height"`
	TipperLength           *model.OrderBy `json:"tipper_length"`
	TipperWidth            *model.OrderBy `json:"tipper_width"`
	TipperHeight           *model.OrderBy `json:"tipper_height"`
	TankTruckMarkedVolume  *model.OrderBy `json:"tank_truck_marked_volume"`
	TankTruckActualVolume  *model.OrderBy `json:"tank_truck_actual_volume"`
	CarriageSealingDevice  *model.OrderBy `json:"carriage_sealing_device"`
	UShapedCargoBox        *model.OrderBy `json:"u_shaped_cargo_box"`
	IsOtherVehicleModel    *model.OrderBy `json:"is_other_vehicle_model"`
	IsCompleted            *model.OrderBy `json:"is_completed"`
	IsDeleted              *model.OrderBy `json:"is_deleted"`
	CreatedAt              *model.OrderBy `json:"created_at"`
	CreatedBy              *model.OrderBy `json:"created_by"`
	UpdatedAt              *model.OrderBy `json:"updated_at"`
	UpdatedBy              *model.OrderBy `json:"updated_by"`
	DeletedAt              *model.OrderBy `json:"deleted_at"`
	DeletedBy              *model.OrderBy `json:"deleted_by"`
}

// input type for updating data in table "muck_truck_sale_order"
type MuckTruckSaleOrderSetInput struct {
	ID                     *int64     `json:"id"`
	MuckTruckSaleOrderID   *string    `json:"muck_truck_sale_order_id"`
	CustomerName           *string    `json:"customer_name"`
	CustomerID             *string    `json:"customer_id"`
	IDCardNum              *string    `json:"id_card_num"`
	ContactPhone           *string    `json:"contact_phone"`
	Notification           *string    `json:"notification"`
	VehicleSaleContract    *string    `json:"vehicle_sale_contract"`
	VehicleDepositContract *string    `json:"vehicle_deposit_contract"`
	Commitment             *string    `json:"commitment"`
	BookDate               *time.Time `json:"book_date"`
	RegistrationTime       *time.Time `json:"registration_time"`
	BelongingEnterprise    *string    `json:"belonging_enterprise"`
	IDCardPicture          *string    `json:"id_card_picture"`
	Progress               *float64   `json:"progress"`
	VehicleSaleRecordID    *string    `json:"vehicle_sale_record_id"`
	BookVehicleNumber      *int       `json:"book_vehicle_number"`
	VehicleLength          *float64   `json:"vehicle_length"`
	VehicleWidth           *float64   `json:"vehicle_width"`
	VehicleHeight          *float64   `json:"vehicle_height"`
	TipperLength           *float64   `json:"tipper_length"`
	TipperWidth            *float64   `json:"tipper_width"`
	TipperHeight           *float64   `json:"tipper_height"`
	TankTruckMarkedVolume  *float64   `json:"tank_truck_marked_volume"`
	TankTruckActualVolume  *float64   `json:"tank_truck_actual_volume"`
	CarriageSealingDevice  *string    `json:"carriage_sealing_device"`
	UShapedCargoBox        *string    `json:"u_shaped_cargo_box"`
	IsOtherVehicleModel    *bool      `json:"is_other_vehicle_model"`
	IsCompleted            *bool      `json:"is_completed"`
	IsDeleted              *bool      `json:"is_deleted"`
	CreatedAt              *time.Time `json:"created_at"`
	CreatedBy              *string    `json:"created_by"`
	UpdatedAt              *time.Time `json:"updated_at"`
	UpdatedBy              *string    `json:"updated_by"`
	DeletedAt              *time.Time `json:"deleted_at"`
	DeletedBy              *string    `json:"deleted_by"`
}

// aggregate stddev on columns of table "muck_truck_sale_order"
type MuckTruckSaleOrderStddevFields struct {
	ID                    *int64   `json:"id"`
	Progress              *float64 `json:"progress"`
	BookVehicleNumber     *int     `json:"book_vehicle_number"`
	VehicleLength         *float64 `json:"vehicle_length"`
	VehicleWidth          *float64 `json:"vehicle_width"`
	VehicleHeight         *float64 `json:"vehicle_height"`
	TipperLength          *float64 `json:"tipper_length"`
	TipperWidth           *float64 `json:"tipper_width"`
	TipperHeight          *float64 `json:"tipper_height"`
	TankTruckMarkedVolume *float64 `json:"tank_truck_marked_volume"`
	TankTruckActualVolume *float64 `json:"tank_truck_actual_volume"`
}

// aggregate stddev_pop on columns of table "muck_truck_sale_order"
type MuckTruckSaleOrderStddevPopFields struct {
	ID                    *int64   `json:"id"`
	Progress              *float64 `json:"progress"`
	BookVehicleNumber     *int     `json:"book_vehicle_number"`
	VehicleLength         *float64 `json:"vehicle_length"`
	VehicleWidth          *float64 `json:"vehicle_width"`
	VehicleHeight         *float64 `json:"vehicle_height"`
	TipperLength          *float64 `json:"tipper_length"`
	TipperWidth           *float64 `json:"tipper_width"`
	TipperHeight          *float64 `json:"tipper_height"`
	TankTruckMarkedVolume *float64 `json:"tank_truck_marked_volume"`
	TankTruckActualVolume *float64 `json:"tank_truck_actual_volume"`
}

// aggregate stddev_samp on columns of table "muck_truck_sale_order"
type MuckTruckSaleOrderStddevSampFields struct {
	ID                    *int64   `json:"id"`
	Progress              *float64 `json:"progress"`
	BookVehicleNumber     *int     `json:"book_vehicle_number"`
	VehicleLength         *float64 `json:"vehicle_length"`
	VehicleWidth          *float64 `json:"vehicle_width"`
	VehicleHeight         *float64 `json:"vehicle_height"`
	TipperLength          *float64 `json:"tipper_length"`
	TipperWidth           *float64 `json:"tipper_width"`
	TipperHeight          *float64 `json:"tipper_height"`
	TankTruckMarkedVolume *float64 `json:"tank_truck_marked_volume"`
	TankTruckActualVolume *float64 `json:"tank_truck_actual_volume"`
}

// aggregate sum on columns of table "muck_truck_sale_order"
type MuckTruckSaleOrderSumFields struct {
	ID                    *int64   `json:"id"`
	Progress              *float64 `json:"progress"`
	BookVehicleNumber     *int     `json:"book_vehicle_number"`
	VehicleLength         *float64 `json:"vehicle_length"`
	VehicleWidth          *float64 `json:"vehicle_width"`
	VehicleHeight         *float64 `json:"vehicle_height"`
	TipperLength          *float64 `json:"tipper_length"`
	TipperWidth           *float64 `json:"tipper_width"`
	TipperHeight          *float64 `json:"tipper_height"`
	TankTruckMarkedVolume *float64 `json:"tank_truck_marked_volume"`
	TankTruckActualVolume *float64 `json:"tank_truck_actual_volume"`
}

// aggregate var_pop on columns of table "muck_truck_sale_order"
type MuckTruckSaleOrderVarPopFields struct {
	ID                    *int64   `json:"id"`
	Progress              *float64 `json:"progress"`
	BookVehicleNumber     *int     `json:"book_vehicle_number"`
	VehicleLength         *float64 `json:"vehicle_length"`
	VehicleWidth          *float64 `json:"vehicle_width"`
	VehicleHeight         *float64 `json:"vehicle_height"`
	TipperLength          *float64 `json:"tipper_length"`
	TipperWidth           *float64 `json:"tipper_width"`
	TipperHeight          *float64 `json:"tipper_height"`
	TankTruckMarkedVolume *float64 `json:"tank_truck_marked_volume"`
	TankTruckActualVolume *float64 `json:"tank_truck_actual_volume"`
}

// aggregate var_samp on columns of table "muck_truck_sale_order"
type MuckTruckSaleOrderVarSampFields struct {
	ID                    *int64   `json:"id"`
	Progress              *float64 `json:"progress"`
	BookVehicleNumber     *int     `json:"book_vehicle_number"`
	VehicleLength         *float64 `json:"vehicle_length"`
	VehicleWidth          *float64 `json:"vehicle_width"`
	VehicleHeight         *float64 `json:"vehicle_height"`
	TipperLength          *float64 `json:"tipper_length"`
	TipperWidth           *float64 `json:"tipper_width"`
	TipperHeight          *float64 `json:"tipper_height"`
	TankTruckMarkedVolume *float64 `json:"tank_truck_marked_volume"`
	TankTruckActualVolume *float64 `json:"tank_truck_actual_volume"`
}

// aggregate variance on columns of table "muck_truck_sale_order"
type MuckTruckSaleOrderVarianceFields struct {
	ID                    *int64   `json:"id"`
	Progress              *float64 `json:"progress"`
	BookVehicleNumber     *int     `json:"book_vehicle_number"`
	VehicleLength         *float64 `json:"vehicle_length"`
	VehicleWidth          *float64 `json:"vehicle_width"`
	VehicleHeight         *float64 `json:"vehicle_height"`
	TipperLength          *float64 `json:"tipper_length"`
	TipperWidth           *float64 `json:"tipper_width"`
	TipperHeight          *float64 `json:"tipper_height"`
	TankTruckMarkedVolume *float64 `json:"tank_truck_marked_volume"`
	TankTruckActualVolume *float64 `json:"tank_truck_actual_volume"`
}

// aggregated selection of "new_muck_truck_info"
type NewMuckTruckInfoAggregate struct {
	Aggregate *NewMuckTruckInfoAggregateFields `json:"aggregate"`
}

// aggregate fields of "new_muck_truck_info"
type NewMuckTruckInfoAggregateFields struct {
	Avg        *NewMuckTruckInfoAvgFields        `json:"avg"`
	Count      *int                              `json:"count"`
	Max        *NewMuckTruckInfoMaxFields        `json:"max"`
	Min        *NewMuckTruckInfoMinFields        `json:"min"`
	Stddev     *NewMuckTruckInfoStddevFields     `json:"stddev"`
	StddevPop  *NewMuckTruckInfoStddevPopFields  `json:"stddev_pop"`
	StddevSamp *NewMuckTruckInfoStddevSampFields `json:"stddev_samp"`
	Sum        *NewMuckTruckInfoSumFields        `json:"sum"`
	VarPop     *NewMuckTruckInfoVarPopFields     `json:"var_pop"`
	VarSamp    *NewMuckTruckInfoVarSampFields    `json:"var_samp"`
	Variance   *NewMuckTruckInfoVarianceFields   `json:"variance"`
}

// aggregate avg on columns of table "new_muck_truck_info"
type NewMuckTruckInfoAvgFields struct {
	ID *int64 `json:"id"`
}

// Boolean expression to filter rows from the table "blacklist_operation_record". All fields are combined with a logical 'new_muck_truck_info'.
type NewMuckTruckInfoBoolExp struct {
	And                []*NewMuckTruckInfoBoolExp      `json:"_and"`
	Not                *NewMuckTruckInfoBoolExp        `json:"_not"`
	Or                 []*NewMuckTruckInfoBoolExp      `json:"_or"`
	ID                 *model.BigintComparisonExp      `json:"id"`
	NewMuckTruckInfoID *model.StringComparisonExp      `json:"new_muck_truck_info_id"`
	VehicleID          *model.StringComparisonExp      `json:"vehicle_id"`
	LicensePlateNumber *model.StringComparisonExp      `json:"license_plate_number"`
	RegistrationTime   *model.TimestamptzComparisonExp `json:"registration_time"`
	EmissionStandard   *model.StringComparisonExp      `json:"emission_standard"`
	IsUShapedCargoBox  *model.BooleanComparisonExp     `json:"is_u_shaped_cargo_box"`
	Length             *model.StringComparisonExp      `json:"length"`
	Width              *model.StringComparisonExp      `json:"width"`
	Height             *model.StringComparisonExp      `json:"height"`
	SealingDevice      *model.StringComparisonExp      `json:"sealing_device"`
	TopCoverHeight     *model.StringComparisonExp      `json:"top_cover_height"`
	CreatedAt          *model.TimestamptzComparisonExp `json:"created_at"`
	CreatedBy          *model.StringComparisonExp      `json:"created_by"`
	UpdatedAt          *model.TimestamptzComparisonExp `json:"updated_at"`
	UpdatedBy          *model.StringComparisonExp      `json:"updated_by"`
	DeletedAt          *model.TimestamptzComparisonExp `json:"deleted_at"`
	DeletedBy          *model.StringComparisonExp      `json:"deleted_by"`
}

// input type for incrementing integer column in table "new_muck_truck_info"
type NewMuckTruckInfoIncInput struct {
	ID *int64 `json:"id"`
}

// input type for inserting data into table "new_muck_truck_info"
type NewMuckTruckInfoInsertInput struct {
	NewMuckTruckInfoID string     `json:"new_muck_truck_info_id"`
	VehicleID          *string    `json:"vehicle_id"`
	LicensePlateNumber *string    `json:"license_plate_number"`
	RegistrationTime   *time.Time `json:"registration_time"`
	EmissionStandard   *string    `json:"emission_standard"`
	IsUShapedCargoBox  *bool      `json:"is_u_shaped_cargo_box"`
	Length             *string    `json:"length"`
	Width              *string    `json:"width"`
	Height             *string    `json:"height"`
	SealingDevice      *string    `json:"sealing_device"`
	TopCoverHeight     *string    `json:"top_cover_height"`
	CreatedAt          time.Time  `json:"created_at"`
	CreatedBy          string     `json:"created_by"`
	UpdatedAt          *time.Time `json:"updated_at"`
	UpdatedBy          *string    `json:"updated_by"`
	DeletedAt          *time.Time `json:"deleted_at"`
	DeletedBy          *string    `json:"deleted_by"`
}

// aggregate max on columns of table "new_muck_truck_info"
type NewMuckTruckInfoMaxFields struct {
	ID                 *int64     `json:"id"`
	NewMuckTruckInfoID *string    `json:"new_muck_truck_info_id"`
	VehicleID          *string    `json:"vehicle_id"`
	LicensePlateNumber *string    `json:"license_plate_number"`
	RegistrationTime   *time.Time `json:"registration_time"`
	EmissionStandard   *string    `json:"emission_standard"`
	IsUShapedCargoBox  *bool      `json:"is_u_shaped_cargo_box"`
	Length             *string    `json:"length"`
	Width              *string    `json:"width"`
	Height             *string    `json:"height"`
	SealingDevice      *string    `json:"sealing_device"`
	TopCoverHeight     *string    `json:"top_cover_height"`
	CreatedAt          *time.Time `json:"created_at"`
	CreatedBy          *string    `json:"created_by"`
	UpdatedAt          *time.Time `json:"updated_at"`
	UpdatedBy          *string    `json:"updated_by"`
	DeletedAt          *time.Time `json:"deleted_at"`
	DeletedBy          *string    `json:"deleted_by"`
}

// aggregate min on columns of table "new_muck_truck_info"
type NewMuckTruckInfoMinFields struct {
	ID                 *int64     `json:"id"`
	NewMuckTruckInfoID *string    `json:"new_muck_truck_info_id"`
	VehicleID          *string    `json:"vehicle_id"`
	LicensePlateNumber *string    `json:"license_plate_number"`
	RegistrationTime   *time.Time `json:"registration_time"`
	EmissionStandard   *string    `json:"emission_standard"`
	IsUShapedCargoBox  *bool      `json:"is_u_shaped_cargo_box"`
	Length             *string    `json:"length"`
	Width              *string    `json:"width"`
	Height             *string    `json:"height"`
	SealingDevice      *string    `json:"sealing_device"`
	TopCoverHeight     *string    `json:"top_cover_height"`
	CreatedAt          *time.Time `json:"created_at"`
	CreatedBy          *string    `json:"created_by"`
	UpdatedAt          *time.Time `json:"updated_at"`
	UpdatedBy          *string    `json:"updated_by"`
	DeletedAt          *time.Time `json:"deleted_at"`
	DeletedBy          *string    `json:"deleted_by"`
}

// response of any mutation on the table "new_muck_truck_info"
type NewMuckTruckInfoMutationResponse struct {
	AffectedRows int                        `json:"affected_rows"`
	Returning    []*model1.NewMuckTruckInfo `json:"returning"`
}

// ordering options when selecting data from "new_muck_truck_info"
type NewMuckTruckInfoOrderBy struct {
	ID                 *model.OrderBy `json:"id"`
	NewMuckTruckInfoID *model.OrderBy `json:"new_muck_truck_info_id"`
	VehicleID          *model.OrderBy `json:"vehicle_id"`
	LicensePlateNumber *model.OrderBy `json:"license_plate_number"`
	RegistrationTime   *model.OrderBy `json:"registration_time"`
	EmissionStandard   *model.OrderBy `json:"emission_standard"`
	IsUShapedCargoBox  *model.OrderBy `json:"is_u_shaped_cargo_box"`
	Length             *model.OrderBy `json:"length"`
	Width              *model.OrderBy `json:"width"`
	Height             *model.OrderBy `json:"height"`
	SealingDevice      *model.OrderBy `json:"sealing_device"`
	TopCoverHeight     *model.OrderBy `json:"top_cover_height"`
	CreatedAt          *model.OrderBy `json:"created_at"`
	CreatedBy          *model.OrderBy `json:"created_by"`
	UpdatedAt          *model.OrderBy `json:"updated_at"`
	UpdatedBy          *model.OrderBy `json:"updated_by"`
	DeletedAt          *model.OrderBy `json:"deleted_at"`
	DeletedBy          *model.OrderBy `json:"deleted_by"`
}

// input type for updating data in table "new_muck_truck_info"
type NewMuckTruckInfoSetInput struct {
	ID                 *int64     `json:"id"`
	NewMuckTruckInfoID *string    `json:"new_muck_truck_info_id"`
	VehicleID          *string    `json:"vehicle_id"`
	LicensePlateNumber *string    `json:"license_plate_number"`
	RegistrationTime   *time.Time `json:"registration_time"`
	EmissionStandard   *string    `json:"emission_standard"`
	IsUShapedCargoBox  *bool      `json:"is_u_shaped_cargo_box"`
	Length             *string    `json:"length"`
	Width              *string    `json:"width"`
	Height             *string    `json:"height"`
	SealingDevice      *string    `json:"sealing_device"`
	TopCoverHeight     *string    `json:"top_cover_height"`
	CreatedAt          *time.Time `json:"created_at"`
	CreatedBy          *string    `json:"created_by"`
	UpdatedAt          *time.Time `json:"updated_at"`
	UpdatedBy          *string    `json:"updated_by"`
	DeletedAt          *time.Time `json:"deleted_at"`
	DeletedBy          *string    `json:"deleted_by"`
}

// aggregate stddev on columns of table "new_muck_truck_info"
type NewMuckTruckInfoStddevFields struct {
	ID *int64 `json:"id"`
}

// aggregate stddev_pop on columns of table "new_muck_truck_info"
type NewMuckTruckInfoStddevPopFields struct {
	ID *int64 `json:"id"`
}

// aggregate stddev_samp on columns of table "new_muck_truck_info"
type NewMuckTruckInfoStddevSampFields struct {
	ID *int64 `json:"id"`
}

// aggregate sum on columns of table "new_muck_truck_info"
type NewMuckTruckInfoSumFields struct {
	ID *int64 `json:"id"`
}

// aggregate var_pop on columns of table "new_muck_truck_info"
type NewMuckTruckInfoVarPopFields struct {
	ID *int64 `json:"id"`
}

// aggregate var_samp on columns of table "new_muck_truck_info"
type NewMuckTruckInfoVarSampFields struct {
	ID *int64 `json:"id"`
}

// aggregate variance on columns of table "new_muck_truck_info"
type NewMuckTruckInfoVarianceFields struct {
	ID *int64 `json:"id"`
}

// aggregated selection of "new_muck_truck_photo"
type NewMuckTruckPhotoAggregate struct {
	Aggregate *NewMuckTruckPhotoAggregateFields `json:"aggregate"`
}

// aggregate fields of "new_muck_truck_photo"
type NewMuckTruckPhotoAggregateFields struct {
	Avg        *NewMuckTruckPhotoAvgFields        `json:"avg"`
	Count      *int                               `json:"count"`
	Max        *NewMuckTruckPhotoMaxFields        `json:"max"`
	Min        *NewMuckTruckPhotoMinFields        `json:"min"`
	Stddev     *NewMuckTruckPhotoStddevFields     `json:"stddev"`
	StddevPop  *NewMuckTruckPhotoStddevPopFields  `json:"stddev_pop"`
	StddevSamp *NewMuckTruckPhotoStddevSampFields `json:"stddev_samp"`
	Sum        *NewMuckTruckPhotoSumFields        `json:"sum"`
	VarPop     *NewMuckTruckPhotoVarPopFields     `json:"var_pop"`
	VarSamp    *NewMuckTruckPhotoVarSampFields    `json:"var_samp"`
	Variance   *NewMuckTruckPhotoVarianceFields   `json:"variance"`
}

// aggregate avg on columns of table "new_muck_truck_photo"
type NewMuckTruckPhotoAvgFields struct {
	ID *int64 `json:"id"`
}

// Boolean expression to filter rows from the table "blacklist_operation_record". All fields are combined with a logical 'new_muck_truck_photo'.
type NewMuckTruckPhotoBoolExp struct {
	And                 []*NewMuckTruckPhotoBoolExp     `json:"_and"`
	Not                 *NewMuckTruckPhotoBoolExp       `json:"_not"`
	Or                  []*NewMuckTruckPhotoBoolExp     `json:"_or"`
	ID                  *model.BigintComparisonExp      `json:"id"`
	NewMuckTruckPhotoID *model.StringComparisonExp      `json:"new_muck_truck_photo_id"`
	VehicleID           *model.StringComparisonExp      `json:"vehicle_id"`
	FilePath            *model.StringComparisonExp      `json:"file_path"`
	UploadUser          *model.StringComparisonExp      `json:"upload_user"`
	CreatedAt           *model.TimestamptzComparisonExp `json:"created_at"`
	CreatedBy           *model.StringComparisonExp      `json:"created_by"`
	UpdatedAt           *model.TimestamptzComparisonExp `json:"updated_at"`
	UpdatedBy           *model.StringComparisonExp      `json:"updated_by"`
	DeletedAt           *model.TimestamptzComparisonExp `json:"deleted_at"`
	DeletedBy           *model.StringComparisonExp      `json:"deleted_by"`
}

// input type for incrementing integer column in table "new_muck_truck_photo"
type NewMuckTruckPhotoIncInput struct {
	ID *int64 `json:"id"`
}

// input type for inserting data into table "new_muck_truck_photo"
type NewMuckTruckPhotoInsertInput struct {
	NewMuckTruckPhotoID string     `json:"new_muck_truck_photo_id"`
	VehicleID           *string    `json:"vehicle_id"`
	FilePath            *string    `json:"file_path"`
	UploadUser          *string    `json:"upload_user"`
	CreatedAt           time.Time  `json:"created_at"`
	CreatedBy           string     `json:"created_by"`
	UpdatedAt           *time.Time `json:"updated_at"`
	UpdatedBy           *string    `json:"updated_by"`
	DeletedAt           *time.Time `json:"deleted_at"`
	DeletedBy           *string    `json:"deleted_by"`
}

// aggregate max on columns of table "new_muck_truck_photo"
type NewMuckTruckPhotoMaxFields struct {
	ID                  *int64     `json:"id"`
	NewMuckTruckPhotoID *string    `json:"new_muck_truck_photo_id"`
	VehicleID           *string    `json:"vehicle_id"`
	FilePath            *string    `json:"file_path"`
	UploadUser          *string    `json:"upload_user"`
	CreatedAt           *time.Time `json:"created_at"`
	CreatedBy           *string    `json:"created_by"`
	UpdatedAt           *time.Time `json:"updated_at"`
	UpdatedBy           *string    `json:"updated_by"`
	DeletedAt           *time.Time `json:"deleted_at"`
	DeletedBy           *string    `json:"deleted_by"`
}

// aggregate min on columns of table "new_muck_truck_photo"
type NewMuckTruckPhotoMinFields struct {
	ID                  *int64     `json:"id"`
	NewMuckTruckPhotoID *string    `json:"new_muck_truck_photo_id"`
	VehicleID           *string    `json:"vehicle_id"`
	FilePath            *string    `json:"file_path"`
	UploadUser          *string    `json:"upload_user"`
	CreatedAt           *time.Time `json:"created_at"`
	CreatedBy           *string    `json:"created_by"`
	UpdatedAt           *time.Time `json:"updated_at"`
	UpdatedBy           *string    `json:"updated_by"`
	DeletedAt           *time.Time `json:"deleted_at"`
	DeletedBy           *string    `json:"deleted_by"`
}

// response of any mutation on the table "new_muck_truck_photo"
type NewMuckTruckPhotoMutationResponse struct {
	AffectedRows int                         `json:"affected_rows"`
	Returning    []*model1.NewMuckTruckPhoto `json:"returning"`
}

// ordering options when selecting data from "new_muck_truck_photo"
type NewMuckTruckPhotoOrderBy struct {
	ID                  *model.OrderBy `json:"id"`
	NewMuckTruckPhotoID *model.OrderBy `json:"new_muck_truck_photo_id"`
	VehicleID           *model.OrderBy `json:"vehicle_id"`
	FilePath            *model.OrderBy `json:"file_path"`
	UploadUser          *model.OrderBy `json:"upload_user"`
	CreatedAt           *model.OrderBy `json:"created_at"`
	CreatedBy           *model.OrderBy `json:"created_by"`
	UpdatedAt           *model.OrderBy `json:"updated_at"`
	UpdatedBy           *model.OrderBy `json:"updated_by"`
	DeletedAt           *model.OrderBy `json:"deleted_at"`
	DeletedBy           *model.OrderBy `json:"deleted_by"`
}

// input type for updating data in table "new_muck_truck_photo"
type NewMuckTruckPhotoSetInput struct {
	ID                  *int64     `json:"id"`
	NewMuckTruckPhotoID *string    `json:"new_muck_truck_photo_id"`
	VehicleID           *string    `json:"vehicle_id"`
	FilePath            *string    `json:"file_path"`
	UploadUser          *string    `json:"upload_user"`
	CreatedAt           *time.Time `json:"created_at"`
	CreatedBy           *string    `json:"created_by"`
	UpdatedAt           *time.Time `json:"updated_at"`
	UpdatedBy           *string    `json:"updated_by"`
	DeletedAt           *time.Time `json:"deleted_at"`
	DeletedBy           *string    `json:"deleted_by"`
}

// aggregate stddev on columns of table "new_muck_truck_photo"
type NewMuckTruckPhotoStddevFields struct {
	ID *int64 `json:"id"`
}

// aggregate stddev_pop on columns of table "new_muck_truck_photo"
type NewMuckTruckPhotoStddevPopFields struct {
	ID *int64 `json:"id"`
}

// aggregate stddev_samp on columns of table "new_muck_truck_photo"
type NewMuckTruckPhotoStddevSampFields struct {
	ID *int64 `json:"id"`
}

// aggregate sum on columns of table "new_muck_truck_photo"
type NewMuckTruckPhotoSumFields struct {
	ID *int64 `json:"id"`
}

// aggregate var_pop on columns of table "new_muck_truck_photo"
type NewMuckTruckPhotoVarPopFields struct {
	ID *int64 `json:"id"`
}

// aggregate var_samp on columns of table "new_muck_truck_photo"
type NewMuckTruckPhotoVarSampFields struct {
	ID *int64 `json:"id"`
}

// aggregate variance on columns of table "new_muck_truck_photo"
type NewMuckTruckPhotoVarianceFields struct {
	ID *int64 `json:"id"`
}

// aggregated selection of "new_muck_truck_recommend_catalog"
type NewMuckTruckRecommendCatalogAggregate struct {
	Aggregate *NewMuckTruckRecommendCatalogAggregateFields `json:"aggregate"`
}

// aggregate fields of "new_muck_truck_recommend_catalog"
type NewMuckTruckRecommendCatalogAggregateFields struct {
	Avg        *NewMuckTruckRecommendCatalogAvgFields        `json:"avg"`
	Count      *int                                          `json:"count"`
	Max        *NewMuckTruckRecommendCatalogMaxFields        `json:"max"`
	Min        *NewMuckTruckRecommendCatalogMinFields        `json:"min"`
	Stddev     *NewMuckTruckRecommendCatalogStddevFields     `json:"stddev"`
	StddevPop  *NewMuckTruckRecommendCatalogStddevPopFields  `json:"stddev_pop"`
	StddevSamp *NewMuckTruckRecommendCatalogStddevSampFields `json:"stddev_samp"`
	Sum        *NewMuckTruckRecommendCatalogSumFields        `json:"sum"`
	VarPop     *NewMuckTruckRecommendCatalogVarPopFields     `json:"var_pop"`
	VarSamp    *NewMuckTruckRecommendCatalogVarSampFields    `json:"var_samp"`
	Variance   *NewMuckTruckRecommendCatalogVarianceFields   `json:"variance"`
}

// aggregate avg on columns of table "new_muck_truck_recommend_catalog"
type NewMuckTruckRecommendCatalogAvgFields struct {
	ID *int64 `json:"id"`
}

// Boolean expression to filter rows from the table "blacklist_operation_record". All fields are combined with a logical 'new_muck_truck_recommend_catalog'.
type NewMuckTruckRecommendCatalogBoolExp struct {
	And                            []*NewMuckTruckRecommendCatalogBoolExp `json:"_and"`
	Not                            *NewMuckTruckRecommendCatalogBoolExp   `json:"_not"`
	Or                             []*NewMuckTruckRecommendCatalogBoolExp `json:"_or"`
	ID                             *model.BigintComparisonExp             `json:"id"`
	NewMuckTruckRecommendCatalogID *model.StringComparisonExp             `json:"new_muck_truck_recommend_catalog_id"`
	BrandName                      *model.StringComparisonExp             `json:"brand_name"`
	CreatedAt                      *model.TimestamptzComparisonExp        `json:"created_at"`
	CreatedBy                      *model.StringComparisonExp             `json:"created_by"`
	UpdatedAt                      *model.TimestamptzComparisonExp        `json:"updated_at"`
	UpdatedBy                      *model.StringComparisonExp             `json:"updated_by"`
	DeletedAt                      *model.TimestamptzComparisonExp        `json:"deleted_at"`
	DeletedBy                      *model.StringComparisonExp             `json:"deleted_by"`
}

// input type for incrementing integer column in table "new_muck_truck_recommend_catalog"
type NewMuckTruckRecommendCatalogIncInput struct {
	ID *int64 `json:"id"`
}

// input type for inserting data into table "new_muck_truck_recommend_catalog"
type NewMuckTruckRecommendCatalogInsertInput struct {
	NewMuckTruckRecommendCatalogID string     `json:"new_muck_truck_recommend_catalog_id"`
	BrandName                      *string    `json:"brand_name"`
	CreatedAt                      time.Time  `json:"created_at"`
	CreatedBy                      string     `json:"created_by"`
	UpdatedAt                      *time.Time `json:"updated_at"`
	UpdatedBy                      *string    `json:"updated_by"`
	DeletedAt                      *time.Time `json:"deleted_at"`
	DeletedBy                      *string    `json:"deleted_by"`
}

// aggregate max on columns of table "new_muck_truck_recommend_catalog"
type NewMuckTruckRecommendCatalogMaxFields struct {
	ID                             *int64     `json:"id"`
	NewMuckTruckRecommendCatalogID *string    `json:"new_muck_truck_recommend_catalog_id"`
	BrandName                      *string    `json:"brand_name"`
	CreatedAt                      *time.Time `json:"created_at"`
	CreatedBy                      *string    `json:"created_by"`
	UpdatedAt                      *time.Time `json:"updated_at"`
	UpdatedBy                      *string    `json:"updated_by"`
	DeletedAt                      *time.Time `json:"deleted_at"`
	DeletedBy                      *string    `json:"deleted_by"`
}

// aggregate min on columns of table "new_muck_truck_recommend_catalog"
type NewMuckTruckRecommendCatalogMinFields struct {
	ID                             *int64     `json:"id"`
	NewMuckTruckRecommendCatalogID *string    `json:"new_muck_truck_recommend_catalog_id"`
	BrandName                      *string    `json:"brand_name"`
	CreatedAt                      *time.Time `json:"created_at"`
	CreatedBy                      *string    `json:"created_by"`
	UpdatedAt                      *time.Time `json:"updated_at"`
	UpdatedBy                      *string    `json:"updated_by"`
	DeletedAt                      *time.Time `json:"deleted_at"`
	DeletedBy                      *string    `json:"deleted_by"`
}

// response of any mutation on the table "new_muck_truck_recommend_catalog"
type NewMuckTruckRecommendCatalogMutationResponse struct {
	AffectedRows int                                    `json:"affected_rows"`
	Returning    []*model1.NewMuckTruckRecommendCatalog `json:"returning"`
}

// ordering options when selecting data from "new_muck_truck_recommend_catalog"
type NewMuckTruckRecommendCatalogOrderBy struct {
	ID                             *model.OrderBy `json:"id"`
	NewMuckTruckRecommendCatalogID *model.OrderBy `json:"new_muck_truck_recommend_catalog_id"`
	BrandName                      *model.OrderBy `json:"brand_name"`
	CreatedAt                      *model.OrderBy `json:"created_at"`
	CreatedBy                      *model.OrderBy `json:"created_by"`
	UpdatedAt                      *model.OrderBy `json:"updated_at"`
	UpdatedBy                      *model.OrderBy `json:"updated_by"`
	DeletedAt                      *model.OrderBy `json:"deleted_at"`
	DeletedBy                      *model.OrderBy `json:"deleted_by"`
}

// input type for updating data in table "new_muck_truck_recommend_catalog"
type NewMuckTruckRecommendCatalogSetInput struct {
	ID                             *int64     `json:"id"`
	NewMuckTruckRecommendCatalogID *string    `json:"new_muck_truck_recommend_catalog_id"`
	BrandName                      *string    `json:"brand_name"`
	CreatedAt                      *time.Time `json:"created_at"`
	CreatedBy                      *string    `json:"created_by"`
	UpdatedAt                      *time.Time `json:"updated_at"`
	UpdatedBy                      *string    `json:"updated_by"`
	DeletedAt                      *time.Time `json:"deleted_at"`
	DeletedBy                      *string    `json:"deleted_by"`
}

// aggregate stddev on columns of table "new_muck_truck_recommend_catalog"
type NewMuckTruckRecommendCatalogStddevFields struct {
	ID *int64 `json:"id"`
}

// aggregate stddev_pop on columns of table "new_muck_truck_recommend_catalog"
type NewMuckTruckRecommendCatalogStddevPopFields struct {
	ID *int64 `json:"id"`
}

// aggregate stddev_samp on columns of table "new_muck_truck_recommend_catalog"
type NewMuckTruckRecommendCatalogStddevSampFields struct {
	ID *int64 `json:"id"`
}

// aggregate sum on columns of table "new_muck_truck_recommend_catalog"
type NewMuckTruckRecommendCatalogSumFields struct {
	ID *int64 `json:"id"`
}

// aggregate var_pop on columns of table "new_muck_truck_recommend_catalog"
type NewMuckTruckRecommendCatalogVarPopFields struct {
	ID *int64 `json:"id"`
}

// aggregate var_samp on columns of table "new_muck_truck_recommend_catalog"
type NewMuckTruckRecommendCatalogVarSampFields struct {
	ID *int64 `json:"id"`
}

// aggregate variance on columns of table "new_muck_truck_recommend_catalog"
type NewMuckTruckRecommendCatalogVarianceFields struct {
	ID *int64 `json:"id"`
}

// aggregated selection of "seller_filing"
type SellerFilingAggregate struct {
	Aggregate *SellerFilingAggregateFields `json:"aggregate"`
}

// aggregate fields of "seller_filing"
type SellerFilingAggregateFields struct {
	Avg        *SellerFilingAvgFields        `json:"avg"`
	Count      *int                          `json:"count"`
	Max        *SellerFilingMaxFields        `json:"max"`
	Min        *SellerFilingMinFields        `json:"min"`
	Stddev     *SellerFilingStddevFields     `json:"stddev"`
	StddevPop  *SellerFilingStddevPopFields  `json:"stddev_pop"`
	StddevSamp *SellerFilingStddevSampFields `json:"stddev_samp"`
	Sum        *SellerFilingSumFields        `json:"sum"`
	VarPop     *SellerFilingVarPopFields     `json:"var_pop"`
	VarSamp    *SellerFilingVarSampFields    `json:"var_samp"`
	Variance   *SellerFilingVarianceFields   `json:"variance"`
}

// aggregate avg on columns of table "seller_filing"
type SellerFilingAvgFields struct {
	ID *int64 `json:"id"`
}

// Boolean expression to filter rows from the table "blacklist_operation_record". All fields are combined with a logical 'seller_filing'.
type SellerFilingBoolExp struct {
	And                                []*SellerFilingBoolExp          `json:"_and"`
	Not                                *SellerFilingBoolExp            `json:"_not"`
	Or                                 []*SellerFilingBoolExp          `json:"_or"`
	ID                                 *model.BigintComparisonExp      `json:"id"`
	SellerFilingID                     *model.StringComparisonExp      `json:"seller_filing_id"`
	Seller                             *model.StringComparisonExp      `json:"seller"`
	BusinessLicense                    *model.StringComparisonExp      `json:"business_license"`
	OrganizationCode                   *model.StringComparisonExp      `json:"organization_code"`
	LegalRepresentativeIDCard          *model.StringComparisonExp      `json:"legal_representative_id_card"`
	EntrustedAgentIDCard               *model.StringComparisonExp      `json:"entrusted_agent_id_card"`
	MinistryProductionSalePermit       *model.StringComparisonExp      `json:"ministry_production_sale_permit"`
	IndustrySelfDisciplineCommitment   *model.StringComparisonExp      `json:"industry_self_discipline_commitment"`
	ManufacturerProductionSalePermit   *model.StringComparisonExp      `json:"manufacturer_production_sale_permit"`
	RepairServiceStationName           *model.StringComparisonExp      `json:"repair_service_station_name"`
	RepairServiceStationAddress        *model.StringComparisonExp      `json:"repair_service_station_address"`
	RepairServiceStationMaterial       *model.StringComparisonExp      `json:"repair_service_station_material"`
	ServiceStaffName                   *model.StringComparisonExp      `json:"service_staff_name"`
	ServiceStaffPhone                  *model.StringComparisonExp      `json:"service_staff_phone"`
	ServiceStaffID                     *model.StringComparisonExp      `json:"service_staff_id"`
	ServiceStaffMaterial               *model.StringComparisonExp      `json:"service_staff_material"`
	OtherMaterial                      *model.StringComparisonExp      `json:"other_material"`
	Remarks                            *model.StringComparisonExp      `json:"remarks"`
	RegistrationTime                   *model.TimestamptzComparisonExp `json:"registration_time"`
	RegistrationUser                   *model.StringComparisonExp      `json:"registration_user"`
	IsVerify                           *model.BooleanComparisonExp     `json:"is_verify"`
	Cause                              *model.StringComparisonExp      `json:"cause"`
	CatalogID                          *model.StringComparisonExp      `json:"catalog_id"`
	PlatformDockingTechnologyAgreement *model.StringComparisonExp      `json:"platform_docking_technology_agreement"`
	IsDeleted                          *model.BooleanComparisonExp     `json:"is_deleted"`
	CreatedAt                          *model.TimestamptzComparisonExp `json:"created_at"`
	CreatedBy                          *model.StringComparisonExp      `json:"created_by"`
	UpdatedAt                          *model.TimestamptzComparisonExp `json:"updated_at"`
	UpdatedBy                          *model.StringComparisonExp      `json:"updated_by"`
	DeletedAt                          *model.TimestamptzComparisonExp `json:"deleted_at"`
	DeletedBy                          *model.StringComparisonExp      `json:"deleted_by"`
}

// input type for incrementing integer column in table "seller_filing"
type SellerFilingIncInput struct {
	ID *int64 `json:"id"`
}

// input type for inserting data into table "seller_filing"
type SellerFilingInsertInput struct {
	SellerFilingID                     string     `json:"seller_filing_id"`
	Seller                             *string    `json:"seller"`
	BusinessLicense                    *string    `json:"business_license"`
	OrganizationCode                   *string    `json:"organization_code"`
	LegalRepresentativeIDCard          *string    `json:"legal_representative_id_card"`
	EntrustedAgentIDCard               *string    `json:"entrusted_agent_id_card"`
	MinistryProductionSalePermit       *string    `json:"ministry_production_sale_permit"`
	IndustrySelfDisciplineCommitment   *string    `json:"industry_self_discipline_commitment"`
	ManufacturerProductionSalePermit   *string    `json:"manufacturer_production_sale_permit"`
	RepairServiceStationName           *string    `json:"repair_service_station_name"`
	RepairServiceStationAddress        *string    `json:"repair_service_station_address"`
	RepairServiceStationMaterial       *string    `json:"repair_service_station_material"`
	ServiceStaffName                   *string    `json:"service_staff_name"`
	ServiceStaffPhone                  *string    `json:"service_staff_phone"`
	ServiceStaffID                     *string    `json:"service_staff_id"`
	ServiceStaffMaterial               *string    `json:"service_staff_material"`
	OtherMaterial                      *string    `json:"other_material"`
	Remarks                            *string    `json:"remarks"`
	RegistrationTime                   *time.Time `json:"registration_time"`
	RegistrationUser                   *string    `json:"registration_user"`
	IsVerify                           *bool      `json:"is_verify"`
	Cause                              *string    `json:"cause"`
	CatalogID                          *string    `json:"catalog_id"`
	PlatformDockingTechnologyAgreement *string    `json:"platform_docking_technology_agreement"`
	IsDeleted                          *bool      `json:"is_deleted"`
	CreatedAt                          time.Time  `json:"created_at"`
	CreatedBy                          string     `json:"created_by"`
	UpdatedAt                          *time.Time `json:"updated_at"`
	UpdatedBy                          *string    `json:"updated_by"`
	DeletedAt                          *time.Time `json:"deleted_at"`
	DeletedBy                          *string    `json:"deleted_by"`
}

// aggregate max on columns of table "seller_filing"
type SellerFilingMaxFields struct {
	ID                                 *int64     `json:"id"`
	SellerFilingID                     *string    `json:"seller_filing_id"`
	Seller                             *string    `json:"seller"`
	BusinessLicense                    *string    `json:"business_license"`
	OrganizationCode                   *string    `json:"organization_code"`
	LegalRepresentativeIDCard          *string    `json:"legal_representative_id_card"`
	EntrustedAgentIDCard               *string    `json:"entrusted_agent_id_card"`
	MinistryProductionSalePermit       *string    `json:"ministry_production_sale_permit"`
	IndustrySelfDisciplineCommitment   *string    `json:"industry_self_discipline_commitment"`
	ManufacturerProductionSalePermit   *string    `json:"manufacturer_production_sale_permit"`
	RepairServiceStationName           *string    `json:"repair_service_station_name"`
	RepairServiceStationAddress        *string    `json:"repair_service_station_address"`
	RepairServiceStationMaterial       *string    `json:"repair_service_station_material"`
	ServiceStaffName                   *string    `json:"service_staff_name"`
	ServiceStaffPhone                  *string    `json:"service_staff_phone"`
	ServiceStaffID                     *string    `json:"service_staff_id"`
	ServiceStaffMaterial               *string    `json:"service_staff_material"`
	OtherMaterial                      *string    `json:"other_material"`
	Remarks                            *string    `json:"remarks"`
	RegistrationTime                   *time.Time `json:"registration_time"`
	RegistrationUser                   *string    `json:"registration_user"`
	IsVerify                           *bool      `json:"is_verify"`
	Cause                              *string    `json:"cause"`
	CatalogID                          *string    `json:"catalog_id"`
	PlatformDockingTechnologyAgreement *string    `json:"platform_docking_technology_agreement"`
	IsDeleted                          *bool      `json:"is_deleted"`
	CreatedAt                          *time.Time `json:"created_at"`
	CreatedBy                          *string    `json:"created_by"`
	UpdatedAt                          *time.Time `json:"updated_at"`
	UpdatedBy                          *string    `json:"updated_by"`
	DeletedAt                          *time.Time `json:"deleted_at"`
	DeletedBy                          *string    `json:"deleted_by"`
}

// aggregate min on columns of table "seller_filing"
type SellerFilingMinFields struct {
	ID                                 *int64     `json:"id"`
	SellerFilingID                     *string    `json:"seller_filing_id"`
	Seller                             *string    `json:"seller"`
	BusinessLicense                    *string    `json:"business_license"`
	OrganizationCode                   *string    `json:"organization_code"`
	LegalRepresentativeIDCard          *string    `json:"legal_representative_id_card"`
	EntrustedAgentIDCard               *string    `json:"entrusted_agent_id_card"`
	MinistryProductionSalePermit       *string    `json:"ministry_production_sale_permit"`
	IndustrySelfDisciplineCommitment   *string    `json:"industry_self_discipline_commitment"`
	ManufacturerProductionSalePermit   *string    `json:"manufacturer_production_sale_permit"`
	RepairServiceStationName           *string    `json:"repair_service_station_name"`
	RepairServiceStationAddress        *string    `json:"repair_service_station_address"`
	RepairServiceStationMaterial       *string    `json:"repair_service_station_material"`
	ServiceStaffName                   *string    `json:"service_staff_name"`
	ServiceStaffPhone                  *string    `json:"service_staff_phone"`
	ServiceStaffID                     *string    `json:"service_staff_id"`
	ServiceStaffMaterial               *string    `json:"service_staff_material"`
	OtherMaterial                      *string    `json:"other_material"`
	Remarks                            *string    `json:"remarks"`
	RegistrationTime                   *time.Time `json:"registration_time"`
	RegistrationUser                   *string    `json:"registration_user"`
	IsVerify                           *bool      `json:"is_verify"`
	Cause                              *string    `json:"cause"`
	CatalogID                          *string    `json:"catalog_id"`
	PlatformDockingTechnologyAgreement *string    `json:"platform_docking_technology_agreement"`
	IsDeleted                          *bool      `json:"is_deleted"`
	CreatedAt                          *time.Time `json:"created_at"`
	CreatedBy                          *string    `json:"created_by"`
	UpdatedAt                          *time.Time `json:"updated_at"`
	UpdatedBy                          *string    `json:"updated_by"`
	DeletedAt                          *time.Time `json:"deleted_at"`
	DeletedBy                          *string    `json:"deleted_by"`
}

// response of any mutation on the table "seller_filing"
type SellerFilingMutationResponse struct {
	AffectedRows int                    `json:"affected_rows"`
	Returning    []*model1.SellerFiling `json:"returning"`
}

// ordering options when selecting data from "seller_filing"
type SellerFilingOrderBy struct {
	ID                                 *model.OrderBy `json:"id"`
	SellerFilingID                     *model.OrderBy `json:"seller_filing_id"`
	Seller                             *model.OrderBy `json:"seller"`
	BusinessLicense                    *model.OrderBy `json:"business_license"`
	OrganizationCode                   *model.OrderBy `json:"organization_code"`
	LegalRepresentativeIDCard          *model.OrderBy `json:"legal_representative_id_card"`
	EntrustedAgentIDCard               *model.OrderBy `json:"entrusted_agent_id_card"`
	MinistryProductionSalePermit       *model.OrderBy `json:"ministry_production_sale_permit"`
	IndustrySelfDisciplineCommitment   *model.OrderBy `json:"industry_self_discipline_commitment"`
	ManufacturerProductionSalePermit   *model.OrderBy `json:"manufacturer_production_sale_permit"`
	RepairServiceStationName           *model.OrderBy `json:"repair_service_station_name"`
	RepairServiceStationAddress        *model.OrderBy `json:"repair_service_station_address"`
	RepairServiceStationMaterial       *model.OrderBy `json:"repair_service_station_material"`
	ServiceStaffName                   *model.OrderBy `json:"service_staff_name"`
	ServiceStaffPhone                  *model.OrderBy `json:"service_staff_phone"`
	ServiceStaffID                     *model.OrderBy `json:"service_staff_id"`
	ServiceStaffMaterial               *model.OrderBy `json:"service_staff_material"`
	OtherMaterial                      *model.OrderBy `json:"other_material"`
	Remarks                            *model.OrderBy `json:"remarks"`
	RegistrationTime                   *model.OrderBy `json:"registration_time"`
	RegistrationUser                   *model.OrderBy `json:"registration_user"`
	IsVerify                           *model.OrderBy `json:"is_verify"`
	Cause                              *model.OrderBy `json:"cause"`
	CatalogID                          *model.OrderBy `json:"catalog_id"`
	PlatformDockingTechnologyAgreement *model.OrderBy `json:"platform_docking_technology_agreement"`
	IsDeleted                          *model.OrderBy `json:"is_deleted"`
	CreatedAt                          *model.OrderBy `json:"created_at"`
	CreatedBy                          *model.OrderBy `json:"created_by"`
	UpdatedAt                          *model.OrderBy `json:"updated_at"`
	UpdatedBy                          *model.OrderBy `json:"updated_by"`
	DeletedAt                          *model.OrderBy `json:"deleted_at"`
	DeletedBy                          *model.OrderBy `json:"deleted_by"`
}

// input type for updating data in table "seller_filing"
type SellerFilingSetInput struct {
	ID                                 *int64     `json:"id"`
	SellerFilingID                     *string    `json:"seller_filing_id"`
	Seller                             *string    `json:"seller"`
	BusinessLicense                    *string    `json:"business_license"`
	OrganizationCode                   *string    `json:"organization_code"`
	LegalRepresentativeIDCard          *string    `json:"legal_representative_id_card"`
	EntrustedAgentIDCard               *string    `json:"entrusted_agent_id_card"`
	MinistryProductionSalePermit       *string    `json:"ministry_production_sale_permit"`
	IndustrySelfDisciplineCommitment   *string    `json:"industry_self_discipline_commitment"`
	ManufacturerProductionSalePermit   *string    `json:"manufacturer_production_sale_permit"`
	RepairServiceStationName           *string    `json:"repair_service_station_name"`
	RepairServiceStationAddress        *string    `json:"repair_service_station_address"`
	RepairServiceStationMaterial       *string    `json:"repair_service_station_material"`
	ServiceStaffName                   *string    `json:"service_staff_name"`
	ServiceStaffPhone                  *string    `json:"service_staff_phone"`
	ServiceStaffID                     *string    `json:"service_staff_id"`
	ServiceStaffMaterial               *string    `json:"service_staff_material"`
	OtherMaterial                      *string    `json:"other_material"`
	Remarks                            *string    `json:"remarks"`
	RegistrationTime                   *time.Time `json:"registration_time"`
	RegistrationUser                   *string    `json:"registration_user"`
	IsVerify                           *bool      `json:"is_verify"`
	Cause                              *string    `json:"cause"`
	CatalogID                          *string    `json:"catalog_id"`
	PlatformDockingTechnologyAgreement *string    `json:"platform_docking_technology_agreement"`
	IsDeleted                          *bool      `json:"is_deleted"`
	CreatedAt                          *time.Time `json:"created_at"`
	CreatedBy                          *string    `json:"created_by"`
	UpdatedAt                          *time.Time `json:"updated_at"`
	UpdatedBy                          *string    `json:"updated_by"`
	DeletedAt                          *time.Time `json:"deleted_at"`
	DeletedBy                          *string    `json:"deleted_by"`
}

// aggregate stddev on columns of table "seller_filing"
type SellerFilingStddevFields struct {
	ID *int64 `json:"id"`
}

// aggregate stddev_pop on columns of table "seller_filing"
type SellerFilingStddevPopFields struct {
	ID *int64 `json:"id"`
}

// aggregate stddev_samp on columns of table "seller_filing"
type SellerFilingStddevSampFields struct {
	ID *int64 `json:"id"`
}

// aggregate sum on columns of table "seller_filing"
type SellerFilingSumFields struct {
	ID *int64 `json:"id"`
}

// aggregate var_pop on columns of table "seller_filing"
type SellerFilingVarPopFields struct {
	ID *int64 `json:"id"`
}

// aggregate var_samp on columns of table "seller_filing"
type SellerFilingVarSampFields struct {
	ID *int64 `json:"id"`
}

// aggregate variance on columns of table "seller_filing"
type SellerFilingVarianceFields struct {
	ID *int64 `json:"id"`
}

// aggregated selection of "seller_rating_record"
type SellerRatingRecordAggregate struct {
	Aggregate *SellerRatingRecordAggregateFields `json:"aggregate"`
}

// aggregate fields of "seller_rating_record"
type SellerRatingRecordAggregateFields struct {
	Avg        *SellerRatingRecordAvgFields        `json:"avg"`
	Count      *int                                `json:"count"`
	Max        *SellerRatingRecordMaxFields        `json:"max"`
	Min        *SellerRatingRecordMinFields        `json:"min"`
	Stddev     *SellerRatingRecordStddevFields     `json:"stddev"`
	StddevPop  *SellerRatingRecordStddevPopFields  `json:"stddev_pop"`
	StddevSamp *SellerRatingRecordStddevSampFields `json:"stddev_samp"`
	Sum        *SellerRatingRecordSumFields        `json:"sum"`
	VarPop     *SellerRatingRecordVarPopFields     `json:"var_pop"`
	VarSamp    *SellerRatingRecordVarSampFields    `json:"var_samp"`
	Variance   *SellerRatingRecordVarianceFields   `json:"variance"`
}

// aggregate avg on columns of table "seller_rating_record"
type SellerRatingRecordAvgFields struct {
	ID            *int64   `json:"id"`
	DemeritPoints *float64 `json:"demerit_points"`
}

// Boolean expression to filter rows from the table "blacklist_operation_record". All fields are combined with a logical 'seller_rating_record'.
type SellerRatingRecordBoolExp struct {
	And                  []*SellerRatingRecordBoolExp    `json:"_and"`
	Not                  *SellerRatingRecordBoolExp      `json:"_not"`
	Or                   []*SellerRatingRecordBoolExp    `json:"_or"`
	ID                   *model.BigintComparisonExp      `json:"id"`
	SellerRatingRecordID *model.StringComparisonExp      `json:"seller_rating_record_id"`
	DemeritObj           *model.StringComparisonExp      `json:"demerit_obj"`
	DemeritPoints        *model.NumericComparisonExp     `json:"demerit_points"`
	DemeritReason        *model.StringComparisonExp      `json:"demerit_reason"`
	Operator             *model.StringComparisonExp      `json:"operator"`
	OperationTime        *model.TimestamptzComparisonExp `json:"operation_time"`
	IsDeleted            *model.BooleanComparisonExp     `json:"is_deleted"`
	CreatedAt            *model.TimestamptzComparisonExp `json:"created_at"`
	CreatedBy            *model.StringComparisonExp      `json:"created_by"`
	UpdatedAt            *model.TimestamptzComparisonExp `json:"updated_at"`
	UpdatedBy            *model.StringComparisonExp      `json:"updated_by"`
	DeletedAt            *model.TimestamptzComparisonExp `json:"deleted_at"`
	DeletedBy            *model.StringComparisonExp      `json:"deleted_by"`
}

// input type for incrementing integer column in table "seller_rating_record"
type SellerRatingRecordIncInput struct {
	ID            *int64   `json:"id"`
	DemeritPoints *float64 `json:"demerit_points"`
}

// input type for inserting data into table "seller_rating_record"
type SellerRatingRecordInsertInput struct {
	SellerRatingRecordID string     `json:"seller_rating_record_id"`
	DemeritObj           *string    `json:"demerit_obj"`
	DemeritPoints        *float64   `json:"demerit_points"`
	DemeritReason        *string    `json:"demerit_reason"`
	Operator             *string    `json:"operator"`
	OperationTime        *time.Time `json:"operation_time"`
	IsDeleted            *bool      `json:"is_deleted"`
	CreatedAt            time.Time  `json:"created_at"`
	CreatedBy            string     `json:"created_by"`
	UpdatedAt            *time.Time `json:"updated_at"`
	UpdatedBy            *string    `json:"updated_by"`
	DeletedAt            *time.Time `json:"deleted_at"`
	DeletedBy            *string    `json:"deleted_by"`
}

// aggregate max on columns of table "seller_rating_record"
type SellerRatingRecordMaxFields struct {
	ID                   *int64     `json:"id"`
	SellerRatingRecordID *string    `json:"seller_rating_record_id"`
	DemeritObj           *string    `json:"demerit_obj"`
	DemeritPoints        *float64   `json:"demerit_points"`
	DemeritReason        *string    `json:"demerit_reason"`
	Operator             *string    `json:"operator"`
	OperationTime        *time.Time `json:"operation_time"`
	IsDeleted            *bool      `json:"is_deleted"`
	CreatedAt            *time.Time `json:"created_at"`
	CreatedBy            *string    `json:"created_by"`
	UpdatedAt            *time.Time `json:"updated_at"`
	UpdatedBy            *string    `json:"updated_by"`
	DeletedAt            *time.Time `json:"deleted_at"`
	DeletedBy            *string    `json:"deleted_by"`
}

// aggregate min on columns of table "seller_rating_record"
type SellerRatingRecordMinFields struct {
	ID                   *int64     `json:"id"`
	SellerRatingRecordID *string    `json:"seller_rating_record_id"`
	DemeritObj           *string    `json:"demerit_obj"`
	DemeritPoints        *float64   `json:"demerit_points"`
	DemeritReason        *string    `json:"demerit_reason"`
	Operator             *string    `json:"operator"`
	OperationTime        *time.Time `json:"operation_time"`
	IsDeleted            *bool      `json:"is_deleted"`
	CreatedAt            *time.Time `json:"created_at"`
	CreatedBy            *string    `json:"created_by"`
	UpdatedAt            *time.Time `json:"updated_at"`
	UpdatedBy            *string    `json:"updated_by"`
	DeletedAt            *time.Time `json:"deleted_at"`
	DeletedBy            *string    `json:"deleted_by"`
}

// response of any mutation on the table "seller_rating_record"
type SellerRatingRecordMutationResponse struct {
	AffectedRows int                          `json:"affected_rows"`
	Returning    []*model1.SellerRatingRecord `json:"returning"`
}

// ordering options when selecting data from "seller_rating_record"
type SellerRatingRecordOrderBy struct {
	ID                   *model.OrderBy `json:"id"`
	SellerRatingRecordID *model.OrderBy `json:"seller_rating_record_id"`
	DemeritObj           *model.OrderBy `json:"demerit_obj"`
	DemeritPoints        *model.OrderBy `json:"demerit_points"`
	DemeritReason        *model.OrderBy `json:"demerit_reason"`
	Operator             *model.OrderBy `json:"operator"`
	OperationTime        *model.OrderBy `json:"operation_time"`
	IsDeleted            *model.OrderBy `json:"is_deleted"`
	CreatedAt            *model.OrderBy `json:"created_at"`
	CreatedBy            *model.OrderBy `json:"created_by"`
	UpdatedAt            *model.OrderBy `json:"updated_at"`
	UpdatedBy            *model.OrderBy `json:"updated_by"`
	DeletedAt            *model.OrderBy `json:"deleted_at"`
	DeletedBy            *model.OrderBy `json:"deleted_by"`
}

// input type for updating data in table "seller_rating_record"
type SellerRatingRecordSetInput struct {
	ID                   *int64     `json:"id"`
	SellerRatingRecordID *string    `json:"seller_rating_record_id"`
	DemeritObj           *string    `json:"demerit_obj"`
	DemeritPoints        *float64   `json:"demerit_points"`
	DemeritReason        *string    `json:"demerit_reason"`
	Operator             *string    `json:"operator"`
	OperationTime        *time.Time `json:"operation_time"`
	IsDeleted            *bool      `json:"is_deleted"`
	CreatedAt            *time.Time `json:"created_at"`
	CreatedBy            *string    `json:"created_by"`
	UpdatedAt            *time.Time `json:"updated_at"`
	UpdatedBy            *string    `json:"updated_by"`
	DeletedAt            *time.Time `json:"deleted_at"`
	DeletedBy            *string    `json:"deleted_by"`
}

// aggregate stddev on columns of table "seller_rating_record"
type SellerRatingRecordStddevFields struct {
	ID            *int64   `json:"id"`
	DemeritPoints *float64 `json:"demerit_points"`
}

// aggregate stddev_pop on columns of table "seller_rating_record"
type SellerRatingRecordStddevPopFields struct {
	ID            *int64   `json:"id"`
	DemeritPoints *float64 `json:"demerit_points"`
}

// aggregate stddev_samp on columns of table "seller_rating_record"
type SellerRatingRecordStddevSampFields struct {
	ID            *int64   `json:"id"`
	DemeritPoints *float64 `json:"demerit_points"`
}

// aggregate sum on columns of table "seller_rating_record"
type SellerRatingRecordSumFields struct {
	ID            *int64   `json:"id"`
	DemeritPoints *float64 `json:"demerit_points"`
}

// aggregate var_pop on columns of table "seller_rating_record"
type SellerRatingRecordVarPopFields struct {
	ID            *int64   `json:"id"`
	DemeritPoints *float64 `json:"demerit_points"`
}

// aggregate var_samp on columns of table "seller_rating_record"
type SellerRatingRecordVarSampFields struct {
	ID            *int64   `json:"id"`
	DemeritPoints *float64 `json:"demerit_points"`
}

// aggregate variance on columns of table "seller_rating_record"
type SellerRatingRecordVarianceFields struct {
	ID            *int64   `json:"id"`
	DemeritPoints *float64 `json:"demerit_points"`
}

// aggregated selection of "vehicle_sale_record"
type VehicleSaleRecordAggregate struct {
	Aggregate *VehicleSaleRecordAggregateFields `json:"aggregate"`
}

// aggregate fields of "vehicle_sale_record"
type VehicleSaleRecordAggregateFields struct {
	Avg        *VehicleSaleRecordAvgFields        `json:"avg"`
	Count      *int                               `json:"count"`
	Max        *VehicleSaleRecordMaxFields        `json:"max"`
	Min        *VehicleSaleRecordMinFields        `json:"min"`
	Stddev     *VehicleSaleRecordStddevFields     `json:"stddev"`
	StddevPop  *VehicleSaleRecordStddevPopFields  `json:"stddev_pop"`
	StddevSamp *VehicleSaleRecordStddevSampFields `json:"stddev_samp"`
	Sum        *VehicleSaleRecordSumFields        `json:"sum"`
	VarPop     *VehicleSaleRecordVarPopFields     `json:"var_pop"`
	VarSamp    *VehicleSaleRecordVarSampFields    `json:"var_samp"`
	Variance   *VehicleSaleRecordVarianceFields   `json:"variance"`
}

// aggregate avg on columns of table "vehicle_sale_record"
type VehicleSaleRecordAvgFields struct {
	ID       *int64 `json:"id"`
	AxisType *int   `json:"axis_type"`
}

// Boolean expression to filter rows from the table "blacklist_operation_record". All fields are combined with a logical 'vehicle_sale_record'.
type VehicleSaleRecordBoolExp struct {
	And                 []*VehicleSaleRecordBoolExp     `json:"_and"`
	Not                 *VehicleSaleRecordBoolExp       `json:"_not"`
	Or                  []*VehicleSaleRecordBoolExp     `json:"_or"`
	ID                  *model.BigintComparisonExp      `json:"id"`
	VehicleSaleRecordID *model.StringComparisonExp      `json:"vehicle_sale_record_id"`
	Seller              *model.StringComparisonExp      `json:"seller"`
	VehicleModel        *model.StringComparisonExp      `json:"vehicle_model"`
	VehiclePicture      *model.StringComparisonExp      `json:"vehicle_picture"`
	VehicleParameter    *model.StringComparisonExp      `json:"vehicle_parameter"`
	ReferencePrice      *model.StringComparisonExp      `json:"reference_price"`
	OtherMaterial       *model.StringComparisonExp      `json:"other_material"`
	Remarks             *model.StringComparisonExp      `json:"remarks"`
	RegistrationTime    *model.TimestamptzComparisonExp `json:"registration_time"`
	RegistrationUser    *model.StringComparisonExp      `json:"registration_user"`
	Cause               *model.StringComparisonExp      `json:"cause"`
	CatalogID           *model.StringComparisonExp      `json:"catalog_id"`
	AxisType            *model.IntComparisonExp         `json:"axis_type"`
	TransportVolume     *model.StringComparisonExp      `json:"transport_volume"`
	IsReview            *model.BooleanComparisonExp     `json:"is_review"`
	IsDeleted           *model.BooleanComparisonExp     `json:"is_deleted"`
	CreatedAt           *model.TimestamptzComparisonExp `json:"created_at"`
	CreatedBy           *model.StringComparisonExp      `json:"created_by"`
	UpdatedAt           *model.TimestamptzComparisonExp `json:"updated_at"`
	UpdatedBy           *model.StringComparisonExp      `json:"updated_by"`
	DeletedAt           *model.TimestamptzComparisonExp `json:"deleted_at"`
	DeletedBy           *model.StringComparisonExp      `json:"deleted_by"`
}

// input type for incrementing integer column in table "vehicle_sale_record"
type VehicleSaleRecordIncInput struct {
	ID       *int64 `json:"id"`
	AxisType *int   `json:"axis_type"`
}

// input type for inserting data into table "vehicle_sale_record"
type VehicleSaleRecordInsertInput struct {
	VehicleSaleRecordID string     `json:"vehicle_sale_record_id"`
	Seller              *string    `json:"seller"`
	VehicleModel        *string    `json:"vehicle_model"`
	VehiclePicture      *string    `json:"vehicle_picture"`
	VehicleParameter    *string    `json:"vehicle_parameter"`
	ReferencePrice      *string    `json:"reference_price"`
	OtherMaterial       *string    `json:"other_material"`
	Remarks             *string    `json:"remarks"`
	RegistrationTime    *time.Time `json:"registration_time"`
	RegistrationUser    *string    `json:"registration_user"`
	Cause               *string    `json:"cause"`
	CatalogID           *string    `json:"catalog_id"`
	AxisType            *int       `json:"axis_type"`
	TransportVolume     *string    `json:"transport_volume"`
	IsReview            *bool      `json:"is_review"`
	IsDeleted           *bool      `json:"is_deleted"`
	CreatedAt           time.Time  `json:"created_at"`
	CreatedBy           string     `json:"created_by"`
	UpdatedAt           *time.Time `json:"updated_at"`
	UpdatedBy           *string    `json:"updated_by"`
	DeletedAt           *time.Time `json:"deleted_at"`
	DeletedBy           *string    `json:"deleted_by"`
}

// aggregate max on columns of table "vehicle_sale_record"
type VehicleSaleRecordMaxFields struct {
	ID                  *int64     `json:"id"`
	VehicleSaleRecordID *string    `json:"vehicle_sale_record_id"`
	Seller              *string    `json:"seller"`
	VehicleModel        *string    `json:"vehicle_model"`
	VehiclePicture      *string    `json:"vehicle_picture"`
	VehicleParameter    *string    `json:"vehicle_parameter"`
	ReferencePrice      *string    `json:"reference_price"`
	OtherMaterial       *string    `json:"other_material"`
	Remarks             *string    `json:"remarks"`
	RegistrationTime    *time.Time `json:"registration_time"`
	RegistrationUser    *string    `json:"registration_user"`
	Cause               *string    `json:"cause"`
	CatalogID           *string    `json:"catalog_id"`
	AxisType            *int       `json:"axis_type"`
	TransportVolume     *string    `json:"transport_volume"`
	IsReview            *bool      `json:"is_review"`
	IsDeleted           *bool      `json:"is_deleted"`
	CreatedAt           *time.Time `json:"created_at"`
	CreatedBy           *string    `json:"created_by"`
	UpdatedAt           *time.Time `json:"updated_at"`
	UpdatedBy           *string    `json:"updated_by"`
	DeletedAt           *time.Time `json:"deleted_at"`
	DeletedBy           *string    `json:"deleted_by"`
}

// aggregate min on columns of table "vehicle_sale_record"
type VehicleSaleRecordMinFields struct {
	ID                  *int64     `json:"id"`
	VehicleSaleRecordID *string    `json:"vehicle_sale_record_id"`
	Seller              *string    `json:"seller"`
	VehicleModel        *string    `json:"vehicle_model"`
	VehiclePicture      *string    `json:"vehicle_picture"`
	VehicleParameter    *string    `json:"vehicle_parameter"`
	ReferencePrice      *string    `json:"reference_price"`
	OtherMaterial       *string    `json:"other_material"`
	Remarks             *string    `json:"remarks"`
	RegistrationTime    *time.Time `json:"registration_time"`
	RegistrationUser    *string    `json:"registration_user"`
	Cause               *string    `json:"cause"`
	CatalogID           *string    `json:"catalog_id"`
	AxisType            *int       `json:"axis_type"`
	TransportVolume     *string    `json:"transport_volume"`
	IsReview            *bool      `json:"is_review"`
	IsDeleted           *bool      `json:"is_deleted"`
	CreatedAt           *time.Time `json:"created_at"`
	CreatedBy           *string    `json:"created_by"`
	UpdatedAt           *time.Time `json:"updated_at"`
	UpdatedBy           *string    `json:"updated_by"`
	DeletedAt           *time.Time `json:"deleted_at"`
	DeletedBy           *string    `json:"deleted_by"`
}

// response of any mutation on the table "vehicle_sale_record"
type VehicleSaleRecordMutationResponse struct {
	AffectedRows int                         `json:"affected_rows"`
	Returning    []*model1.VehicleSaleRecord `json:"returning"`
}

// ordering options when selecting data from "vehicle_sale_record"
type VehicleSaleRecordOrderBy struct {
	ID                  *model.OrderBy `json:"id"`
	VehicleSaleRecordID *model.OrderBy `json:"vehicle_sale_record_id"`
	Seller              *model.OrderBy `json:"seller"`
	VehicleModel        *model.OrderBy `json:"vehicle_model"`
	VehiclePicture      *model.OrderBy `json:"vehicle_picture"`
	VehicleParameter    *model.OrderBy `json:"vehicle_parameter"`
	ReferencePrice      *model.OrderBy `json:"reference_price"`
	OtherMaterial       *model.OrderBy `json:"other_material"`
	Remarks             *model.OrderBy `json:"remarks"`
	RegistrationTime    *model.OrderBy `json:"registration_time"`
	RegistrationUser    *model.OrderBy `json:"registration_user"`
	Cause               *model.OrderBy `json:"cause"`
	CatalogID           *model.OrderBy `json:"catalog_id"`
	AxisType            *model.OrderBy `json:"axis_type"`
	TransportVolume     *model.OrderBy `json:"transport_volume"`
	IsReview            *model.OrderBy `json:"is_review"`
	IsDeleted           *model.OrderBy `json:"is_deleted"`
	CreatedAt           *model.OrderBy `json:"created_at"`
	CreatedBy           *model.OrderBy `json:"created_by"`
	UpdatedAt           *model.OrderBy `json:"updated_at"`
	UpdatedBy           *model.OrderBy `json:"updated_by"`
	DeletedAt           *model.OrderBy `json:"deleted_at"`
	DeletedBy           *model.OrderBy `json:"deleted_by"`
}

// input type for updating data in table "vehicle_sale_record"
type VehicleSaleRecordSetInput struct {
	ID                  *int64     `json:"id"`
	VehicleSaleRecordID *string    `json:"vehicle_sale_record_id"`
	Seller              *string    `json:"seller"`
	VehicleModel        *string    `json:"vehicle_model"`
	VehiclePicture      *string    `json:"vehicle_picture"`
	VehicleParameter    *string    `json:"vehicle_parameter"`
	ReferencePrice      *string    `json:"reference_price"`
	OtherMaterial       *string    `json:"other_material"`
	Remarks             *string    `json:"remarks"`
	RegistrationTime    *time.Time `json:"registration_time"`
	RegistrationUser    *string    `json:"registration_user"`
	Cause               *string    `json:"cause"`
	CatalogID           *string    `json:"catalog_id"`
	AxisType            *int       `json:"axis_type"`
	TransportVolume     *string    `json:"transport_volume"`
	IsReview            *bool      `json:"is_review"`
	IsDeleted           *bool      `json:"is_deleted"`
	CreatedAt           *time.Time `json:"created_at"`
	CreatedBy           *string    `json:"created_by"`
	UpdatedAt           *time.Time `json:"updated_at"`
	UpdatedBy           *string    `json:"updated_by"`
	DeletedAt           *time.Time `json:"deleted_at"`
	DeletedBy           *string    `json:"deleted_by"`
}

// aggregate stddev on columns of table "vehicle_sale_record"
type VehicleSaleRecordStddevFields struct {
	ID       *int64 `json:"id"`
	AxisType *int   `json:"axis_type"`
}

// aggregate stddev_pop on columns of table "vehicle_sale_record"
type VehicleSaleRecordStddevPopFields struct {
	ID       *int64 `json:"id"`
	AxisType *int   `json:"axis_type"`
}

// aggregate stddev_samp on columns of table "vehicle_sale_record"
type VehicleSaleRecordStddevSampFields struct {
	ID       *int64 `json:"id"`
	AxisType *int   `json:"axis_type"`
}

// aggregate sum on columns of table "vehicle_sale_record"
type VehicleSaleRecordSumFields struct {
	ID       *int64 `json:"id"`
	AxisType *int   `json:"axis_type"`
}

// aggregate var_pop on columns of table "vehicle_sale_record"
type VehicleSaleRecordVarPopFields struct {
	ID       *int64 `json:"id"`
	AxisType *int   `json:"axis_type"`
}

// aggregate var_samp on columns of table "vehicle_sale_record"
type VehicleSaleRecordVarSampFields struct {
	ID       *int64 `json:"id"`
	AxisType *int   `json:"axis_type"`
}

// aggregate variance on columns of table "vehicle_sale_record"
type VehicleSaleRecordVarianceFields struct {
	ID       *int64 `json:"id"`
	AxisType *int   `json:"axis_type"`
}

// 可选select
type MuckTruckPurchaseIntentionSelectColumn string

const (
	// 按指定方法生成                                  ( 主键                                 )
	MuckTruckPurchaseIntentionSelectColumnID MuckTruckPurchaseIntentionSelectColumn = "id"
	// 外部编码，由golang程序生成的xid，暴露到外部使用 ( 联合主键                             )
	MuckTruckPurchaseIntentionSelectColumnMuckTruckPurchaseIntentionID MuckTruckPurchaseIntentionSelectColumn = "muck_truck_purchase_intention_id"
	// 供应商                                          ( enterprise_info表的enterprise_id )
	MuckTruckPurchaseIntentionSelectColumnSupplier MuckTruckPurchaseIntentionSelectColumn = "supplier"
	// 购车用户姓名
	MuckTruckPurchaseIntentionSelectColumnCustomerName MuckTruckPurchaseIntentionSelectColumn = "customer_name"
	// 购车用户电话
	MuckTruckPurchaseIntentionSelectColumnCustomerPhone MuckTruckPurchaseIntentionSelectColumn = "customer_phone"
	// 所有人企业                                      ( enterprise_info表的enterprise_id )
	MuckTruckPurchaseIntentionSelectColumnOwnerEnterprise MuckTruckPurchaseIntentionSelectColumn = "owner_enterprise"
	// 所有人所在省                                    ( 省份表province_id                )
	MuckTruckPurchaseIntentionSelectColumnProvinceID MuckTruckPurchaseIntentionSelectColumn = "province_id"
	// 所有人所在市                                    ( 城市表city_id                    )
	MuckTruckPurchaseIntentionSelectColumnCityID MuckTruckPurchaseIntentionSelectColumn = "city_id"
	// 所有人所在县                                    ( 区域表district_id                )
	MuckTruckPurchaseIntentionSelectColumnDistrictID MuckTruckPurchaseIntentionSelectColumn = "district_id"
	// 运力申请
	MuckTruckPurchaseIntentionSelectColumnCapacigyApplication MuckTruckPurchaseIntentionSelectColumn = "capacigy_application"
	// 品牌型号
	MuckTruckPurchaseIntentionSelectColumnBrandModel MuckTruckPurchaseIntentionSelectColumn = "brand_model"
	// 购车数量
	MuckTruckPurchaseIntentionSelectColumnVehiclePurchase MuckTruckPurchaseIntentionSelectColumn = "vehicle_purchase"
	// 编码
	MuckTruckPurchaseIntentionSelectColumnCode MuckTruckPurchaseIntentionSelectColumn = "code"
	// 登记日期
	MuckTruckPurchaseIntentionSelectColumnRegistrationTime MuckTruckPurchaseIntentionSelectColumn = "registration_time"
	// 登记用户                                        ( system_user表的user_id           )
	MuckTruckPurchaseIntentionSelectColumnRegistrationUser MuckTruckPurchaseIntentionSelectColumn = "registration_user"
	// 审核
	MuckTruckPurchaseIntentionSelectColumnReview MuckTruckPurchaseIntentionSelectColumn = "review"
	// 备注
	MuckTruckPurchaseIntentionSelectColumnRemarks MuckTruckPurchaseIntentionSelectColumn = "remarks"
	// 是否删除
	MuckTruckPurchaseIntentionSelectColumnIsDeleted MuckTruckPurchaseIntentionSelectColumn = "is_deleted"
	// 创建时间
	MuckTruckPurchaseIntentionSelectColumnCreatedAt MuckTruckPurchaseIntentionSelectColumn = "created_at"
	// 创建人                                          ( system_user表的user_id           )
	MuckTruckPurchaseIntentionSelectColumnCreatedBy MuckTruckPurchaseIntentionSelectColumn = "created_by"
	// 修改时间
	MuckTruckPurchaseIntentionSelectColumnUpdatedAt MuckTruckPurchaseIntentionSelectColumn = "updated_at"
	// 修改人                                          ( system_user表的user_id           )
	MuckTruckPurchaseIntentionSelectColumnUpdatedBy MuckTruckPurchaseIntentionSelectColumn = "updated_by"
	// 删除时间
	MuckTruckPurchaseIntentionSelectColumnDeletedAt MuckTruckPurchaseIntentionSelectColumn = "deleted_at"
	// 删除人                                          ( system_user表的user_id           )
	MuckTruckPurchaseIntentionSelectColumnDeletedBy MuckTruckPurchaseIntentionSelectColumn = "deleted_by"
)

var AllMuckTruckPurchaseIntentionSelectColumn = []MuckTruckPurchaseIntentionSelectColumn{
	MuckTruckPurchaseIntentionSelectColumnID,
	MuckTruckPurchaseIntentionSelectColumnMuckTruckPurchaseIntentionID,
	MuckTruckPurchaseIntentionSelectColumnSupplier,
	MuckTruckPurchaseIntentionSelectColumnCustomerName,
	MuckTruckPurchaseIntentionSelectColumnCustomerPhone,
	MuckTruckPurchaseIntentionSelectColumnOwnerEnterprise,
	MuckTruckPurchaseIntentionSelectColumnProvinceID,
	MuckTruckPurchaseIntentionSelectColumnCityID,
	MuckTruckPurchaseIntentionSelectColumnDistrictID,
	MuckTruckPurchaseIntentionSelectColumnCapacigyApplication,
	MuckTruckPurchaseIntentionSelectColumnBrandModel,
	MuckTruckPurchaseIntentionSelectColumnVehiclePurchase,
	MuckTruckPurchaseIntentionSelectColumnCode,
	MuckTruckPurchaseIntentionSelectColumnRegistrationTime,
	MuckTruckPurchaseIntentionSelectColumnRegistrationUser,
	MuckTruckPurchaseIntentionSelectColumnReview,
	MuckTruckPurchaseIntentionSelectColumnRemarks,
	MuckTruckPurchaseIntentionSelectColumnIsDeleted,
	MuckTruckPurchaseIntentionSelectColumnCreatedAt,
	MuckTruckPurchaseIntentionSelectColumnCreatedBy,
	MuckTruckPurchaseIntentionSelectColumnUpdatedAt,
	MuckTruckPurchaseIntentionSelectColumnUpdatedBy,
	MuckTruckPurchaseIntentionSelectColumnDeletedAt,
	MuckTruckPurchaseIntentionSelectColumnDeletedBy,
}

func (e MuckTruckPurchaseIntentionSelectColumn) IsValid() bool {
	switch e {
	case MuckTruckPurchaseIntentionSelectColumnID, MuckTruckPurchaseIntentionSelectColumnMuckTruckPurchaseIntentionID, MuckTruckPurchaseIntentionSelectColumnSupplier, MuckTruckPurchaseIntentionSelectColumnCustomerName, MuckTruckPurchaseIntentionSelectColumnCustomerPhone, MuckTruckPurchaseIntentionSelectColumnOwnerEnterprise, MuckTruckPurchaseIntentionSelectColumnProvinceID, MuckTruckPurchaseIntentionSelectColumnCityID, MuckTruckPurchaseIntentionSelectColumnDistrictID, MuckTruckPurchaseIntentionSelectColumnCapacigyApplication, MuckTruckPurchaseIntentionSelectColumnBrandModel, MuckTruckPurchaseIntentionSelectColumnVehiclePurchase, MuckTruckPurchaseIntentionSelectColumnCode, MuckTruckPurchaseIntentionSelectColumnRegistrationTime, MuckTruckPurchaseIntentionSelectColumnRegistrationUser, MuckTruckPurchaseIntentionSelectColumnReview, MuckTruckPurchaseIntentionSelectColumnRemarks, MuckTruckPurchaseIntentionSelectColumnIsDeleted, MuckTruckPurchaseIntentionSelectColumnCreatedAt, MuckTruckPurchaseIntentionSelectColumnCreatedBy, MuckTruckPurchaseIntentionSelectColumnUpdatedAt, MuckTruckPurchaseIntentionSelectColumnUpdatedBy, MuckTruckPurchaseIntentionSelectColumnDeletedAt, MuckTruckPurchaseIntentionSelectColumnDeletedBy:
		return true
	}
	return false
}

func (e MuckTruckPurchaseIntentionSelectColumn) String() string {
	return string(e)
}

func (e *MuckTruckPurchaseIntentionSelectColumn) UnmarshalGQL(v interface{}) error {
	str, ok := v.(string)
	if !ok {
		return fmt.Errorf("enums must be strings")
	}

	*e = MuckTruckPurchaseIntentionSelectColumn(str)
	if !e.IsValid() {
		return fmt.Errorf("%s is not a valid MuckTruckPurchaseIntentionSelectColumn", str)
	}
	return nil
}

func (e MuckTruckPurchaseIntentionSelectColumn) MarshalGQL(w io.Writer) {
	fmt.Fprint(w, strconv.Quote(e.String()))
}

// 可选select
type MuckTruckSaleOrderDetailSelectColumn string

const (
	// 按指定方法生成                                  ( 主键                                                         )
	MuckTruckSaleOrderDetailSelectColumnID MuckTruckSaleOrderDetailSelectColumn = "id"
	// 外部编码，由golang程序生成的xid，暴露到外部使用 ( 联合主键                                                     )
	MuckTruckSaleOrderDetailSelectColumnMuckTruckSaleOrderDetailID MuckTruckSaleOrderDetailSelectColumn = "muck_truck_sale_order_detail_id"
	// 订单号                                          ( muck_truck_sale_order 新型渣土车销售订单的muck_truck_sale_order_id )
	MuckTruckSaleOrderDetailSelectColumnOrderID MuckTruckSaleOrderDetailSelectColumn = "order_id"
	// 车架号(后6位)                                   ( 车辆识别代号vin,如D02133                                     )
	MuckTruckSaleOrderDetailSelectColumnVehicleIdentificationNumber MuckTruckSaleOrderDetailSelectColumn = "vehicle_identification_number"
	// 合格证
	MuckTruckSaleOrderDetailSelectColumnCertificate MuckTruckSaleOrderDetailSelectColumn = "certificate"
	// 终端证明
	MuckTruckSaleOrderDetailSelectColumnTerminalProof MuckTruckSaleOrderDetailSelectColumn = "terminal_proof"
	// 行驶证(照片)
	MuckTruckSaleOrderDetailSelectColumnDriverLicensePic MuckTruckSaleOrderDetailSelectColumn = "driver_license_pic"
	// 车牌号码
	MuckTruckSaleOrderDetailSelectColumnLicensePlateNumber MuckTruckSaleOrderDetailSelectColumn = "license_plate_number"
	// 车牌颜色                                        ( 车牌颜色字典                                             )
	MuckTruckSaleOrderDetailSelectColumnLicensePlateColor MuckTruckSaleOrderDetailSelectColumn = "license_plate_color"
	// 号牌种类                                        ( 号牌种类字典                                             )
	MuckTruckSaleOrderDetailSelectColumnLicensePlateType MuckTruckSaleOrderDetailSelectColumn = "license_plate_type"
	// 抵达泉州日期
	MuckTruckSaleOrderDetailSelectColumnArriveQzDate MuckTruckSaleOrderDetailSelectColumn = "arrive_qz_date"
	// 初次登记日期
	MuckTruckSaleOrderDetailSelectColumnFirstRegistrationDate MuckTruckSaleOrderDetailSelectColumn = "first_registration_date"
	// 登记时间
	MuckTruckSaleOrderDetailSelectColumnRegistrationDate MuckTruckSaleOrderDetailSelectColumn = "registration_date"
	// 步骤(销售订单登记进度（2.到车登记 3.上牌登记）)
	MuckTruckSaleOrderDetailSelectColumnStep MuckTruckSaleOrderDetailSelectColumn = "step"
	// 车辆照片
	MuckTruckSaleOrderDetailSelectColumnVehiclePhoto MuckTruckSaleOrderDetailSelectColumn = "vehicle_photo"
	// 供应商销售预编号
	MuckTruckSaleOrderDetailSelectColumnSellerPreviewNumber MuckTruckSaleOrderDetailSelectColumn = "seller_preview_number"
	// 是否删除
	MuckTruckSaleOrderDetailSelectColumnIsDeleted MuckTruckSaleOrderDetailSelectColumn = "is_deleted"
	// 创建时间
	MuckTruckSaleOrderDetailSelectColumnCreatedAt MuckTruckSaleOrderDetailSelectColumn = "created_at"
	// 创建人                                          ( system_user表的user_id                                   )
	MuckTruckSaleOrderDetailSelectColumnCreatedBy MuckTruckSaleOrderDetailSelectColumn = "created_by"
	// 修改时间
	MuckTruckSaleOrderDetailSelectColumnUpdatedAt MuckTruckSaleOrderDetailSelectColumn = "updated_at"
	// 修改人                                          ( system_user表的user_id                                   )
	MuckTruckSaleOrderDetailSelectColumnUpdatedBy MuckTruckSaleOrderDetailSelectColumn = "updated_by"
	// 删除时间
	MuckTruckSaleOrderDetailSelectColumnDeletedAt MuckTruckSaleOrderDetailSelectColumn = "deleted_at"
	// 删除人                                          ( system_user表的user_id                                   )
	MuckTruckSaleOrderDetailSelectColumnDeletedBy MuckTruckSaleOrderDetailSelectColumn = "deleted_by"
)

var AllMuckTruckSaleOrderDetailSelectColumn = []MuckTruckSaleOrderDetailSelectColumn{
	MuckTruckSaleOrderDetailSelectColumnID,
	MuckTruckSaleOrderDetailSelectColumnMuckTruckSaleOrderDetailID,
	MuckTruckSaleOrderDetailSelectColumnOrderID,
	MuckTruckSaleOrderDetailSelectColumnVehicleIdentificationNumber,
	MuckTruckSaleOrderDetailSelectColumnCertificate,
	MuckTruckSaleOrderDetailSelectColumnTerminalProof,
	MuckTruckSaleOrderDetailSelectColumnDriverLicensePic,
	MuckTruckSaleOrderDetailSelectColumnLicensePlateNumber,
	MuckTruckSaleOrderDetailSelectColumnLicensePlateColor,
	MuckTruckSaleOrderDetailSelectColumnLicensePlateType,
	MuckTruckSaleOrderDetailSelectColumnArriveQzDate,
	MuckTruckSaleOrderDetailSelectColumnFirstRegistrationDate,
	MuckTruckSaleOrderDetailSelectColumnRegistrationDate,
	MuckTruckSaleOrderDetailSelectColumnStep,
	MuckTruckSaleOrderDetailSelectColumnVehiclePhoto,
	MuckTruckSaleOrderDetailSelectColumnSellerPreviewNumber,
	MuckTruckSaleOrderDetailSelectColumnIsDeleted,
	MuckTruckSaleOrderDetailSelectColumnCreatedAt,
	MuckTruckSaleOrderDetailSelectColumnCreatedBy,
	MuckTruckSaleOrderDetailSelectColumnUpdatedAt,
	MuckTruckSaleOrderDetailSelectColumnUpdatedBy,
	MuckTruckSaleOrderDetailSelectColumnDeletedAt,
	MuckTruckSaleOrderDetailSelectColumnDeletedBy,
}

func (e MuckTruckSaleOrderDetailSelectColumn) IsValid() bool {
	switch e {
	case MuckTruckSaleOrderDetailSelectColumnID, MuckTruckSaleOrderDetailSelectColumnMuckTruckSaleOrderDetailID, MuckTruckSaleOrderDetailSelectColumnOrderID, MuckTruckSaleOrderDetailSelectColumnVehicleIdentificationNumber, MuckTruckSaleOrderDetailSelectColumnCertificate, MuckTruckSaleOrderDetailSelectColumnTerminalProof, MuckTruckSaleOrderDetailSelectColumnDriverLicensePic, MuckTruckSaleOrderDetailSelectColumnLicensePlateNumber, MuckTruckSaleOrderDetailSelectColumnLicensePlateColor, MuckTruckSaleOrderDetailSelectColumnLicensePlateType, MuckTruckSaleOrderDetailSelectColumnArriveQzDate, MuckTruckSaleOrderDetailSelectColumnFirstRegistrationDate, MuckTruckSaleOrderDetailSelectColumnRegistrationDate, MuckTruckSaleOrderDetailSelectColumnStep, MuckTruckSaleOrderDetailSelectColumnVehiclePhoto, MuckTruckSaleOrderDetailSelectColumnSellerPreviewNumber, MuckTruckSaleOrderDetailSelectColumnIsDeleted, MuckTruckSaleOrderDetailSelectColumnCreatedAt, MuckTruckSaleOrderDetailSelectColumnCreatedBy, MuckTruckSaleOrderDetailSelectColumnUpdatedAt, MuckTruckSaleOrderDetailSelectColumnUpdatedBy, MuckTruckSaleOrderDetailSelectColumnDeletedAt, MuckTruckSaleOrderDetailSelectColumnDeletedBy:
		return true
	}
	return false
}

func (e MuckTruckSaleOrderDetailSelectColumn) String() string {
	return string(e)
}

func (e *MuckTruckSaleOrderDetailSelectColumn) UnmarshalGQL(v interface{}) error {
	str, ok := v.(string)
	if !ok {
		return fmt.Errorf("enums must be strings")
	}

	*e = MuckTruckSaleOrderDetailSelectColumn(str)
	if !e.IsValid() {
		return fmt.Errorf("%s is not a valid MuckTruckSaleOrderDetailSelectColumn", str)
	}
	return nil
}

func (e MuckTruckSaleOrderDetailSelectColumn) MarshalGQL(w io.Writer) {
	fmt.Fprint(w, strconv.Quote(e.String()))
}

// 可选select
type MuckTruckSaleOrderSelectColumn string

const (
	// 按指定方法生成                                  ( 主键                                     )
	MuckTruckSaleOrderSelectColumnID MuckTruckSaleOrderSelectColumn = "id"
	// 外部编码，由golang程序生成的xid，暴露到外部使用 ( 联合主键                                 )
	MuckTruckSaleOrderSelectColumnMuckTruckSaleOrderID MuckTruckSaleOrderSelectColumn = "muck_truck_sale_order_id"
	// 顾客企业id
	MuckTruckSaleOrderSelectColumnCustomerName MuckTruckSaleOrderSelectColumn = "customer_name"
	// 购车企业或个人姓名                              ( enterprise_info表的enterprise_id     )
	MuckTruckSaleOrderSelectColumnCustomerID MuckTruckSaleOrderSelectColumn = "customer_id"
	// 身份证号
	MuckTruckSaleOrderSelectColumnIDCardNum MuckTruckSaleOrderSelectColumn = "id_card_num"
	// 联系电话
	MuckTruckSaleOrderSelectColumnContactPhone MuckTruckSaleOrderSelectColumn = "contact_phone"
	// 告知书
	MuckTruckSaleOrderSelectColumnNotification MuckTruckSaleOrderSelectColumn = "notification"
	// 汽车销售合同(销售合同照片地址)
	MuckTruckSaleOrderSelectColumnVehicleSaleContract MuckTruckSaleOrderSelectColumn = "vehicle_sale_contract"
	// 订金合同(订金合同照片地址)
	MuckTruckSaleOrderSelectColumnVehicleDepositContract MuckTruckSaleOrderSelectColumn = "vehicle_deposit_contract"
	// 承诺书
	MuckTruckSaleOrderSelectColumnCommitment MuckTruckSaleOrderSelectColumn = "commitment"
	// 订车日期
	MuckTruckSaleOrderSelectColumnBookDate MuckTruckSaleOrderSelectColumn = "book_date"
	// 登记时间
	MuckTruckSaleOrderSelectColumnRegistrationTime MuckTruckSaleOrderSelectColumn = "registration_time"
	// 所属单位
	MuckTruckSaleOrderSelectColumnBelongingEnterprise MuckTruckSaleOrderSelectColumn = "belonging_enterprise"
	// 身份证(身份证照片路径)
	MuckTruckSaleOrderSelectColumnIDCardPicture MuckTruckSaleOrderSelectColumn = "id_card_picture"
	// 进度
	MuckTruckSaleOrderSelectColumnProgress MuckTruckSaleOrderSelectColumn = "progress"
	// 汽车型号                                        ( vehicle_sale_record 汽车销售备案的id )
	MuckTruckSaleOrderSelectColumnVehicleSaleRecordID MuckTruckSaleOrderSelectColumn = "vehicle_sale_record_id"
	// 订购车辆数
	MuckTruckSaleOrderSelectColumnBookVehicleNumber MuckTruckSaleOrderSelectColumn = "book_vehicle_number"
	// 整车长度
	MuckTruckSaleOrderSelectColumnVehicleLength MuckTruckSaleOrderSelectColumn = "vehicle_length"
	// 整车宽度
	MuckTruckSaleOrderSelectColumnVehicleWidth MuckTruckSaleOrderSelectColumn = "vehicle_width"
	// 整车高度
	MuckTruckSaleOrderSelectColumnVehicleHeight MuckTruckSaleOrderSelectColumn = "vehicle_height"
	// 自卸车长度
	MuckTruckSaleOrderSelectColumnTipperLength MuckTruckSaleOrderSelectColumn = "tipper_length"
	// 自卸车宽度
	MuckTruckSaleOrderSelectColumnTipperWidth MuckTruckSaleOrderSelectColumn = "tipper_width"
	// 自卸车高度
	MuckTruckSaleOrderSelectColumnTipperHeight MuckTruckSaleOrderSelectColumn = "tipper_height"
	// 罐车标注容积
	MuckTruckSaleOrderSelectColumnTankTruckMarkedVolume MuckTruckSaleOrderSelectColumn = "tank_truck_marked_volume"
	// 罐车实际搅动容积
	MuckTruckSaleOrderSelectColumnTankTruckActualVolume MuckTruckSaleOrderSelectColumn = "tank_truck_actual_volume"
	// 车厢密闭装置
	MuckTruckSaleOrderSelectColumnCarriageSealingDevice MuckTruckSaleOrderSelectColumn = "carriage_sealing_device"
	// U型货箱
	MuckTruckSaleOrderSelectColumnUShapedCargoBox MuckTruckSaleOrderSelectColumn = "u_shaped_cargo_box"
	// 是否其他汽车型号
	MuckTruckSaleOrderSelectColumnIsOtherVehicleModel MuckTruckSaleOrderSelectColumn = "is_other_vehicle_model"
	// 是否完成
	MuckTruckSaleOrderSelectColumnIsCompleted MuckTruckSaleOrderSelectColumn = "is_completed"
	// 是否删除
	MuckTruckSaleOrderSelectColumnIsDeleted MuckTruckSaleOrderSelectColumn = "is_deleted"
	// 创建时间
	MuckTruckSaleOrderSelectColumnCreatedAt MuckTruckSaleOrderSelectColumn = "created_at"
	// 创建人                                          ( system_user表的user_id               )
	MuckTruckSaleOrderSelectColumnCreatedBy MuckTruckSaleOrderSelectColumn = "created_by"
	// 修改时间
	MuckTruckSaleOrderSelectColumnUpdatedAt MuckTruckSaleOrderSelectColumn = "updated_at"
	// 修改人                                          ( system_user表的user_id               )
	MuckTruckSaleOrderSelectColumnUpdatedBy MuckTruckSaleOrderSelectColumn = "updated_by"
	// 删除时间
	MuckTruckSaleOrderSelectColumnDeletedAt MuckTruckSaleOrderSelectColumn = "deleted_at"
	// 删除人                                          ( system_user表的user_id               )
	MuckTruckSaleOrderSelectColumnDeletedBy MuckTruckSaleOrderSelectColumn = "deleted_by"
)

var AllMuckTruckSaleOrderSelectColumn = []MuckTruckSaleOrderSelectColumn{
	MuckTruckSaleOrderSelectColumnID,
	MuckTruckSaleOrderSelectColumnMuckTruckSaleOrderID,
	MuckTruckSaleOrderSelectColumnCustomerName,
	MuckTruckSaleOrderSelectColumnCustomerID,
	MuckTruckSaleOrderSelectColumnIDCardNum,
	MuckTruckSaleOrderSelectColumnContactPhone,
	MuckTruckSaleOrderSelectColumnNotification,
	MuckTruckSaleOrderSelectColumnVehicleSaleContract,
	MuckTruckSaleOrderSelectColumnVehicleDepositContract,
	MuckTruckSaleOrderSelectColumnCommitment,
	MuckTruckSaleOrderSelectColumnBookDate,
	MuckTruckSaleOrderSelectColumnRegistrationTime,
	MuckTruckSaleOrderSelectColumnBelongingEnterprise,
	MuckTruckSaleOrderSelectColumnIDCardPicture,
	MuckTruckSaleOrderSelectColumnProgress,
	MuckTruckSaleOrderSelectColumnVehicleSaleRecordID,
	MuckTruckSaleOrderSelectColumnBookVehicleNumber,
	MuckTruckSaleOrderSelectColumnVehicleLength,
	MuckTruckSaleOrderSelectColumnVehicleWidth,
	MuckTruckSaleOrderSelectColumnVehicleHeight,
	MuckTruckSaleOrderSelectColumnTipperLength,
	MuckTruckSaleOrderSelectColumnTipperWidth,
	MuckTruckSaleOrderSelectColumnTipperHeight,
	MuckTruckSaleOrderSelectColumnTankTruckMarkedVolume,
	MuckTruckSaleOrderSelectColumnTankTruckActualVolume,
	MuckTruckSaleOrderSelectColumnCarriageSealingDevice,
	MuckTruckSaleOrderSelectColumnUShapedCargoBox,
	MuckTruckSaleOrderSelectColumnIsOtherVehicleModel,
	MuckTruckSaleOrderSelectColumnIsCompleted,
	MuckTruckSaleOrderSelectColumnIsDeleted,
	MuckTruckSaleOrderSelectColumnCreatedAt,
	MuckTruckSaleOrderSelectColumnCreatedBy,
	MuckTruckSaleOrderSelectColumnUpdatedAt,
	MuckTruckSaleOrderSelectColumnUpdatedBy,
	MuckTruckSaleOrderSelectColumnDeletedAt,
	MuckTruckSaleOrderSelectColumnDeletedBy,
}

func (e MuckTruckSaleOrderSelectColumn) IsValid() bool {
	switch e {
	case MuckTruckSaleOrderSelectColumnID, MuckTruckSaleOrderSelectColumnMuckTruckSaleOrderID, MuckTruckSaleOrderSelectColumnCustomerName, MuckTruckSaleOrderSelectColumnCustomerID, MuckTruckSaleOrderSelectColumnIDCardNum, MuckTruckSaleOrderSelectColumnContactPhone, MuckTruckSaleOrderSelectColumnNotification, MuckTruckSaleOrderSelectColumnVehicleSaleContract, MuckTruckSaleOrderSelectColumnVehicleDepositContract, MuckTruckSaleOrderSelectColumnCommitment, MuckTruckSaleOrderSelectColumnBookDate, MuckTruckSaleOrderSelectColumnRegistrationTime, MuckTruckSaleOrderSelectColumnBelongingEnterprise, MuckTruckSaleOrderSelectColumnIDCardPicture, MuckTruckSaleOrderSelectColumnProgress, MuckTruckSaleOrderSelectColumnVehicleSaleRecordID, MuckTruckSaleOrderSelectColumnBookVehicleNumber, MuckTruckSaleOrderSelectColumnVehicleLength, MuckTruckSaleOrderSelectColumnVehicleWidth, MuckTruckSaleOrderSelectColumnVehicleHeight, MuckTruckSaleOrderSelectColumnTipperLength, MuckTruckSaleOrderSelectColumnTipperWidth, MuckTruckSaleOrderSelectColumnTipperHeight, MuckTruckSaleOrderSelectColumnTankTruckMarkedVolume, MuckTruckSaleOrderSelectColumnTankTruckActualVolume, MuckTruckSaleOrderSelectColumnCarriageSealingDevice, MuckTruckSaleOrderSelectColumnUShapedCargoBox, MuckTruckSaleOrderSelectColumnIsOtherVehicleModel, MuckTruckSaleOrderSelectColumnIsCompleted, MuckTruckSaleOrderSelectColumnIsDeleted, MuckTruckSaleOrderSelectColumnCreatedAt, MuckTruckSaleOrderSelectColumnCreatedBy, MuckTruckSaleOrderSelectColumnUpdatedAt, MuckTruckSaleOrderSelectColumnUpdatedBy, MuckTruckSaleOrderSelectColumnDeletedAt, MuckTruckSaleOrderSelectColumnDeletedBy:
		return true
	}
	return false
}

func (e MuckTruckSaleOrderSelectColumn) String() string {
	return string(e)
}

func (e *MuckTruckSaleOrderSelectColumn) UnmarshalGQL(v interface{}) error {
	str, ok := v.(string)
	if !ok {
		return fmt.Errorf("enums must be strings")
	}

	*e = MuckTruckSaleOrderSelectColumn(str)
	if !e.IsValid() {
		return fmt.Errorf("%s is not a valid MuckTruckSaleOrderSelectColumn", str)
	}
	return nil
}

func (e MuckTruckSaleOrderSelectColumn) MarshalGQL(w io.Writer) {
	fmt.Fprint(w, strconv.Quote(e.String()))
}

// 可选select
type NewMuckTruckInfoSelectColumn string

const (
	// 按指定方法生成                                  ( 主键                           )
	NewMuckTruckInfoSelectColumnID NewMuckTruckInfoSelectColumn = "id"
	// 外部编码，由golang程序生成的xid，暴露到外部使用 ( 联合主键                       )
	NewMuckTruckInfoSelectColumnNewMuckTruckInfoID NewMuckTruckInfoSelectColumn = "new_muck_truck_info_id"
	// 扣分车辆id                                      ( vehicle_info表的vehicle_id )
	NewMuckTruckInfoSelectColumnVehicleID NewMuckTruckInfoSelectColumn = "vehicle_id"
	// 车牌号
	NewMuckTruckInfoSelectColumnLicensePlateNumber NewMuckTruckInfoSelectColumn = "license_plate_number"
	// 登记注册时间
	NewMuckTruckInfoSelectColumnRegistrationTime NewMuckTruckInfoSelectColumn = "registration_time"
	// 排放标准
	NewMuckTruckInfoSelectColumnEmissionStandard NewMuckTruckInfoSelectColumn = "emission_standard"
	// 是否U型货箱
	NewMuckTruckInfoSelectColumnIsUShapedCargoBox NewMuckTruckInfoSelectColumn = "is_u_shaped_cargo_box"
	// 长
	NewMuckTruckInfoSelectColumnLength NewMuckTruckInfoSelectColumn = "length"
	// 宽
	NewMuckTruckInfoSelectColumnWidth NewMuckTruckInfoSelectColumn = "width"
	// 高
	NewMuckTruckInfoSelectColumnHeight NewMuckTruckInfoSelectColumn = "height"
	// 密封设备
	NewMuckTruckInfoSelectColumnSealingDevice NewMuckTruckInfoSelectColumn = "sealing_device"
	// 顶盖高度
	NewMuckTruckInfoSelectColumnTopCoverHeight NewMuckTruckInfoSelectColumn = "top_cover_height"
	// 创建时间
	NewMuckTruckInfoSelectColumnCreatedAt NewMuckTruckInfoSelectColumn = "created_at"
	// 创建人                                          ( system_user表的user_id     )
	NewMuckTruckInfoSelectColumnCreatedBy NewMuckTruckInfoSelectColumn = "created_by"
	// 修改时间
	NewMuckTruckInfoSelectColumnUpdatedAt NewMuckTruckInfoSelectColumn = "updated_at"
	// 修改人                                          ( system_user表的user_id     )
	NewMuckTruckInfoSelectColumnUpdatedBy NewMuckTruckInfoSelectColumn = "updated_by"
	// 删除时间
	NewMuckTruckInfoSelectColumnDeletedAt NewMuckTruckInfoSelectColumn = "deleted_at"
	// 删除人                                          ( system_user表的user_id     )
	NewMuckTruckInfoSelectColumnDeletedBy NewMuckTruckInfoSelectColumn = "deleted_by"
)

var AllNewMuckTruckInfoSelectColumn = []NewMuckTruckInfoSelectColumn{
	NewMuckTruckInfoSelectColumnID,
	NewMuckTruckInfoSelectColumnNewMuckTruckInfoID,
	NewMuckTruckInfoSelectColumnVehicleID,
	NewMuckTruckInfoSelectColumnLicensePlateNumber,
	NewMuckTruckInfoSelectColumnRegistrationTime,
	NewMuckTruckInfoSelectColumnEmissionStandard,
	NewMuckTruckInfoSelectColumnIsUShapedCargoBox,
	NewMuckTruckInfoSelectColumnLength,
	NewMuckTruckInfoSelectColumnWidth,
	NewMuckTruckInfoSelectColumnHeight,
	NewMuckTruckInfoSelectColumnSealingDevice,
	NewMuckTruckInfoSelectColumnTopCoverHeight,
	NewMuckTruckInfoSelectColumnCreatedAt,
	NewMuckTruckInfoSelectColumnCreatedBy,
	NewMuckTruckInfoSelectColumnUpdatedAt,
	NewMuckTruckInfoSelectColumnUpdatedBy,
	NewMuckTruckInfoSelectColumnDeletedAt,
	NewMuckTruckInfoSelectColumnDeletedBy,
}

func (e NewMuckTruckInfoSelectColumn) IsValid() bool {
	switch e {
	case NewMuckTruckInfoSelectColumnID, NewMuckTruckInfoSelectColumnNewMuckTruckInfoID, NewMuckTruckInfoSelectColumnVehicleID, NewMuckTruckInfoSelectColumnLicensePlateNumber, NewMuckTruckInfoSelectColumnRegistrationTime, NewMuckTruckInfoSelectColumnEmissionStandard, NewMuckTruckInfoSelectColumnIsUShapedCargoBox, NewMuckTruckInfoSelectColumnLength, NewMuckTruckInfoSelectColumnWidth, NewMuckTruckInfoSelectColumnHeight, NewMuckTruckInfoSelectColumnSealingDevice, NewMuckTruckInfoSelectColumnTopCoverHeight, NewMuckTruckInfoSelectColumnCreatedAt, NewMuckTruckInfoSelectColumnCreatedBy, NewMuckTruckInfoSelectColumnUpdatedAt, NewMuckTruckInfoSelectColumnUpdatedBy, NewMuckTruckInfoSelectColumnDeletedAt, NewMuckTruckInfoSelectColumnDeletedBy:
		return true
	}
	return false
}

func (e NewMuckTruckInfoSelectColumn) String() string {
	return string(e)
}

func (e *NewMuckTruckInfoSelectColumn) UnmarshalGQL(v interface{}) error {
	str, ok := v.(string)
	if !ok {
		return fmt.Errorf("enums must be strings")
	}

	*e = NewMuckTruckInfoSelectColumn(str)
	if !e.IsValid() {
		return fmt.Errorf("%s is not a valid NewMuckTruckInfoSelectColumn", str)
	}
	return nil
}

func (e NewMuckTruckInfoSelectColumn) MarshalGQL(w io.Writer) {
	fmt.Fprint(w, strconv.Quote(e.String()))
}

// 可选select
type NewMuckTruckPhotoSelectColumn string

const (
	// 按指定方法生成                                  ( 主键                           )
	NewMuckTruckPhotoSelectColumnID NewMuckTruckPhotoSelectColumn = "id"
	// 外部编码，由golang程序生成的xid，暴露到外部使用 ( 联合主键                       )
	NewMuckTruckPhotoSelectColumnNewMuckTruckPhotoID NewMuckTruckPhotoSelectColumn = "new_muck_truck_photo_id"
	// 扣分车辆id                                      ( vehicle_info表的vehicle_id )
	NewMuckTruckPhotoSelectColumnVehicleID NewMuckTruckPhotoSelectColumn = "vehicle_id"
	// 路径
	NewMuckTruckPhotoSelectColumnFilePath NewMuckTruckPhotoSelectColumn = "file_path"
	// 上传用户                                        ( system_user表的user_id     )
	NewMuckTruckPhotoSelectColumnUploadUser NewMuckTruckPhotoSelectColumn = "upload_user"
	// 创建时间
	NewMuckTruckPhotoSelectColumnCreatedAt NewMuckTruckPhotoSelectColumn = "created_at"
	// 创建人                                          ( system_user表的user_id     )
	NewMuckTruckPhotoSelectColumnCreatedBy NewMuckTruckPhotoSelectColumn = "created_by"
	// 修改时间
	NewMuckTruckPhotoSelectColumnUpdatedAt NewMuckTruckPhotoSelectColumn = "updated_at"
	// 修改人                                          ( system_user表的user_id     )
	NewMuckTruckPhotoSelectColumnUpdatedBy NewMuckTruckPhotoSelectColumn = "updated_by"
	// 删除时间
	NewMuckTruckPhotoSelectColumnDeletedAt NewMuckTruckPhotoSelectColumn = "deleted_at"
	// 删除人                                          ( system_user表的user_id     )
	NewMuckTruckPhotoSelectColumnDeletedBy NewMuckTruckPhotoSelectColumn = "deleted_by"
)

var AllNewMuckTruckPhotoSelectColumn = []NewMuckTruckPhotoSelectColumn{
	NewMuckTruckPhotoSelectColumnID,
	NewMuckTruckPhotoSelectColumnNewMuckTruckPhotoID,
	NewMuckTruckPhotoSelectColumnVehicleID,
	NewMuckTruckPhotoSelectColumnFilePath,
	NewMuckTruckPhotoSelectColumnUploadUser,
	NewMuckTruckPhotoSelectColumnCreatedAt,
	NewMuckTruckPhotoSelectColumnCreatedBy,
	NewMuckTruckPhotoSelectColumnUpdatedAt,
	NewMuckTruckPhotoSelectColumnUpdatedBy,
	NewMuckTruckPhotoSelectColumnDeletedAt,
	NewMuckTruckPhotoSelectColumnDeletedBy,
}

func (e NewMuckTruckPhotoSelectColumn) IsValid() bool {
	switch e {
	case NewMuckTruckPhotoSelectColumnID, NewMuckTruckPhotoSelectColumnNewMuckTruckPhotoID, NewMuckTruckPhotoSelectColumnVehicleID, NewMuckTruckPhotoSelectColumnFilePath, NewMuckTruckPhotoSelectColumnUploadUser, NewMuckTruckPhotoSelectColumnCreatedAt, NewMuckTruckPhotoSelectColumnCreatedBy, NewMuckTruckPhotoSelectColumnUpdatedAt, NewMuckTruckPhotoSelectColumnUpdatedBy, NewMuckTruckPhotoSelectColumnDeletedAt, NewMuckTruckPhotoSelectColumnDeletedBy:
		return true
	}
	return false
}

func (e NewMuckTruckPhotoSelectColumn) String() string {
	return string(e)
}

func (e *NewMuckTruckPhotoSelectColumn) UnmarshalGQL(v interface{}) error {
	str, ok := v.(string)
	if !ok {
		return fmt.Errorf("enums must be strings")
	}

	*e = NewMuckTruckPhotoSelectColumn(str)
	if !e.IsValid() {
		return fmt.Errorf("%s is not a valid NewMuckTruckPhotoSelectColumn", str)
	}
	return nil
}

func (e NewMuckTruckPhotoSelectColumn) MarshalGQL(w io.Writer) {
	fmt.Fprint(w, strconv.Quote(e.String()))
}

// 可选select
type NewMuckTruckRecommendCatalogSelectColumn string

const (
	// 按指定方法生成                                  ( 主键                       )
	NewMuckTruckRecommendCatalogSelectColumnID NewMuckTruckRecommendCatalogSelectColumn = "id"
	// 外部编码，由golang程序生成的xid，暴露到外部使用 ( 联合主键                   )
	NewMuckTruckRecommendCatalogSelectColumnNewMuckTruckRecommendCatalogID NewMuckTruckRecommendCatalogSelectColumn = "new_muck_truck_recommend_catalog_id"
	// 品牌简称
	NewMuckTruckRecommendCatalogSelectColumnBrandName NewMuckTruckRecommendCatalogSelectColumn = "brand_name"
	// 创建时间
	NewMuckTruckRecommendCatalogSelectColumnCreatedAt NewMuckTruckRecommendCatalogSelectColumn = "created_at"
	// 创建人                                          ( system_user表的user_id )
	NewMuckTruckRecommendCatalogSelectColumnCreatedBy NewMuckTruckRecommendCatalogSelectColumn = "created_by"
	// 修改时间
	NewMuckTruckRecommendCatalogSelectColumnUpdatedAt NewMuckTruckRecommendCatalogSelectColumn = "updated_at"
	// 修改人                                          ( system_user表的user_id )
	NewMuckTruckRecommendCatalogSelectColumnUpdatedBy NewMuckTruckRecommendCatalogSelectColumn = "updated_by"
	// 删除时间
	NewMuckTruckRecommendCatalogSelectColumnDeletedAt NewMuckTruckRecommendCatalogSelectColumn = "deleted_at"
	// 删除人                                          ( system_user表的user_id )
	NewMuckTruckRecommendCatalogSelectColumnDeletedBy NewMuckTruckRecommendCatalogSelectColumn = "deleted_by"
)

var AllNewMuckTruckRecommendCatalogSelectColumn = []NewMuckTruckRecommendCatalogSelectColumn{
	NewMuckTruckRecommendCatalogSelectColumnID,
	NewMuckTruckRecommendCatalogSelectColumnNewMuckTruckRecommendCatalogID,
	NewMuckTruckRecommendCatalogSelectColumnBrandName,
	NewMuckTruckRecommendCatalogSelectColumnCreatedAt,
	NewMuckTruckRecommendCatalogSelectColumnCreatedBy,
	NewMuckTruckRecommendCatalogSelectColumnUpdatedAt,
	NewMuckTruckRecommendCatalogSelectColumnUpdatedBy,
	NewMuckTruckRecommendCatalogSelectColumnDeletedAt,
	NewMuckTruckRecommendCatalogSelectColumnDeletedBy,
}

func (e NewMuckTruckRecommendCatalogSelectColumn) IsValid() bool {
	switch e {
	case NewMuckTruckRecommendCatalogSelectColumnID, NewMuckTruckRecommendCatalogSelectColumnNewMuckTruckRecommendCatalogID, NewMuckTruckRecommendCatalogSelectColumnBrandName, NewMuckTruckRecommendCatalogSelectColumnCreatedAt, NewMuckTruckRecommendCatalogSelectColumnCreatedBy, NewMuckTruckRecommendCatalogSelectColumnUpdatedAt, NewMuckTruckRecommendCatalogSelectColumnUpdatedBy, NewMuckTruckRecommendCatalogSelectColumnDeletedAt, NewMuckTruckRecommendCatalogSelectColumnDeletedBy:
		return true
	}
	return false
}

func (e NewMuckTruckRecommendCatalogSelectColumn) String() string {
	return string(e)
}

func (e *NewMuckTruckRecommendCatalogSelectColumn) UnmarshalGQL(v interface{}) error {
	str, ok := v.(string)
	if !ok {
		return fmt.Errorf("enums must be strings")
	}

	*e = NewMuckTruckRecommendCatalogSelectColumn(str)
	if !e.IsValid() {
		return fmt.Errorf("%s is not a valid NewMuckTruckRecommendCatalogSelectColumn", str)
	}
	return nil
}

func (e NewMuckTruckRecommendCatalogSelectColumn) MarshalGQL(w io.Writer) {
	fmt.Fprint(w, strconv.Quote(e.String()))
}

// 可选select
type SellerFilingSelectColumn string

const (
	// 按指定方法生成                                  ( 主键                                                    )
	SellerFilingSelectColumnID SellerFilingSelectColumn = "id"
	// 外部编码，由golang程序生成的xid，暴露到外部使用 ( 联合主键                                                )
	SellerFilingSelectColumnSellerFilingID SellerFilingSelectColumn = "seller_filing_id"
	// 销售商                                          ( enterprise_info表的enterprise_id                    )
	SellerFilingSelectColumnSeller SellerFilingSelectColumn = "seller"
	// 工商营业执照
	SellerFilingSelectColumnBusinessLicense SellerFilingSelectColumn = "business_license"
	// 组织机构代码证
	SellerFilingSelectColumnOrganizationCode SellerFilingSelectColumn = "organization_code"
	// 法人代表身份证
	SellerFilingSelectColumnLegalRepresentativeIDCard SellerFilingSelectColumn = "legal_representative_id_card"
	// 委托代理人身份证
	SellerFilingSelectColumnEntrustedAgentIDCard SellerFilingSelectColumn = "entrusted_agent_id_card"
	// 工信部汽车生产销售许可证明
	SellerFilingSelectColumnMinistryProductionSalePermit SellerFilingSelectColumn = "ministry_production_sale_permit"
	// 行业自律承诺书
	SellerFilingSelectColumnIndustrySelfDisciplineCommitment SellerFilingSelectColumn = "industry_self_discipline_commitment"
	// 汽车厂家汽车销售许可证明
	SellerFilingSelectColumnManufacturerProductionSalePermit SellerFilingSelectColumn = "manufacturer_production_sale_permit"
	// 维修服务服务站名称
	SellerFilingSelectColumnRepairServiceStationName SellerFilingSelectColumn = "repair_service_station_name"
	// 维修服务服务站地址
	SellerFilingSelectColumnRepairServiceStationAddress SellerFilingSelectColumn = "repair_service_station_address"
	// 维修服务服务站相关材料
	SellerFilingSelectColumnRepairServiceStationMaterial SellerFilingSelectColumn = "repair_service_station_material"
	// 服务人员名称
	SellerFilingSelectColumnServiceStaffName SellerFilingSelectColumn = "service_staff_name"
	// 服务人员电话
	SellerFilingSelectColumnServiceStaffPhone SellerFilingSelectColumn = "service_staff_phone"
	// 服务人员身份证
	SellerFilingSelectColumnServiceStaffID SellerFilingSelectColumn = "service_staff_id"
	// 服务人员相关材料
	SellerFilingSelectColumnServiceStaffMaterial SellerFilingSelectColumn = "service_staff_material"
	// 其他相关材料
	SellerFilingSelectColumnOtherMaterial SellerFilingSelectColumn = "other_material"
	// 备注
	SellerFilingSelectColumnRemarks SellerFilingSelectColumn = "remarks"
	// 登记日期
	SellerFilingSelectColumnRegistrationTime SellerFilingSelectColumn = "registration_time"
	// 登记用户                                        ( system_user表的user_id                              )
	SellerFilingSelectColumnRegistrationUser SellerFilingSelectColumn = "registration_user"
	// 是否核查
	SellerFilingSelectColumnIsVerify SellerFilingSelectColumn = "is_verify"
	// 原因
	SellerFilingSelectColumnCause SellerFilingSelectColumn = "cause"
	// 汽车品牌(简称)                                  ( new_muck_truck_recommend_catalog 新型渣土车推荐目录的id )
	SellerFilingSelectColumnCatalogID SellerFilingSelectColumn = "catalog_id"
	// 平台对接技术协议
	SellerFilingSelectColumnPlatformDockingTechnologyAgreement SellerFilingSelectColumn = "platform_docking_technology_agreement"
	// 是否删除
	SellerFilingSelectColumnIsDeleted SellerFilingSelectColumn = "is_deleted"
	// 创建时间
	SellerFilingSelectColumnCreatedAt SellerFilingSelectColumn = "created_at"
	// 创建人                                          ( system_user表的user_id                              )
	SellerFilingSelectColumnCreatedBy SellerFilingSelectColumn = "created_by"
	// 修改时间
	SellerFilingSelectColumnUpdatedAt SellerFilingSelectColumn = "updated_at"
	// 修改人                                          ( system_user表的user_id                              )
	SellerFilingSelectColumnUpdatedBy SellerFilingSelectColumn = "updated_by"
	// 删除时间
	SellerFilingSelectColumnDeletedAt SellerFilingSelectColumn = "deleted_at"
	// 删除人                                          ( system_user表的user_id                              )
	SellerFilingSelectColumnDeletedBy SellerFilingSelectColumn = "deleted_by"
)

var AllSellerFilingSelectColumn = []SellerFilingSelectColumn{
	SellerFilingSelectColumnID,
	SellerFilingSelectColumnSellerFilingID,
	SellerFilingSelectColumnSeller,
	SellerFilingSelectColumnBusinessLicense,
	SellerFilingSelectColumnOrganizationCode,
	SellerFilingSelectColumnLegalRepresentativeIDCard,
	SellerFilingSelectColumnEntrustedAgentIDCard,
	SellerFilingSelectColumnMinistryProductionSalePermit,
	SellerFilingSelectColumnIndustrySelfDisciplineCommitment,
	SellerFilingSelectColumnManufacturerProductionSalePermit,
	SellerFilingSelectColumnRepairServiceStationName,
	SellerFilingSelectColumnRepairServiceStationAddress,
	SellerFilingSelectColumnRepairServiceStationMaterial,
	SellerFilingSelectColumnServiceStaffName,
	SellerFilingSelectColumnServiceStaffPhone,
	SellerFilingSelectColumnServiceStaffID,
	SellerFilingSelectColumnServiceStaffMaterial,
	SellerFilingSelectColumnOtherMaterial,
	SellerFilingSelectColumnRemarks,
	SellerFilingSelectColumnRegistrationTime,
	SellerFilingSelectColumnRegistrationUser,
	SellerFilingSelectColumnIsVerify,
	SellerFilingSelectColumnCause,
	SellerFilingSelectColumnCatalogID,
	SellerFilingSelectColumnPlatformDockingTechnologyAgreement,
	SellerFilingSelectColumnIsDeleted,
	SellerFilingSelectColumnCreatedAt,
	SellerFilingSelectColumnCreatedBy,
	SellerFilingSelectColumnUpdatedAt,
	SellerFilingSelectColumnUpdatedBy,
	SellerFilingSelectColumnDeletedAt,
	SellerFilingSelectColumnDeletedBy,
}

func (e SellerFilingSelectColumn) IsValid() bool {
	switch e {
	case SellerFilingSelectColumnID, SellerFilingSelectColumnSellerFilingID, SellerFilingSelectColumnSeller, SellerFilingSelectColumnBusinessLicense, SellerFilingSelectColumnOrganizationCode, SellerFilingSelectColumnLegalRepresentativeIDCard, SellerFilingSelectColumnEntrustedAgentIDCard, SellerFilingSelectColumnMinistryProductionSalePermit, SellerFilingSelectColumnIndustrySelfDisciplineCommitment, SellerFilingSelectColumnManufacturerProductionSalePermit, SellerFilingSelectColumnRepairServiceStationName, SellerFilingSelectColumnRepairServiceStationAddress, SellerFilingSelectColumnRepairServiceStationMaterial, SellerFilingSelectColumnServiceStaffName, SellerFilingSelectColumnServiceStaffPhone, SellerFilingSelectColumnServiceStaffID, SellerFilingSelectColumnServiceStaffMaterial, SellerFilingSelectColumnOtherMaterial, SellerFilingSelectColumnRemarks, SellerFilingSelectColumnRegistrationTime, SellerFilingSelectColumnRegistrationUser, SellerFilingSelectColumnIsVerify, SellerFilingSelectColumnCause, SellerFilingSelectColumnCatalogID, SellerFilingSelectColumnPlatformDockingTechnologyAgreement, SellerFilingSelectColumnIsDeleted, SellerFilingSelectColumnCreatedAt, SellerFilingSelectColumnCreatedBy, SellerFilingSelectColumnUpdatedAt, SellerFilingSelectColumnUpdatedBy, SellerFilingSelectColumnDeletedAt, SellerFilingSelectColumnDeletedBy:
		return true
	}
	return false
}

func (e SellerFilingSelectColumn) String() string {
	return string(e)
}

func (e *SellerFilingSelectColumn) UnmarshalGQL(v interface{}) error {
	str, ok := v.(string)
	if !ok {
		return fmt.Errorf("enums must be strings")
	}

	*e = SellerFilingSelectColumn(str)
	if !e.IsValid() {
		return fmt.Errorf("%s is not a valid SellerFilingSelectColumn", str)
	}
	return nil
}

func (e SellerFilingSelectColumn) MarshalGQL(w io.Writer) {
	fmt.Fprint(w, strconv.Quote(e.String()))
}

// 可选select
type SellerRatingRecordSelectColumn string

const (
	// 按指定方法生成                                  ( 主键                                 )
	SellerRatingRecordSelectColumnID SellerRatingRecordSelectColumn = "id"
	// 外部编码，由golang程序生成的xid，暴露到外部使用 ( 联合主键                             )
	SellerRatingRecordSelectColumnSellerRatingRecordID SellerRatingRecordSelectColumn = "seller_rating_record_id"
	// 扣分对象                                        ( enterprise_info表的enterprise_id )
	SellerRatingRecordSelectColumnDemeritObj SellerRatingRecordSelectColumn = "demerit_obj"
	// 扣分分值
	SellerRatingRecordSelectColumnDemeritPoints SellerRatingRecordSelectColumn = "demerit_points"
	// 扣分原因
	SellerRatingRecordSelectColumnDemeritReason SellerRatingRecordSelectColumn = "demerit_reason"
	// 操作人                                          ( system_user表的user_id           )
	SellerRatingRecordSelectColumnOperator SellerRatingRecordSelectColumn = "operator"
	// 操作时间
	SellerRatingRecordSelectColumnOperationTime SellerRatingRecordSelectColumn = "operation_time"
	// 是否删除
	SellerRatingRecordSelectColumnIsDeleted SellerRatingRecordSelectColumn = "is_deleted"
	// 创建时间
	SellerRatingRecordSelectColumnCreatedAt SellerRatingRecordSelectColumn = "created_at"
	// 创建人                                          ( system_user表的user_id           )
	SellerRatingRecordSelectColumnCreatedBy SellerRatingRecordSelectColumn = "created_by"
	// 修改时间
	SellerRatingRecordSelectColumnUpdatedAt SellerRatingRecordSelectColumn = "updated_at"
	// 修改人                                          ( system_user表的user_id           )
	SellerRatingRecordSelectColumnUpdatedBy SellerRatingRecordSelectColumn = "updated_by"
	// 删除时间
	SellerRatingRecordSelectColumnDeletedAt SellerRatingRecordSelectColumn = "deleted_at"
	// 删除人                                          ( system_user表的user_id           )
	SellerRatingRecordSelectColumnDeletedBy SellerRatingRecordSelectColumn = "deleted_by"
)

var AllSellerRatingRecordSelectColumn = []SellerRatingRecordSelectColumn{
	SellerRatingRecordSelectColumnID,
	SellerRatingRecordSelectColumnSellerRatingRecordID,
	SellerRatingRecordSelectColumnDemeritObj,
	SellerRatingRecordSelectColumnDemeritPoints,
	SellerRatingRecordSelectColumnDemeritReason,
	SellerRatingRecordSelectColumnOperator,
	SellerRatingRecordSelectColumnOperationTime,
	SellerRatingRecordSelectColumnIsDeleted,
	SellerRatingRecordSelectColumnCreatedAt,
	SellerRatingRecordSelectColumnCreatedBy,
	SellerRatingRecordSelectColumnUpdatedAt,
	SellerRatingRecordSelectColumnUpdatedBy,
	SellerRatingRecordSelectColumnDeletedAt,
	SellerRatingRecordSelectColumnDeletedBy,
}

func (e SellerRatingRecordSelectColumn) IsValid() bool {
	switch e {
	case SellerRatingRecordSelectColumnID, SellerRatingRecordSelectColumnSellerRatingRecordID, SellerRatingRecordSelectColumnDemeritObj, SellerRatingRecordSelectColumnDemeritPoints, SellerRatingRecordSelectColumnDemeritReason, SellerRatingRecordSelectColumnOperator, SellerRatingRecordSelectColumnOperationTime, SellerRatingRecordSelectColumnIsDeleted, SellerRatingRecordSelectColumnCreatedAt, SellerRatingRecordSelectColumnCreatedBy, SellerRatingRecordSelectColumnUpdatedAt, SellerRatingRecordSelectColumnUpdatedBy, SellerRatingRecordSelectColumnDeletedAt, SellerRatingRecordSelectColumnDeletedBy:
		return true
	}
	return false
}

func (e SellerRatingRecordSelectColumn) String() string {
	return string(e)
}

func (e *SellerRatingRecordSelectColumn) UnmarshalGQL(v interface{}) error {
	str, ok := v.(string)
	if !ok {
		return fmt.Errorf("enums must be strings")
	}

	*e = SellerRatingRecordSelectColumn(str)
	if !e.IsValid() {
		return fmt.Errorf("%s is not a valid SellerRatingRecordSelectColumn", str)
	}
	return nil
}

func (e SellerRatingRecordSelectColumn) MarshalGQL(w io.Writer) {
	fmt.Fprint(w, strconv.Quote(e.String()))
}

// 可选select
type VehicleSaleRecordSelectColumn string

const (
	// 按指定方法生成                                  ( 主键                                                    )
	VehicleSaleRecordSelectColumnID VehicleSaleRecordSelectColumn = "id"
	// 外部编码，由golang程序生成的xid，暴露到外部使用 ( 联合主键                                                )
	VehicleSaleRecordSelectColumnVehicleSaleRecordID VehicleSaleRecordSelectColumn = "vehicle_sale_record_id"
	// 销售商                                          ( enterprise_info表的enterprise_id                    )
	VehicleSaleRecordSelectColumnSeller VehicleSaleRecordSelectColumn = "seller"
	// 汽车型号
	VehicleSaleRecordSelectColumnVehicleModel VehicleSaleRecordSelectColumn = "vehicle_model"
	// 汽车相关图片的路径
	VehicleSaleRecordSelectColumnVehiclePicture VehicleSaleRecordSelectColumn = "vehicle_picture"
	// 汽车参数
	VehicleSaleRecordSelectColumnVehicleParameter VehicleSaleRecordSelectColumn = "vehicle_parameter"
	// 参考报价
	VehicleSaleRecordSelectColumnReferencePrice VehicleSaleRecordSelectColumn = "reference_price"
	// 其他相关材料
	VehicleSaleRecordSelectColumnOtherMaterial VehicleSaleRecordSelectColumn = "other_material"
	// 备注
	VehicleSaleRecordSelectColumnRemarks VehicleSaleRecordSelectColumn = "remarks"
	// 登记日期
	VehicleSaleRecordSelectColumnRegistrationTime VehicleSaleRecordSelectColumn = "registration_time"
	// 登记用户                                        ( system_user表的user_id                              )
	VehicleSaleRecordSelectColumnRegistrationUser VehicleSaleRecordSelectColumn = "registration_user"
	// 原因
	VehicleSaleRecordSelectColumnCause VehicleSaleRecordSelectColumn = "cause"
	// 汽车品牌(简称)                                  ( new_muck_truck_recommend_catalog 新型渣土车推荐目录的id )
	VehicleSaleRecordSelectColumnCatalogID VehicleSaleRecordSelectColumn = "catalog_id"
	// 轴数类型                                        ( 轴数类型字典                                        )
	VehicleSaleRecordSelectColumnAxisType VehicleSaleRecordSelectColumn = "axis_type"
	// 运输方量
	VehicleSaleRecordSelectColumnTransportVolume VehicleSaleRecordSelectColumn = "transport_volume"
	// 是否审核
	VehicleSaleRecordSelectColumnIsReview VehicleSaleRecordSelectColumn = "is_review"
	// 是否删除
	VehicleSaleRecordSelectColumnIsDeleted VehicleSaleRecordSelectColumn = "is_deleted"
	// 创建时间
	VehicleSaleRecordSelectColumnCreatedAt VehicleSaleRecordSelectColumn = "created_at"
	// 创建人                                          ( system_user表的user_id                              )
	VehicleSaleRecordSelectColumnCreatedBy VehicleSaleRecordSelectColumn = "created_by"
	// 修改时间
	VehicleSaleRecordSelectColumnUpdatedAt VehicleSaleRecordSelectColumn = "updated_at"
	// 修改人                                          ( system_user表的user_id                              )
	VehicleSaleRecordSelectColumnUpdatedBy VehicleSaleRecordSelectColumn = "updated_by"
	// 删除时间
	VehicleSaleRecordSelectColumnDeletedAt VehicleSaleRecordSelectColumn = "deleted_at"
	// 删除人                                          ( system_user表的user_id                              )
	VehicleSaleRecordSelectColumnDeletedBy VehicleSaleRecordSelectColumn = "deleted_by"
)

var AllVehicleSaleRecordSelectColumn = []VehicleSaleRecordSelectColumn{
	VehicleSaleRecordSelectColumnID,
	VehicleSaleRecordSelectColumnVehicleSaleRecordID,
	VehicleSaleRecordSelectColumnSeller,
	VehicleSaleRecordSelectColumnVehicleModel,
	VehicleSaleRecordSelectColumnVehiclePicture,
	VehicleSaleRecordSelectColumnVehicleParameter,
	VehicleSaleRecordSelectColumnReferencePrice,
	VehicleSaleRecordSelectColumnOtherMaterial,
	VehicleSaleRecordSelectColumnRemarks,
	VehicleSaleRecordSelectColumnRegistrationTime,
	VehicleSaleRecordSelectColumnRegistrationUser,
	VehicleSaleRecordSelectColumnCause,
	VehicleSaleRecordSelectColumnCatalogID,
	VehicleSaleRecordSelectColumnAxisType,
	VehicleSaleRecordSelectColumnTransportVolume,
	VehicleSaleRecordSelectColumnIsReview,
	VehicleSaleRecordSelectColumnIsDeleted,
	VehicleSaleRecordSelectColumnCreatedAt,
	VehicleSaleRecordSelectColumnCreatedBy,
	VehicleSaleRecordSelectColumnUpdatedAt,
	VehicleSaleRecordSelectColumnUpdatedBy,
	VehicleSaleRecordSelectColumnDeletedAt,
	VehicleSaleRecordSelectColumnDeletedBy,
}

func (e VehicleSaleRecordSelectColumn) IsValid() bool {
	switch e {
	case VehicleSaleRecordSelectColumnID, VehicleSaleRecordSelectColumnVehicleSaleRecordID, VehicleSaleRecordSelectColumnSeller, VehicleSaleRecordSelectColumnVehicleModel, VehicleSaleRecordSelectColumnVehiclePicture, VehicleSaleRecordSelectColumnVehicleParameter, VehicleSaleRecordSelectColumnReferencePrice, VehicleSaleRecordSelectColumnOtherMaterial, VehicleSaleRecordSelectColumnRemarks, VehicleSaleRecordSelectColumnRegistrationTime, VehicleSaleRecordSelectColumnRegistrationUser, VehicleSaleRecordSelectColumnCause, VehicleSaleRecordSelectColumnCatalogID, VehicleSaleRecordSelectColumnAxisType, VehicleSaleRecordSelectColumnTransportVolume, VehicleSaleRecordSelectColumnIsReview, VehicleSaleRecordSelectColumnIsDeleted, VehicleSaleRecordSelectColumnCreatedAt, VehicleSaleRecordSelectColumnCreatedBy, VehicleSaleRecordSelectColumnUpdatedAt, VehicleSaleRecordSelectColumnUpdatedBy, VehicleSaleRecordSelectColumnDeletedAt, VehicleSaleRecordSelectColumnDeletedBy:
		return true
	}
	return false
}

func (e VehicleSaleRecordSelectColumn) String() string {
	return string(e)
}

func (e *VehicleSaleRecordSelectColumn) UnmarshalGQL(v interface{}) error {
	str, ok := v.(string)
	if !ok {
		return fmt.Errorf("enums must be strings")
	}

	*e = VehicleSaleRecordSelectColumn(str)
	if !e.IsValid() {
		return fmt.Errorf("%s is not a valid VehicleSaleRecordSelectColumn", str)
	}
	return nil
}

func (e VehicleSaleRecordSelectColumn) MarshalGQL(w io.Writer) {
	fmt.Fprint(w, strconv.Quote(e.String()))
}
