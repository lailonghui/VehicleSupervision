
scalar _jsonb

"""
expression to compare columns of type _jsonb. All fields are combined with logical 'AND'.
"""
input _jsonb_comparison_exp {
    _eq: _jsonb
    _gt: _jsonb
    _gte: _jsonb
    _in: [_jsonb!]
    _is_null: Boolean
    _lt: _jsonb
    _lte: _jsonb
    _neq: _jsonb
    _nin: [_jsonb!]
}

scalar bigint

"""
expression to compare columns of type bigint. All fields are combined with logical 'AND'.
"""
input bigint_comparison_exp {
    _eq: bigint
    _gt: bigint
    _gte: bigint
    _in: [bigint!]
    _is_null: Boolean
    _lt: bigint
    _lte: bigint
    _neq: bigint
    _nin: [bigint!]
}

"""
expression to compare columns of type Boolean. All fields are combined with logical 'AND'.
"""
input Boolean_comparison_exp {
    _eq: Boolean
    _gt: Boolean
    _gte: Boolean
    _in: [Boolean!]
    _is_null: Boolean
    _lt: Boolean
    _lte: Boolean
    _neq: Boolean
    _nin: [Boolean!]
}

"""
expression to compare columns of type Int. All fields are combined with logical 'AND'.
"""
input Int_comparison_exp {
    _eq: Int
    _gt: Int
    _gte: Int
    _in: [Int!]
    _is_null: Boolean
    _lt: Int
    _lte: Int
    _neq: Int
    _nin: [Int!]
}

"""
公安内网六合一平台同步车辆表(不修改字段)


columns and relationships of "JJ_VEHICLE"

"""
type JJ_VEHICLE {
    """初次登记日期"""
    CCDJRQ: timestamptz

    """车辆类型"""
    CLLX: String

    """车辆识别代号"""
    CLSBDH: String

    """所在县"""
    COUNTY: String

    """登记日期"""
    DJRQ: timestamptz

    """发牌日期"""
    FPRQ: timestamptz

    """无"""
    GXRQ: timestamptz

    """车牌号码"""
    HPHM: String

    """号牌种类"""
    HPZL: String

    """是否删除"""
    IS_DETELED: numeric

    """联系电话"""
    LXDH: String

    """联系地址"""
    LXDZ: String

    """固话"""
    OTHER: String

    """强制报废期止"""
    QZBFQZ: timestamptz

    """无"""
    SJHM: String

    """所有人"""
    SYR: String

    """使用性质"""
    SYXZ: String

    """更新时间"""
    UPDATETIME: timestamptz

    """经营范围"""
    VEHMONTYPE: String

    """型号"""
    XH: String

    """有效期至"""
    YXQZ: timestamptz

    """机动车状态"""
    ZT: Int

    """总质量"""
    ZZL: numeric

    """主键"""
    id: bigint!

    """vehicle_info 车辆信息表 的vehicle_id"""
    vehicle_id: String!
}

"""
aggregated selection of "JJ_VEHICLE"
"""
type JJ_VEHICLE_aggregate {
    aggregate: JJ_VEHICLE_aggregate_fields
    nodes: [JJ_VEHICLE!]!
}

"""
aggregate fields of "JJ_VEHICLE"
"""
type JJ_VEHICLE_aggregate_fields {
    avg: JJ_VEHICLE_avg_fields
    count(columns: [JJ_VEHICLE_select_column!], distinct: Boolean): Int
    max: JJ_VEHICLE_max_fields
    min: JJ_VEHICLE_min_fields
    stddev: JJ_VEHICLE_stddev_fields
    stddev_pop: JJ_VEHICLE_stddev_pop_fields
    stddev_samp: JJ_VEHICLE_stddev_samp_fields
    sum: JJ_VEHICLE_sum_fields
    var_pop: JJ_VEHICLE_var_pop_fields
    var_samp: JJ_VEHICLE_var_samp_fields
    variance: JJ_VEHICLE_variance_fields
}

"""
order by aggregate values of table "JJ_VEHICLE"
"""
input JJ_VEHICLE_aggregate_order_by {
    avg: JJ_VEHICLE_avg_order_by
    count: order_by
    max: JJ_VEHICLE_max_order_by
    min: JJ_VEHICLE_min_order_by
    stddev: JJ_VEHICLE_stddev_order_by
    stddev_pop: JJ_VEHICLE_stddev_pop_order_by
    stddev_samp: JJ_VEHICLE_stddev_samp_order_by
    sum: JJ_VEHICLE_sum_order_by
    var_pop: JJ_VEHICLE_var_pop_order_by
    var_samp: JJ_VEHICLE_var_samp_order_by
    variance: JJ_VEHICLE_variance_order_by
}

"""
input type for inserting array relation for remote table "JJ_VEHICLE"
"""
input JJ_VEHICLE_arr_rel_insert_input {
    data: [JJ_VEHICLE_insert_input!]!
    on_conflict: JJ_VEHICLE_on_conflict
}

"""aggregate avg on columns"""
type JJ_VEHICLE_avg_fields {
    IS_DETELED: Float
    ZT: Float
    ZZL: Float
    id: Float
}

"""
order by avg() on columns of table "JJ_VEHICLE"
"""
input JJ_VEHICLE_avg_order_by {
    IS_DETELED: order_by
    ZT: order_by
    ZZL: order_by
    id: order_by
}

"""
Boolean expression to filter rows from the table "JJ_VEHICLE". All fields are combined with a logical 'AND'.
"""
input JJ_VEHICLE_bool_exp {
    CCDJRQ: timestamptz_comparison_exp
    CLLX: String_comparison_exp
    CLSBDH: String_comparison_exp
    COUNTY: String_comparison_exp
    DJRQ: timestamptz_comparison_exp
    FPRQ: timestamptz_comparison_exp
    GXRQ: timestamptz_comparison_exp
    HPHM: String_comparison_exp
    HPZL: String_comparison_exp
    IS_DETELED: numeric_comparison_exp
    LXDH: String_comparison_exp
    LXDZ: String_comparison_exp
    OTHER: String_comparison_exp
    QZBFQZ: timestamptz_comparison_exp
    SJHM: String_comparison_exp
    SYR: String_comparison_exp
    SYXZ: String_comparison_exp
    UPDATETIME: timestamptz_comparison_exp
    VEHMONTYPE: String_comparison_exp
    XH: String_comparison_exp
    YXQZ: timestamptz_comparison_exp
    ZT: Int_comparison_exp
    ZZL: numeric_comparison_exp
    _and: [JJ_VEHICLE_bool_exp]
    _not: JJ_VEHICLE_bool_exp
    _or: [JJ_VEHICLE_bool_exp]
    id: bigint_comparison_exp
    vehicle_id: String_comparison_exp
}

"""
unique or primary key constraints on table "JJ_VEHICLE"
"""
enum JJ_VEHICLE_constraint {
    """unique or primary key constraint"""
    JJ_VEHICLE_pkey
}

"""
input type for incrementing integer column in table "JJ_VEHICLE"
"""
input JJ_VEHICLE_inc_input {
    IS_DETELED: numeric
    ZT: Int
    ZZL: numeric
    id: bigint
}

"""
input type for inserting data into table "JJ_VEHICLE"
"""
input JJ_VEHICLE_insert_input {
    CCDJRQ: timestamptz
    CLLX: String
    CLSBDH: String
    COUNTY: String
    DJRQ: timestamptz
    FPRQ: timestamptz
    GXRQ: timestamptz
    HPHM: String
    HPZL: String
    IS_DETELED: numeric
    LXDH: String
    LXDZ: String
    OTHER: String
    QZBFQZ: timestamptz
    SJHM: String
    SYR: String
    SYXZ: String
    UPDATETIME: timestamptz
    VEHMONTYPE: String
    XH: String
    YXQZ: timestamptz
    ZT: Int
    ZZL: numeric
    id: bigint
    vehicle_id: String
}

"""aggregate max on columns"""
type JJ_VEHICLE_max_fields {
    CCDJRQ: timestamptz
    CLLX: String
    CLSBDH: String
    COUNTY: String
    DJRQ: timestamptz
    FPRQ: timestamptz
    GXRQ: timestamptz
    HPHM: String
    HPZL: String
    IS_DETELED: numeric
    LXDH: String
    LXDZ: String
    OTHER: String
    QZBFQZ: timestamptz
    SJHM: String
    SYR: String
    SYXZ: String
    UPDATETIME: timestamptz
    VEHMONTYPE: String
    XH: String
    YXQZ: timestamptz
    ZT: Int
    ZZL: numeric
    id: bigint
    vehicle_id: String
}

"""
order by max() on columns of table "JJ_VEHICLE"
"""
input JJ_VEHICLE_max_order_by {
    CCDJRQ: order_by
    CLLX: order_by
    CLSBDH: order_by
    COUNTY: order_by
    DJRQ: order_by
    FPRQ: order_by
    GXRQ: order_by
    HPHM: order_by
    HPZL: order_by
    IS_DETELED: order_by
    LXDH: order_by
    LXDZ: order_by
    OTHER: order_by
    QZBFQZ: order_by
    SJHM: order_by
    SYR: order_by
    SYXZ: order_by
    UPDATETIME: order_by
    VEHMONTYPE: order_by
    XH: order_by
    YXQZ: order_by
    ZT: order_by
    ZZL: order_by
    id: order_by
    vehicle_id: order_by
}

"""aggregate min on columns"""
type JJ_VEHICLE_min_fields {
    CCDJRQ: timestamptz
    CLLX: String
    CLSBDH: String
    COUNTY: String
    DJRQ: timestamptz
    FPRQ: timestamptz
    GXRQ: timestamptz
    HPHM: String
    HPZL: String
    IS_DETELED: numeric
    LXDH: String
    LXDZ: String
    OTHER: String
    QZBFQZ: timestamptz
    SJHM: String
    SYR: String
    SYXZ: String
    UPDATETIME: timestamptz
    VEHMONTYPE: String
    XH: String
    YXQZ: timestamptz
    ZT: Int
    ZZL: numeric
    id: bigint
    vehicle_id: String
}

"""
order by min() on columns of table "JJ_VEHICLE"
"""
input JJ_VEHICLE_min_order_by {
    CCDJRQ: order_by
    CLLX: order_by
    CLSBDH: order_by
    COUNTY: order_by
    DJRQ: order_by
    FPRQ: order_by
    GXRQ: order_by
    HPHM: order_by
    HPZL: order_by
    IS_DETELED: order_by
    LXDH: order_by
    LXDZ: order_by
    OTHER: order_by
    QZBFQZ: order_by
    SJHM: order_by
    SYR: order_by
    SYXZ: order_by
    UPDATETIME: order_by
    VEHMONTYPE: order_by
    XH: order_by
    YXQZ: order_by
    ZT: order_by
    ZZL: order_by
    id: order_by
    vehicle_id: order_by
}

"""
response of any mutation on the table "JJ_VEHICLE"
"""
type JJ_VEHICLE_mutation_response {
    """number of affected rows by the mutation"""
    affected_rows: Int!

    """data of the affected rows by the mutation"""
    returning: [JJ_VEHICLE!]!
}

"""
input type for inserting object relation for remote table "JJ_VEHICLE"
"""
input JJ_VEHICLE_obj_rel_insert_input {
    data: JJ_VEHICLE_insert_input!
    on_conflict: JJ_VEHICLE_on_conflict
}

"""
on conflict condition type for table "JJ_VEHICLE"
"""
input JJ_VEHICLE_on_conflict {
    constraint: JJ_VEHICLE_constraint!
    update_columns: [JJ_VEHICLE_update_column!]!
    where: JJ_VEHICLE_bool_exp
}

"""
ordering options when selecting data from "JJ_VEHICLE"
"""
input JJ_VEHICLE_order_by {
    CCDJRQ: order_by
    CLLX: order_by
    CLSBDH: order_by
    COUNTY: order_by
    DJRQ: order_by
    FPRQ: order_by
    GXRQ: order_by
    HPHM: order_by
    HPZL: order_by
    IS_DETELED: order_by
    LXDH: order_by
    LXDZ: order_by
    OTHER: order_by
    QZBFQZ: order_by
    SJHM: order_by
    SYR: order_by
    SYXZ: order_by
    UPDATETIME: order_by
    VEHMONTYPE: order_by
    XH: order_by
    YXQZ: order_by
    ZT: order_by
    ZZL: order_by
    id: order_by
    vehicle_id: order_by
}

"""
primary key columns input for table: "JJ_VEHICLE"
"""
input JJ_VEHICLE_pk_columns_input {
    """主键"""
    id: bigint!
}

"""
select columns of table "JJ_VEHICLE"
"""
enum JJ_VEHICLE_select_column {
    """column name"""
    CCDJRQ

    """column name"""
    CLLX

    """column name"""
    CLSBDH

    """column name"""
    COUNTY

    """column name"""
    DJRQ

    """column name"""
    FPRQ

    """column name"""
    GXRQ

    """column name"""
    HPHM

    """column name"""
    HPZL

    """column name"""
    IS_DETELED

    """column name"""
    LXDH

    """column name"""
    LXDZ

    """column name"""
    OTHER

    """column name"""
    QZBFQZ

    """column name"""
    SJHM

    """column name"""
    SYR

    """column name"""
    SYXZ

    """column name"""
    UPDATETIME

    """column name"""
    VEHMONTYPE

    """column name"""
    XH

    """column name"""
    YXQZ

    """column name"""
    ZT

    """column name"""
    ZZL

    """column name"""
    id

    """column name"""
    vehicle_id
}

"""
input type for updating data in table "JJ_VEHICLE"
"""
input JJ_VEHICLE_set_input {
    CCDJRQ: timestamptz
    CLLX: String
    CLSBDH: String
    COUNTY: String
    DJRQ: timestamptz
    FPRQ: timestamptz
    GXRQ: timestamptz
    HPHM: String
    HPZL: String
    IS_DETELED: numeric
    LXDH: String
    LXDZ: String
    OTHER: String
    QZBFQZ: timestamptz
    SJHM: String
    SYR: String
    SYXZ: String
    UPDATETIME: timestamptz
    VEHMONTYPE: String
    XH: String
    YXQZ: timestamptz
    ZT: Int
    ZZL: numeric
    id: bigint
    vehicle_id: String
}

"""aggregate stddev on columns"""
type JJ_VEHICLE_stddev_fields {
    IS_DETELED: Float
    ZT: Float
    ZZL: Float
    id: Float
}

"""
order by stddev() on columns of table "JJ_VEHICLE"
"""
input JJ_VEHICLE_stddev_order_by {
    IS_DETELED: order_by
    ZT: order_by
    ZZL: order_by
    id: order_by
}

"""aggregate stddev_pop on columns"""
type JJ_VEHICLE_stddev_pop_fields {
    IS_DETELED: Float
    ZT: Float
    ZZL: Float
    id: Float
}

"""
order by stddev_pop() on columns of table "JJ_VEHICLE"
"""
input JJ_VEHICLE_stddev_pop_order_by {
    IS_DETELED: order_by
    ZT: order_by
    ZZL: order_by
    id: order_by
}

"""aggregate stddev_samp on columns"""
type JJ_VEHICLE_stddev_samp_fields {
    IS_DETELED: Float
    ZT: Float
    ZZL: Float
    id: Float
}

"""
order by stddev_samp() on columns of table "JJ_VEHICLE"
"""
input JJ_VEHICLE_stddev_samp_order_by {
    IS_DETELED: order_by
    ZT: order_by
    ZZL: order_by
    id: order_by
}

"""aggregate sum on columns"""
type JJ_VEHICLE_sum_fields {
    IS_DETELED: numeric
    ZT: Int
    ZZL: numeric
    id: bigint
}

"""
order by sum() on columns of table "JJ_VEHICLE"
"""
input JJ_VEHICLE_sum_order_by {
    IS_DETELED: order_by
    ZT: order_by
    ZZL: order_by
    id: order_by
}

"""
update columns of table "JJ_VEHICLE"
"""
enum JJ_VEHICLE_update_column {
    """column name"""
    CCDJRQ

    """column name"""
    CLLX

    """column name"""
    CLSBDH

    """column name"""
    COUNTY

    """column name"""
    DJRQ

    """column name"""
    FPRQ

    """column name"""
    GXRQ

    """column name"""
    HPHM

    """column name"""
    HPZL

    """column name"""
    IS_DETELED

    """column name"""
    LXDH

    """column name"""
    LXDZ

    """column name"""
    OTHER

    """column name"""
    QZBFQZ

    """column name"""
    SJHM

    """column name"""
    SYR

    """column name"""
    SYXZ

    """column name"""
    UPDATETIME

    """column name"""
    VEHMONTYPE

    """column name"""
    XH

    """column name"""
    YXQZ

    """column name"""
    ZT

    """column name"""
    ZZL

    """column name"""
    id

    """column name"""
    vehicle_id
}

"""aggregate var_pop on columns"""
type JJ_VEHICLE_var_pop_fields {
    IS_DETELED: Float
    ZT: Float
    ZZL: Float
    id: Float
}

"""
order by var_pop() on columns of table "JJ_VEHICLE"
"""
input JJ_VEHICLE_var_pop_order_by {
    IS_DETELED: order_by
    ZT: order_by
    ZZL: order_by
    id: order_by
}

"""aggregate var_samp on columns"""
type JJ_VEHICLE_var_samp_fields {
    IS_DETELED: Float
    ZT: Float
    ZZL: Float
    id: Float
}

"""
order by var_samp() on columns of table "JJ_VEHICLE"
"""
input JJ_VEHICLE_var_samp_order_by {
    IS_DETELED: order_by
    ZT: order_by
    ZZL: order_by
    id: order_by
}

"""aggregate variance on columns"""
type JJ_VEHICLE_variance_fields {
    IS_DETELED: Float
    ZT: Float
    ZZL: Float
    id: Float
}

"""
order by variance() on columns of table "JJ_VEHICLE"
"""
input JJ_VEHICLE_variance_order_by {
    IS_DETELED: order_by
    ZT: order_by
    ZZL: order_by
    id: order_by
}

"""
渣土车目录库车辆信息表


columns and relationships of "muck_truck_category_info"

"""
type muck_truck_category_info {
    """实际车主联系电话"""
    actual_owner_contact_phone: String

    """
    实际车主身份证号

    """
    actual_owner_id_number: String

    """实际车主身份证照片"""
    actual_owner_id_photo: String

    """实际车主姓名"""
    actual_owner_name: String

    """年检到期时间"""
    annual_inspection_expiration_time: timestamptz

    """申请验车时间"""
    apply_inspection_time: timestamptz

    """轴数"""
    axes_number: Int

    """黑名单截止日期"""
    blacklist_deadline: timestamptz

    """交强险保单图片"""
    compulsory_insurance_policy_picture: String

    """创建时间"""
    create_at: timestamptz!

    """创建人"""
    create_by: String!

    """删除时间"""
    delete_at: timestamptz

    """删除人"""
    delete_by: String

    """行驶证登记的车主联系电话"""
    driving_license_contact_phone: String

    """行驶证登记的车主身份证号"""
    driving_license_id_number: String

    """行驶证登记的车主身份证照片"""
    driving_liscense_owner_id_photo: String

    """发动机号"""
    engine_number: String

    """主键"""
    id: bigint!

    """违法通知书编号签注"""
    illegal_notice_number_endorsement: String

    """违法编号签注"""
    illegal_number_endorsement: String

    """事故编号签注"""
    incident_number_endorsement: String

    """初次登记日期"""
    initial_registration_date: timestamptz

    """保险到期时间"""
    insurance_expiry_time: timestamptz

    """是否黑名单"""
    is_blacklist: Boolean

    """是否删除"""
    is_delete: Boolean

    """是否安检到期报警处理"""
    is_due_security_alarm_processing: Boolean

    """是否首次注册"""
    is_first_register: Boolean

    """是否渣土办审核"""
    is_muck_office_audit: Boolean

    """是否发送短信"""
    is_send_sms: Boolean

    """泉工号发放日期"""
    issue_date_of_quangong_number: timestamptz

    """车主身份证照片"""
    owner_id_photo: String

    """处理备注"""
    processing_notes: String

    """处理时间"""
    processing_time: timestamptz

    """处理人"""
    processor: String

    """审核备注"""
    review_notes: String

    """
    审核状态

    """
    review_status: String

    """审核时间"""
    review_time: timestamptz

    """审核人"""
    reviewer: String

    """二级维护检测到期时间"""
    secondary_maintenance_expiry_date: timestamptz

    """二级维护地点"""
    secondary_maintenance_location: String

    """签收验车申请时间"""
    signing_acceptance_application_time: timestamptz

    """第三者保额"""
    third_party_insurance_coverage: String

    """第三者保险到期时间"""
    third_party_insurance_expiry_time: timestamptz

    """第三者保单图片"""
    third_party_insurance_policy_picture: String

    """总质量"""
    total_mass: numeric

    """修改时间"""
    update_at: timestamptz

    """修改人"""
    update_by: String

    """车辆描述"""
    vehicle_description: String

    """vehicle_info 车辆信息表 的vehicle_id"""
    vehicle_id: String!

    """车辆性质  1.本企业车辆  2.企业挂靠车辆  3.车队挂靠车辆"""
    vehicle_nature: Int

    """车辆营运证号"""
    vehicle_operating_certificate_number: String

    """车辆营运证照片"""
    vehicle_operating_certificate_photo: String

    """车辆图片"""
    vehicle_picture: String
}

"""
aggregated selection of "muck_truck_category_info"
"""
type muck_truck_category_info_aggregate {
    aggregate: muck_truck_category_info_aggregate_fields
    nodes: [muck_truck_category_info!]!
}

"""
aggregate fields of "muck_truck_category_info"
"""
type muck_truck_category_info_aggregate_fields {
    avg: muck_truck_category_info_avg_fields
    count(columns: [muck_truck_category_info_select_column!], distinct: Boolean): Int
    max: muck_truck_category_info_max_fields
    min: muck_truck_category_info_min_fields
    stddev: muck_truck_category_info_stddev_fields
    stddev_pop: muck_truck_category_info_stddev_pop_fields
    stddev_samp: muck_truck_category_info_stddev_samp_fields
    sum: muck_truck_category_info_sum_fields
    var_pop: muck_truck_category_info_var_pop_fields
    var_samp: muck_truck_category_info_var_samp_fields
    variance: muck_truck_category_info_variance_fields
}

"""
order by aggregate values of table "muck_truck_category_info"
"""
input muck_truck_category_info_aggregate_order_by {
    avg: muck_truck_category_info_avg_order_by
    count: order_by
    max: muck_truck_category_info_max_order_by
    min: muck_truck_category_info_min_order_by
    stddev: muck_truck_category_info_stddev_order_by
    stddev_pop: muck_truck_category_info_stddev_pop_order_by
    stddev_samp: muck_truck_category_info_stddev_samp_order_by
    sum: muck_truck_category_info_sum_order_by
    var_pop: muck_truck_category_info_var_pop_order_by
    var_samp: muck_truck_category_info_var_samp_order_by
    variance: muck_truck_category_info_variance_order_by
}

"""
input type for inserting array relation for remote table "muck_truck_category_info"
"""
input muck_truck_category_info_arr_rel_insert_input {
    data: [muck_truck_category_info_insert_input!]!
    on_conflict: muck_truck_category_info_on_conflict
}

"""aggregate avg on columns"""
type muck_truck_category_info_avg_fields {
    axes_number: Float
    id: Float
    total_mass: Float
    vehicle_nature: Float
}

"""
order by avg() on columns of table "muck_truck_category_info"
"""
input muck_truck_category_info_avg_order_by {
    axes_number: order_by
    id: order_by
    total_mass: order_by
    vehicle_nature: order_by
}

"""
Boolean expression to filter rows from the table "muck_truck_category_info". All fields are combined with a logical 'AND'.
"""
input muck_truck_category_info_bool_exp {
    _and: [muck_truck_category_info_bool_exp]
    _not: muck_truck_category_info_bool_exp
    _or: [muck_truck_category_info_bool_exp]
    actual_owner_contact_phone: String_comparison_exp
    actual_owner_id_number: String_comparison_exp
    actual_owner_id_photo: String_comparison_exp
    actual_owner_name: String_comparison_exp
    annual_inspection_expiration_time: timestamptz_comparison_exp
    apply_inspection_time: timestamptz_comparison_exp
    axes_number: Int_comparison_exp
    blacklist_deadline: timestamptz_comparison_exp
    compulsory_insurance_policy_picture: String_comparison_exp
    create_at: timestamptz_comparison_exp
    create_by: String_comparison_exp
    delete_at: timestamptz_comparison_exp
    delete_by: String_comparison_exp
    driving_license_contact_phone: String_comparison_exp
    driving_license_id_number: String_comparison_exp
    driving_liscense_owner_id_photo: String_comparison_exp
    engine_number: String_comparison_exp
    id: bigint_comparison_exp
    illegal_notice_number_endorsement: String_comparison_exp
    illegal_number_endorsement: String_comparison_exp
    incident_number_endorsement: String_comparison_exp
    initial_registration_date: timestamptz_comparison_exp
    insurance_expiry_time: timestamptz_comparison_exp
    is_blacklist: Boolean_comparison_exp
    is_delete: Boolean_comparison_exp
    is_due_security_alarm_processing: Boolean_comparison_exp
    is_first_register: Boolean_comparison_exp
    is_muck_office_audit: Boolean_comparison_exp
    is_send_sms: Boolean_comparison_exp
    issue_date_of_quangong_number: timestamptz_comparison_exp
    owner_id_photo: String_comparison_exp
    processing_notes: String_comparison_exp
    processing_time: timestamptz_comparison_exp
    processor: String_comparison_exp
    review_notes: String_comparison_exp
    review_status: String_comparison_exp
    review_time: timestamptz_comparison_exp
    reviewer: String_comparison_exp
    secondary_maintenance_expiry_date: timestamptz_comparison_exp
    secondary_maintenance_location: String_comparison_exp
    signing_acceptance_application_time: timestamptz_comparison_exp
    third_party_insurance_coverage: String_comparison_exp
    third_party_insurance_expiry_time: timestamptz_comparison_exp
    third_party_insurance_policy_picture: String_comparison_exp
    total_mass: numeric_comparison_exp
    update_at: timestamptz_comparison_exp
    update_by: String_comparison_exp
    vehicle_description: String_comparison_exp
    vehicle_id: String_comparison_exp
    vehicle_nature: Int_comparison_exp
    vehicle_operating_certificate_number: String_comparison_exp
    vehicle_operating_certificate_photo: String_comparison_exp
    vehicle_picture: String_comparison_exp
}

"""
unique or primary key constraints on table "muck_truck_category_info"
"""
enum muck_truck_category_info_constraint {
    """unique or primary key constraint"""
    muck_truck_category_info_pkey
}

"""
input type for incrementing integer column in table "muck_truck_category_info"
"""
input muck_truck_category_info_inc_input {
    axes_number: Int
    id: bigint
    total_mass: numeric
    vehicle_nature: Int
}

"""
input type for inserting data into table "muck_truck_category_info"
"""
input muck_truck_category_info_insert_input {
    actual_owner_contact_phone: String
    actual_owner_id_number: String
    actual_owner_id_photo: String
    actual_owner_name: String
    annual_inspection_expiration_time: timestamptz
    apply_inspection_time: timestamptz
    axes_number: Int
    blacklist_deadline: timestamptz
    compulsory_insurance_policy_picture: String
    create_at: timestamptz
    create_by: String
    delete_at: timestamptz
    delete_by: String
    driving_license_contact_phone: String
    driving_license_id_number: String
    driving_liscense_owner_id_photo: String
    engine_number: String
    id: bigint
    illegal_notice_number_endorsement: String
    illegal_number_endorsement: String
    incident_number_endorsement: String
    initial_registration_date: timestamptz
    insurance_expiry_time: timestamptz
    is_blacklist: Boolean
    is_delete: Boolean
    is_due_security_alarm_processing: Boolean
    is_first_register: Boolean
    is_muck_office_audit: Boolean
    is_send_sms: Boolean
    issue_date_of_quangong_number: timestamptz
    owner_id_photo: String
    processing_notes: String
    processing_time: timestamptz
    processor: String
    review_notes: String
    review_status: String
    review_time: timestamptz
    reviewer: String
    secondary_maintenance_expiry_date: timestamptz
    secondary_maintenance_location: String
    signing_acceptance_application_time: timestamptz
    third_party_insurance_coverage: String
    third_party_insurance_expiry_time: timestamptz
    third_party_insurance_policy_picture: String
    total_mass: numeric
    update_at: timestamptz
    update_by: String
    vehicle_description: String
    vehicle_id: String
    vehicle_nature: Int
    vehicle_operating_certificate_number: String
    vehicle_operating_certificate_photo: String
    vehicle_picture: String
}

"""aggregate max on columns"""
type muck_truck_category_info_max_fields {
    actual_owner_contact_phone: String
    actual_owner_id_number: String
    actual_owner_id_photo: String
    actual_owner_name: String
    annual_inspection_expiration_time: timestamptz
    apply_inspection_time: timestamptz
    axes_number: Int
    blacklist_deadline: timestamptz
    compulsory_insurance_policy_picture: String
    create_at: timestamptz
    create_by: String
    delete_at: timestamptz
    delete_by: String
    driving_license_contact_phone: String
    driving_license_id_number: String
    driving_liscense_owner_id_photo: String
    engine_number: String
    id: bigint
    illegal_notice_number_endorsement: String
    illegal_number_endorsement: String
    incident_number_endorsement: String
    initial_registration_date: timestamptz
    insurance_expiry_time: timestamptz
    issue_date_of_quangong_number: timestamptz
    owner_id_photo: String
    processing_notes: String
    processing_time: timestamptz
    processor: String
    review_notes: String
    review_status: String
    review_time: timestamptz
    reviewer: String
    secondary_maintenance_expiry_date: timestamptz
    secondary_maintenance_location: String
    signing_acceptance_application_time: timestamptz
    third_party_insurance_coverage: String
    third_party_insurance_expiry_time: timestamptz
    third_party_insurance_policy_picture: String
    total_mass: numeric
    update_at: timestamptz
    update_by: String
    vehicle_description: String
    vehicle_id: String
    vehicle_nature: Int
    vehicle_operating_certificate_number: String
    vehicle_operating_certificate_photo: String
    vehicle_picture: String
}

"""
order by max() on columns of table "muck_truck_category_info"
"""
input muck_truck_category_info_max_order_by {
    actual_owner_contact_phone: order_by
    actual_owner_id_number: order_by
    actual_owner_id_photo: order_by
    actual_owner_name: order_by
    annual_inspection_expiration_time: order_by
    apply_inspection_time: order_by
    axes_number: order_by
    blacklist_deadline: order_by
    compulsory_insurance_policy_picture: order_by
    create_at: order_by
    create_by: order_by
    delete_at: order_by
    delete_by: order_by
    driving_license_contact_phone: order_by
    driving_license_id_number: order_by
    driving_liscense_owner_id_photo: order_by
    engine_number: order_by
    id: order_by
    illegal_notice_number_endorsement: order_by
    illegal_number_endorsement: order_by
    incident_number_endorsement: order_by
    initial_registration_date: order_by
    insurance_expiry_time: order_by
    issue_date_of_quangong_number: order_by
    owner_id_photo: order_by
    processing_notes: order_by
    processing_time: order_by
    processor: order_by
    review_notes: order_by
    review_status: order_by
    review_time: order_by
    reviewer: order_by
    secondary_maintenance_expiry_date: order_by
    secondary_maintenance_location: order_by
    signing_acceptance_application_time: order_by
    third_party_insurance_coverage: order_by
    third_party_insurance_expiry_time: order_by
    third_party_insurance_policy_picture: order_by
    total_mass: order_by
    update_at: order_by
    update_by: order_by
    vehicle_description: order_by
    vehicle_id: order_by
    vehicle_nature: order_by
    vehicle_operating_certificate_number: order_by
    vehicle_operating_certificate_photo: order_by
    vehicle_picture: order_by
}

"""aggregate min on columns"""
type muck_truck_category_info_min_fields {
    actual_owner_contact_phone: String
    actual_owner_id_number: String
    actual_owner_id_photo: String
    actual_owner_name: String
    annual_inspection_expiration_time: timestamptz
    apply_inspection_time: timestamptz
    axes_number: Int
    blacklist_deadline: timestamptz
    compulsory_insurance_policy_picture: String
    create_at: timestamptz
    create_by: String
    delete_at: timestamptz
    delete_by: String
    driving_license_contact_phone: String
    driving_license_id_number: String
    driving_liscense_owner_id_photo: String
    engine_number: String
    id: bigint
    illegal_notice_number_endorsement: String
    illegal_number_endorsement: String
    incident_number_endorsement: String
    initial_registration_date: timestamptz
    insurance_expiry_time: timestamptz
    issue_date_of_quangong_number: timestamptz
    owner_id_photo: String
    processing_notes: String
    processing_time: timestamptz
    processor: String
    review_notes: String
    review_status: String
    review_time: timestamptz
    reviewer: String
    secondary_maintenance_expiry_date: timestamptz
    secondary_maintenance_location: String
    signing_acceptance_application_time: timestamptz
    third_party_insurance_coverage: String
    third_party_insurance_expiry_time: timestamptz
    third_party_insurance_policy_picture: String
    total_mass: numeric
    update_at: timestamptz
    update_by: String
    vehicle_description: String
    vehicle_id: String
    vehicle_nature: Int
    vehicle_operating_certificate_number: String
    vehicle_operating_certificate_photo: String
    vehicle_picture: String
}

"""
order by min() on columns of table "muck_truck_category_info"
"""
input muck_truck_category_info_min_order_by {
    actual_owner_contact_phone: order_by
    actual_owner_id_number: order_by
    actual_owner_id_photo: order_by
    actual_owner_name: order_by
    annual_inspection_expiration_time: order_by
    apply_inspection_time: order_by
    axes_number: order_by
    blacklist_deadline: order_by
    compulsory_insurance_policy_picture: order_by
    create_at: order_by
    create_by: order_by
    delete_at: order_by
    delete_by: order_by
    driving_license_contact_phone: order_by
    driving_license_id_number: order_by
    driving_liscense_owner_id_photo: order_by
    engine_number: order_by
    id: order_by
    illegal_notice_number_endorsement: order_by
    illegal_number_endorsement: order_by
    incident_number_endorsement: order_by
    initial_registration_date: order_by
    insurance_expiry_time: order_by
    issue_date_of_quangong_number: order_by
    owner_id_photo: order_by
    processing_notes: order_by
    processing_time: order_by
    processor: order_by
    review_notes: order_by
    review_status: order_by
    review_time: order_by
    reviewer: order_by
    secondary_maintenance_expiry_date: order_by
    secondary_maintenance_location: order_by
    signing_acceptance_application_time: order_by
    third_party_insurance_coverage: order_by
    third_party_insurance_expiry_time: order_by
    third_party_insurance_policy_picture: order_by
    total_mass: order_by
    update_at: order_by
    update_by: order_by
    vehicle_description: order_by
    vehicle_id: order_by
    vehicle_nature: order_by
    vehicle_operating_certificate_number: order_by
    vehicle_operating_certificate_photo: order_by
    vehicle_picture: order_by
}

"""
response of any mutation on the table "muck_truck_category_info"
"""
type muck_truck_category_info_mutation_response {
    """number of affected rows by the mutation"""
    affected_rows: Int!

    """data of the affected rows by the mutation"""
    returning: [muck_truck_category_info!]!
}

"""
input type for inserting object relation for remote table "muck_truck_category_info"
"""
input muck_truck_category_info_obj_rel_insert_input {
    data: muck_truck_category_info_insert_input!
    on_conflict: muck_truck_category_info_on_conflict
}

"""
on conflict condition type for table "muck_truck_category_info"
"""
input muck_truck_category_info_on_conflict {
    constraint: muck_truck_category_info_constraint!
    update_columns: [muck_truck_category_info_update_column!]!
    where: muck_truck_category_info_bool_exp
}

"""
ordering options when selecting data from "muck_truck_category_info"
"""
input muck_truck_category_info_order_by {
    actual_owner_contact_phone: order_by
    actual_owner_id_number: order_by
    actual_owner_id_photo: order_by
    actual_owner_name: order_by
    annual_inspection_expiration_time: order_by
    apply_inspection_time: order_by
    axes_number: order_by
    blacklist_deadline: order_by
    compulsory_insurance_policy_picture: order_by
    create_at: order_by
    create_by: order_by
    delete_at: order_by
    delete_by: order_by
    driving_license_contact_phone: order_by
    driving_license_id_number: order_by
    driving_liscense_owner_id_photo: order_by
    engine_number: order_by
    id: order_by
    illegal_notice_number_endorsement: order_by
    illegal_number_endorsement: order_by
    incident_number_endorsement: order_by
    initial_registration_date: order_by
    insurance_expiry_time: order_by
    is_blacklist: order_by
    is_delete: order_by
    is_due_security_alarm_processing: order_by
    is_first_register: order_by
    is_muck_office_audit: order_by
    is_send_sms: order_by
    issue_date_of_quangong_number: order_by
    owner_id_photo: order_by
    processing_notes: order_by
    processing_time: order_by
    processor: order_by
    review_notes: order_by
    review_status: order_by
    review_time: order_by
    reviewer: order_by
    secondary_maintenance_expiry_date: order_by
    secondary_maintenance_location: order_by
    signing_acceptance_application_time: order_by
    third_party_insurance_coverage: order_by
    third_party_insurance_expiry_time: order_by
    third_party_insurance_policy_picture: order_by
    total_mass: order_by
    update_at: order_by
    update_by: order_by
    vehicle_description: order_by
    vehicle_id: order_by
    vehicle_nature: order_by
    vehicle_operating_certificate_number: order_by
    vehicle_operating_certificate_photo: order_by
    vehicle_picture: order_by
}

"""
primary key columns input for table: "muck_truck_category_info"
"""
input muck_truck_category_info_pk_columns_input {
    """主键"""
    id: bigint!
}

"""
select columns of table "muck_truck_category_info"
"""
enum muck_truck_category_info_select_column {
    """column name"""
    actual_owner_contact_phone

    """column name"""
    actual_owner_id_number

    """column name"""
    actual_owner_id_photo

    """column name"""
    actual_owner_name

    """column name"""
    annual_inspection_expiration_time

    """column name"""
    apply_inspection_time

    """column name"""
    axes_number

    """column name"""
    blacklist_deadline

    """column name"""
    compulsory_insurance_policy_picture

    """column name"""
    create_at

    """column name"""
    create_by

    """column name"""
    delete_at

    """column name"""
    delete_by

    """column name"""
    driving_license_contact_phone

    """column name"""
    driving_license_id_number

    """column name"""
    driving_liscense_owner_id_photo

    """column name"""
    engine_number

    """column name"""
    id

    """column name"""
    illegal_notice_number_endorsement

    """column name"""
    illegal_number_endorsement

    """column name"""
    incident_number_endorsement

    """column name"""
    initial_registration_date

    """column name"""
    insurance_expiry_time

    """column name"""
    is_blacklist

    """column name"""
    is_delete

    """column name"""
    is_due_security_alarm_processing

    """column name"""
    is_first_register

    """column name"""
    is_muck_office_audit

    """column name"""
    is_send_sms

    """column name"""
    issue_date_of_quangong_number

    """column name"""
    owner_id_photo

    """column name"""
    processing_notes

    """column name"""
    processing_time

    """column name"""
    processor

    """column name"""
    review_notes

    """column name"""
    review_status

    """column name"""
    review_time

    """column name"""
    reviewer

    """column name"""
    secondary_maintenance_expiry_date

    """column name"""
    secondary_maintenance_location

    """column name"""
    signing_acceptance_application_time

    """column name"""
    third_party_insurance_coverage

    """column name"""
    third_party_insurance_expiry_time

    """column name"""
    third_party_insurance_policy_picture

    """column name"""
    total_mass

    """column name"""
    update_at

    """column name"""
    update_by

    """column name"""
    vehicle_description

    """column name"""
    vehicle_id

    """column name"""
    vehicle_nature

    """column name"""
    vehicle_operating_certificate_number

    """column name"""
    vehicle_operating_certificate_photo

    """column name"""
    vehicle_picture
}

"""
input type for updating data in table "muck_truck_category_info"
"""
input muck_truck_category_info_set_input {
    actual_owner_contact_phone: String
    actual_owner_id_number: String
    actual_owner_id_photo: String
    actual_owner_name: String
    annual_inspection_expiration_time: timestamptz
    apply_inspection_time: timestamptz
    axes_number: Int
    blacklist_deadline: timestamptz
    compulsory_insurance_policy_picture: String
    create_at: timestamptz
    create_by: String
    delete_at: timestamptz
    delete_by: String
    driving_license_contact_phone: String
    driving_license_id_number: String
    driving_liscense_owner_id_photo: String
    engine_number: String
    id: bigint
    illegal_notice_number_endorsement: String
    illegal_number_endorsement: String
    incident_number_endorsement: String
    initial_registration_date: timestamptz
    insurance_expiry_time: timestamptz
    is_blacklist: Boolean
    is_delete: Boolean
    is_due_security_alarm_processing: Boolean
    is_first_register: Boolean
    is_muck_office_audit: Boolean
    is_send_sms: Boolean
    issue_date_of_quangong_number: timestamptz
    owner_id_photo: String
    processing_notes: String
    processing_time: timestamptz
    processor: String
    review_notes: String
    review_status: String
    review_time: timestamptz
    reviewer: String
    secondary_maintenance_expiry_date: timestamptz
    secondary_maintenance_location: String
    signing_acceptance_application_time: timestamptz
    third_party_insurance_coverage: String
    third_party_insurance_expiry_time: timestamptz
    third_party_insurance_policy_picture: String
    total_mass: numeric
    update_at: timestamptz
    update_by: String
    vehicle_description: String
    vehicle_id: String
    vehicle_nature: Int
    vehicle_operating_certificate_number: String
    vehicle_operating_certificate_photo: String
    vehicle_picture: String
}

"""aggregate stddev on columns"""
type muck_truck_category_info_stddev_fields {
    axes_number: Float
    id: Float
    total_mass: Float
    vehicle_nature: Float
}

"""
order by stddev() on columns of table "muck_truck_category_info"
"""
input muck_truck_category_info_stddev_order_by {
    axes_number: order_by
    id: order_by
    total_mass: order_by
    vehicle_nature: order_by
}

"""aggregate stddev_pop on columns"""
type muck_truck_category_info_stddev_pop_fields {
    axes_number: Float
    id: Float
    total_mass: Float
    vehicle_nature: Float
}

"""
order by stddev_pop() on columns of table "muck_truck_category_info"
"""
input muck_truck_category_info_stddev_pop_order_by {
    axes_number: order_by
    id: order_by
    total_mass: order_by
    vehicle_nature: order_by
}

"""aggregate stddev_samp on columns"""
type muck_truck_category_info_stddev_samp_fields {
    axes_number: Float
    id: Float
    total_mass: Float
    vehicle_nature: Float
}

"""
order by stddev_samp() on columns of table "muck_truck_category_info"
"""
input muck_truck_category_info_stddev_samp_order_by {
    axes_number: order_by
    id: order_by
    total_mass: order_by
    vehicle_nature: order_by
}

"""aggregate sum on columns"""
type muck_truck_category_info_sum_fields {
    axes_number: Int
    id: bigint
    total_mass: numeric
    vehicle_nature: Int
}

"""
order by sum() on columns of table "muck_truck_category_info"
"""
input muck_truck_category_info_sum_order_by {
    axes_number: order_by
    id: order_by
    total_mass: order_by
    vehicle_nature: order_by
}

"""
update columns of table "muck_truck_category_info"
"""
enum muck_truck_category_info_update_column {
    """column name"""
    actual_owner_contact_phone

    """column name"""
    actual_owner_id_number

    """column name"""
    actual_owner_id_photo

    """column name"""
    actual_owner_name

    """column name"""
    annual_inspection_expiration_time

    """column name"""
    apply_inspection_time

    """column name"""
    axes_number

    """column name"""
    blacklist_deadline

    """column name"""
    compulsory_insurance_policy_picture

    """column name"""
    create_at

    """column name"""
    create_by

    """column name"""
    delete_at

    """column name"""
    delete_by

    """column name"""
    driving_license_contact_phone

    """column name"""
    driving_license_id_number

    """column name"""
    driving_liscense_owner_id_photo

    """column name"""
    engine_number

    """column name"""
    id

    """column name"""
    illegal_notice_number_endorsement

    """column name"""
    illegal_number_endorsement

    """column name"""
    incident_number_endorsement

    """column name"""
    initial_registration_date

    """column name"""
    insurance_expiry_time

    """column name"""
    is_blacklist

    """column name"""
    is_delete

    """column name"""
    is_due_security_alarm_processing

    """column name"""
    is_first_register

    """column name"""
    is_muck_office_audit

    """column name"""
    is_send_sms

    """column name"""
    issue_date_of_quangong_number

    """column name"""
    owner_id_photo

    """column name"""
    processing_notes

    """column name"""
    processing_time

    """column name"""
    processor

    """column name"""
    review_notes

    """column name"""
    review_status

    """column name"""
    review_time

    """column name"""
    reviewer

    """column name"""
    secondary_maintenance_expiry_date

    """column name"""
    secondary_maintenance_location

    """column name"""
    signing_acceptance_application_time

    """column name"""
    third_party_insurance_coverage

    """column name"""
    third_party_insurance_expiry_time

    """column name"""
    third_party_insurance_policy_picture

    """column name"""
    total_mass

    """column name"""
    update_at

    """column name"""
    update_by

    """column name"""
    vehicle_description

    """column name"""
    vehicle_id

    """column name"""
    vehicle_nature

    """column name"""
    vehicle_operating_certificate_number

    """column name"""
    vehicle_operating_certificate_photo

    """column name"""
    vehicle_picture
}

"""aggregate var_pop on columns"""
type muck_truck_category_info_var_pop_fields {
    axes_number: Float
    id: Float
    total_mass: Float
    vehicle_nature: Float
}

"""
order by var_pop() on columns of table "muck_truck_category_info"
"""
input muck_truck_category_info_var_pop_order_by {
    axes_number: order_by
    id: order_by
    total_mass: order_by
    vehicle_nature: order_by
}

"""aggregate var_samp on columns"""
type muck_truck_category_info_var_samp_fields {
    axes_number: Float
    id: Float
    total_mass: Float
    vehicle_nature: Float
}

"""
order by var_samp() on columns of table "muck_truck_category_info"
"""
input muck_truck_category_info_var_samp_order_by {
    axes_number: order_by
    id: order_by
    total_mass: order_by
    vehicle_nature: order_by
}

"""aggregate variance on columns"""
type muck_truck_category_info_variance_fields {
    axes_number: Float
    id: Float
    total_mass: Float
    vehicle_nature: Float
}

"""
order by variance() on columns of table "muck_truck_category_info"
"""
input muck_truck_category_info_variance_order_by {
    axes_number: order_by
    id: order_by
    total_mass: order_by
    vehicle_nature: order_by
}

"""
渣土车信息表


columns and relationships of "muck_truck_info"

"""
type muck_truck_info {
    """地区ID"""
    area_id: bigint

    """创建时间"""
    create_at: timestamptz!

    """创建人"""
    create_by: String!

    """删除时间"""
    delete_at: timestamptz

    """删除人"""
    delete_by: String

    """费用到期时间"""
    expiry_date: timestamptz

    """伪IP"""
    fake_ip: String

    """是否预备库"""
    is_reserve_library: Boolean

    """装载类别"""
    load_category: String

    """移动办卡地"""
    mobile_card_location: String

    """主键"""
    muck_truck_id: bigint!

    """车辆类型（1.渣土车 2.混凝土车 3.砂石车）"""
    muck_truck_type: Int

    """注册日期"""
    registration_date: timestamptz

    """自编号"""
    self_number: String

    """服务器ID??"""
    server_id: bigint

    """SIM卡号"""
    sim_card_number: String

    """修改时间"""
    update_at: timestamptz

    """修改人"""
    update_by: String

    """vehicle_info 车辆信息表 的vehicle_id"""
    vehicle_id: String!
}

"""
aggregated selection of "muck_truck_info"
"""
type muck_truck_info_aggregate {
    aggregate: muck_truck_info_aggregate_fields
    nodes: [muck_truck_info!]!
}

"""
aggregate fields of "muck_truck_info"
"""
type muck_truck_info_aggregate_fields {
    avg: muck_truck_info_avg_fields
    count(columns: [muck_truck_info_select_column!], distinct: Boolean): Int
    max: muck_truck_info_max_fields
    min: muck_truck_info_min_fields
    stddev: muck_truck_info_stddev_fields
    stddev_pop: muck_truck_info_stddev_pop_fields
    stddev_samp: muck_truck_info_stddev_samp_fields
    sum: muck_truck_info_sum_fields
    var_pop: muck_truck_info_var_pop_fields
    var_samp: muck_truck_info_var_samp_fields
    variance: muck_truck_info_variance_fields
}

"""
order by aggregate values of table "muck_truck_info"
"""
input muck_truck_info_aggregate_order_by {
    avg: muck_truck_info_avg_order_by
    count: order_by
    max: muck_truck_info_max_order_by
    min: muck_truck_info_min_order_by
    stddev: muck_truck_info_stddev_order_by
    stddev_pop: muck_truck_info_stddev_pop_order_by
    stddev_samp: muck_truck_info_stddev_samp_order_by
    sum: muck_truck_info_sum_order_by
    var_pop: muck_truck_info_var_pop_order_by
    var_samp: muck_truck_info_var_samp_order_by
    variance: muck_truck_info_variance_order_by
}

"""
input type for inserting array relation for remote table "muck_truck_info"
"""
input muck_truck_info_arr_rel_insert_input {
    data: [muck_truck_info_insert_input!]!
    on_conflict: muck_truck_info_on_conflict
}

"""aggregate avg on columns"""
type muck_truck_info_avg_fields {
    area_id: Float
    muck_truck_id: Float
    muck_truck_type: Float
    server_id: Float
}

"""
order by avg() on columns of table "muck_truck_info"
"""
input muck_truck_info_avg_order_by {
    area_id: order_by
    muck_truck_id: order_by
    muck_truck_type: order_by
    server_id: order_by
}

"""
Boolean expression to filter rows from the table "muck_truck_info". All fields are combined with a logical 'AND'.
"""
input muck_truck_info_bool_exp {
    _and: [muck_truck_info_bool_exp]
    _not: muck_truck_info_bool_exp
    _or: [muck_truck_info_bool_exp]
    area_id: bigint_comparison_exp
    create_at: timestamptz_comparison_exp
    create_by: String_comparison_exp
    delete_at: timestamptz_comparison_exp
    delete_by: String_comparison_exp
    expiry_date: timestamptz_comparison_exp
    fake_ip: String_comparison_exp
    is_reserve_library: Boolean_comparison_exp
    load_category: String_comparison_exp
    mobile_card_location: String_comparison_exp
    muck_truck_id: bigint_comparison_exp
    muck_truck_type: Int_comparison_exp
    registration_date: timestamptz_comparison_exp
    self_number: String_comparison_exp
    server_id: bigint_comparison_exp
    sim_card_number: String_comparison_exp
    update_at: timestamptz_comparison_exp
    update_by: String_comparison_exp
    vehicle_id: String_comparison_exp
}

"""
unique or primary key constraints on table "muck_truck_info"
"""
enum muck_truck_info_constraint {
    """unique or primary key constraint"""
    muck_truck_info_pkey
}

"""
input type for incrementing integer column in table "muck_truck_info"
"""
input muck_truck_info_inc_input {
    area_id: bigint
    muck_truck_id: bigint
    muck_truck_type: Int
    server_id: bigint
}

"""
input type for inserting data into table "muck_truck_info"
"""
input muck_truck_info_insert_input {
    area_id: bigint
    create_at: timestamptz
    create_by: String
    delete_at: timestamptz
    delete_by: String
    expiry_date: timestamptz
    fake_ip: String
    is_reserve_library: Boolean
    load_category: String
    mobile_card_location: String
    muck_truck_id: bigint
    muck_truck_type: Int
    registration_date: timestamptz
    self_number: String
    server_id: bigint
    sim_card_number: String
    update_at: timestamptz
    update_by: String
    vehicle_id: String
}

"""aggregate max on columns"""
type muck_truck_info_max_fields {
    area_id: bigint
    create_at: timestamptz
    create_by: String
    delete_at: timestamptz
    delete_by: String
    expiry_date: timestamptz
    fake_ip: String
    load_category: String
    mobile_card_location: String
    muck_truck_id: bigint
    muck_truck_type: Int
    registration_date: timestamptz
    self_number: String
    server_id: bigint
    sim_card_number: String
    update_at: timestamptz
    update_by: String
    vehicle_id: String
}

"""
order by max() on columns of table "muck_truck_info"
"""
input muck_truck_info_max_order_by {
    area_id: order_by
    create_at: order_by
    create_by: order_by
    delete_at: order_by
    delete_by: order_by
    expiry_date: order_by
    fake_ip: order_by
    load_category: order_by
    mobile_card_location: order_by
    muck_truck_id: order_by
    muck_truck_type: order_by
    registration_date: order_by
    self_number: order_by
    server_id: order_by
    sim_card_number: order_by
    update_at: order_by
    update_by: order_by
    vehicle_id: order_by
}

"""aggregate min on columns"""
type muck_truck_info_min_fields {
    area_id: bigint
    create_at: timestamptz
    create_by: String
    delete_at: timestamptz
    delete_by: String
    expiry_date: timestamptz
    fake_ip: String
    load_category: String
    mobile_card_location: String
    muck_truck_id: bigint
    muck_truck_type: Int
    registration_date: timestamptz
    self_number: String
    server_id: bigint
    sim_card_number: String
    update_at: timestamptz
    update_by: String
    vehicle_id: String
}

"""
order by min() on columns of table "muck_truck_info"
"""
input muck_truck_info_min_order_by {
    area_id: order_by
    create_at: order_by
    create_by: order_by
    delete_at: order_by
    delete_by: order_by
    expiry_date: order_by
    fake_ip: order_by
    load_category: order_by
    mobile_card_location: order_by
    muck_truck_id: order_by
    muck_truck_type: order_by
    registration_date: order_by
    self_number: order_by
    server_id: order_by
    sim_card_number: order_by
    update_at: order_by
    update_by: order_by
    vehicle_id: order_by
}

"""
response of any mutation on the table "muck_truck_info"
"""
type muck_truck_info_mutation_response {
    """number of affected rows by the mutation"""
    affected_rows: Int!

    """data of the affected rows by the mutation"""
    returning: [muck_truck_info!]!
}

"""
input type for inserting object relation for remote table "muck_truck_info"
"""
input muck_truck_info_obj_rel_insert_input {
    data: muck_truck_info_insert_input!
    on_conflict: muck_truck_info_on_conflict
}

"""
on conflict condition type for table "muck_truck_info"
"""
input muck_truck_info_on_conflict {
    constraint: muck_truck_info_constraint!
    update_columns: [muck_truck_info_update_column!]!
    where: muck_truck_info_bool_exp
}

"""
ordering options when selecting data from "muck_truck_info"
"""
input muck_truck_info_order_by {
    area_id: order_by
    create_at: order_by
    create_by: order_by
    delete_at: order_by
    delete_by: order_by
    expiry_date: order_by
    fake_ip: order_by
    is_reserve_library: order_by
    load_category: order_by
    mobile_card_location: order_by
    muck_truck_id: order_by
    muck_truck_type: order_by
    registration_date: order_by
    self_number: order_by
    server_id: order_by
    sim_card_number: order_by
    update_at: order_by
    update_by: order_by
    vehicle_id: order_by
}

"""
primary key columns input for table: "muck_truck_info"
"""
input muck_truck_info_pk_columns_input {
    """主键"""
    muck_truck_id: bigint!
}

"""
select columns of table "muck_truck_info"
"""
enum muck_truck_info_select_column {
    """column name"""
    area_id

    """column name"""
    create_at

    """column name"""
    create_by

    """column name"""
    delete_at

    """column name"""
    delete_by

    """column name"""
    expiry_date

    """column name"""
    fake_ip

    """column name"""
    is_reserve_library

    """column name"""
    load_category

    """column name"""
    mobile_card_location

    """column name"""
    muck_truck_id

    """column name"""
    muck_truck_type

    """column name"""
    registration_date

    """column name"""
    self_number

    """column name"""
    server_id

    """column name"""
    sim_card_number

    """column name"""
    update_at

    """column name"""
    update_by

    """column name"""
    vehicle_id
}

"""
input type for updating data in table "muck_truck_info"
"""
input muck_truck_info_set_input {
    area_id: bigint
    create_at: timestamptz
    create_by: String
    delete_at: timestamptz
    delete_by: String
    expiry_date: timestamptz
    fake_ip: String
    is_reserve_library: Boolean
    load_category: String
    mobile_card_location: String
    muck_truck_id: bigint
    muck_truck_type: Int
    registration_date: timestamptz
    self_number: String
    server_id: bigint
    sim_card_number: String
    update_at: timestamptz
    update_by: String
    vehicle_id: String
}

"""aggregate stddev on columns"""
type muck_truck_info_stddev_fields {
    area_id: Float
    muck_truck_id: Float
    muck_truck_type: Float
    server_id: Float
}

"""
order by stddev() on columns of table "muck_truck_info"
"""
input muck_truck_info_stddev_order_by {
    area_id: order_by
    muck_truck_id: order_by
    muck_truck_type: order_by
    server_id: order_by
}

"""aggregate stddev_pop on columns"""
type muck_truck_info_stddev_pop_fields {
    area_id: Float
    muck_truck_id: Float
    muck_truck_type: Float
    server_id: Float
}

"""
order by stddev_pop() on columns of table "muck_truck_info"
"""
input muck_truck_info_stddev_pop_order_by {
    area_id: order_by
    muck_truck_id: order_by
    muck_truck_type: order_by
    server_id: order_by
}

"""aggregate stddev_samp on columns"""
type muck_truck_info_stddev_samp_fields {
    area_id: Float
    muck_truck_id: Float
    muck_truck_type: Float
    server_id: Float
}

"""
order by stddev_samp() on columns of table "muck_truck_info"
"""
input muck_truck_info_stddev_samp_order_by {
    area_id: order_by
    muck_truck_id: order_by
    muck_truck_type: order_by
    server_id: order_by
}

"""aggregate sum on columns"""
type muck_truck_info_sum_fields {
    area_id: bigint
    muck_truck_id: bigint
    muck_truck_type: Int
    server_id: bigint
}

"""
order by sum() on columns of table "muck_truck_info"
"""
input muck_truck_info_sum_order_by {
    area_id: order_by
    muck_truck_id: order_by
    muck_truck_type: order_by
    server_id: order_by
}

"""
update columns of table "muck_truck_info"
"""
enum muck_truck_info_update_column {
    """column name"""
    area_id

    """column name"""
    create_at

    """column name"""
    create_by

    """column name"""
    delete_at

    """column name"""
    delete_by

    """column name"""
    expiry_date

    """column name"""
    fake_ip

    """column name"""
    is_reserve_library

    """column name"""
    load_category

    """column name"""
    mobile_card_location

    """column name"""
    muck_truck_id

    """column name"""
    muck_truck_type

    """column name"""
    registration_date

    """column name"""
    self_number

    """column name"""
    server_id

    """column name"""
    sim_card_number

    """column name"""
    update_at

    """column name"""
    update_by

    """column name"""
    vehicle_id
}

"""aggregate var_pop on columns"""
type muck_truck_info_var_pop_fields {
    area_id: Float
    muck_truck_id: Float
    muck_truck_type: Float
    server_id: Float
}

"""
order by var_pop() on columns of table "muck_truck_info"
"""
input muck_truck_info_var_pop_order_by {
    area_id: order_by
    muck_truck_id: order_by
    muck_truck_type: order_by
    server_id: order_by
}

"""aggregate var_samp on columns"""
type muck_truck_info_var_samp_fields {
    area_id: Float
    muck_truck_id: Float
    muck_truck_type: Float
    server_id: Float
}

"""
order by var_samp() on columns of table "muck_truck_info"
"""
input muck_truck_info_var_samp_order_by {
    area_id: order_by
    muck_truck_id: order_by
    muck_truck_type: order_by
    server_id: order_by
}

"""aggregate variance on columns"""
type muck_truck_info_variance_fields {
    area_id: Float
    muck_truck_id: Float
    muck_truck_type: Float
    server_id: Float
}

"""
order by variance() on columns of table "muck_truck_info"
"""
input muck_truck_info_variance_order_by {
    area_id: order_by
    muck_truck_id: order_by
    muck_truck_type: order_by
    server_id: order_by
}

"""
渣土车车辆预编号表


columns and relationships of "muck_truck_preview_number"

"""
type muck_truck_preview_number {
    """确认状态"""
    confirm_status: Int

    """确认时间"""
    confirm_time: timestamptz

    """确认人"""
    confirmor: String

    """联系人"""
    contact_person: String

    """联系电话"""
    contact_phone: String

    """创建人"""
    create_by: String!

    """删除时间"""
    delete_at: timestamptz

    """删除人"""
    delete_by: String

    """前车牌"""
    front_license_plate: String

    """主键"""
    id: bigint!

    """初次登记日期"""
    initial_registration_date: timestamptz

    """是否删除"""
    is_delete: Boolean

    """是否登记销售订单"""
    is_register_sale_order: Boolean

    """是否自动审核"""
    is_review_automatically: Boolean

    """制作中时间"""
    marking_time: timestamptz

    """原编号"""
    original_number: String

    """制作状态"""
    production_status: Int

    """制作时间"""
    production_time: timestamptz

    """制作次数"""
    production_times: Int

    """后车牌"""
    rear_license_plate: String

    """登记时间"""
    registration_time: timestamptz

    """备注"""
    remarks: String

    """侧车牌"""
    side_license_plate: String

    """预编号"""
    svn_number: String

    """违法未处理数"""
    unlawful_violation_number: Int

    """修改时间"""
    update_at: timestamptz!

    """修改人"""
    update_by: String

    """vehicle_info 车辆信息表 的vehicle_id"""
    vehicle_id: String!

    """工号牌颜色（green.绿色 yellow.黄色）"""
    work_number_plate_color: String
}

"""
aggregated selection of "muck_truck_preview_number"
"""
type muck_truck_preview_number_aggregate {
    aggregate: muck_truck_preview_number_aggregate_fields
    nodes: [muck_truck_preview_number!]!
}

"""
aggregate fields of "muck_truck_preview_number"
"""
type muck_truck_preview_number_aggregate_fields {
    avg: muck_truck_preview_number_avg_fields
    count(columns: [muck_truck_preview_number_select_column!], distinct: Boolean): Int
    max: muck_truck_preview_number_max_fields
    min: muck_truck_preview_number_min_fields
    stddev: muck_truck_preview_number_stddev_fields
    stddev_pop: muck_truck_preview_number_stddev_pop_fields
    stddev_samp: muck_truck_preview_number_stddev_samp_fields
    sum: muck_truck_preview_number_sum_fields
    var_pop: muck_truck_preview_number_var_pop_fields
    var_samp: muck_truck_preview_number_var_samp_fields
    variance: muck_truck_preview_number_variance_fields
}

"""
order by aggregate values of table "muck_truck_preview_number"
"""
input muck_truck_preview_number_aggregate_order_by {
    avg: muck_truck_preview_number_avg_order_by
    count: order_by
    max: muck_truck_preview_number_max_order_by
    min: muck_truck_preview_number_min_order_by
    stddev: muck_truck_preview_number_stddev_order_by
    stddev_pop: muck_truck_preview_number_stddev_pop_order_by
    stddev_samp: muck_truck_preview_number_stddev_samp_order_by
    sum: muck_truck_preview_number_sum_order_by
    var_pop: muck_truck_preview_number_var_pop_order_by
    var_samp: muck_truck_preview_number_var_samp_order_by
    variance: muck_truck_preview_number_variance_order_by
}

"""
input type for inserting array relation for remote table "muck_truck_preview_number"
"""
input muck_truck_preview_number_arr_rel_insert_input {
    data: [muck_truck_preview_number_insert_input!]!
    on_conflict: muck_truck_preview_number_on_conflict
}

"""aggregate avg on columns"""
type muck_truck_preview_number_avg_fields {
    confirm_status: Float
    id: Float
    production_status: Float
    production_times: Float
    unlawful_violation_number: Float
}

"""
order by avg() on columns of table "muck_truck_preview_number"
"""
input muck_truck_preview_number_avg_order_by {
    confirm_status: order_by
    id: order_by
    production_status: order_by
    production_times: order_by
    unlawful_violation_number: order_by
}

"""
Boolean expression to filter rows from the table "muck_truck_preview_number". All fields are combined with a logical 'AND'.
"""
input muck_truck_preview_number_bool_exp {
    _and: [muck_truck_preview_number_bool_exp]
    _not: muck_truck_preview_number_bool_exp
    _or: [muck_truck_preview_number_bool_exp]
    confirm_status: Int_comparison_exp
    confirm_time: timestamptz_comparison_exp
    confirmor: String_comparison_exp
    contact_person: String_comparison_exp
    contact_phone: String_comparison_exp
    create_by: String_comparison_exp
    delete_at: timestamptz_comparison_exp
    delete_by: String_comparison_exp
    front_license_plate: String_comparison_exp
    id: bigint_comparison_exp
    initial_registration_date: timestamptz_comparison_exp
    is_delete: Boolean_comparison_exp
    is_register_sale_order: Boolean_comparison_exp
    is_review_automatically: Boolean_comparison_exp
    marking_time: timestamptz_comparison_exp
    original_number: String_comparison_exp
    production_status: Int_comparison_exp
    production_time: timestamptz_comparison_exp
    production_times: Int_comparison_exp
    rear_license_plate: String_comparison_exp
    registration_time: timestamptz_comparison_exp
    remarks: String_comparison_exp
    side_license_plate: String_comparison_exp
    svn_number: String_comparison_exp
    unlawful_violation_number: Int_comparison_exp
    update_at: timestamptz_comparison_exp
    update_by: String_comparison_exp
    vehicle_id: String_comparison_exp
    work_number_plate_color: String_comparison_exp
}

"""
unique or primary key constraints on table "muck_truck_preview_number"
"""
enum muck_truck_preview_number_constraint {
    """unique or primary key constraint"""
    muck_truck_preview_number_pkey
}

"""
input type for incrementing integer column in table "muck_truck_preview_number"
"""
input muck_truck_preview_number_inc_input {
    confirm_status: Int
    id: bigint
    production_status: Int
    production_times: Int
    unlawful_violation_number: Int
}

"""
input type for inserting data into table "muck_truck_preview_number"
"""
input muck_truck_preview_number_insert_input {
    confirm_status: Int
    confirm_time: timestamptz
    confirmor: String
    contact_person: String
    contact_phone: String
    create_by: String
    delete_at: timestamptz
    delete_by: String
    front_license_plate: String
    id: bigint
    initial_registration_date: timestamptz
    is_delete: Boolean
    is_register_sale_order: Boolean
    is_review_automatically: Boolean
    marking_time: timestamptz
    original_number: String
    production_status: Int
    production_time: timestamptz
    production_times: Int
    rear_license_plate: String
    registration_time: timestamptz
    remarks: String
    side_license_plate: String
    svn_number: String
    unlawful_violation_number: Int
    update_at: timestamptz
    update_by: String
    vehicle_id: String
    work_number_plate_color: String
}

"""aggregate max on columns"""
type muck_truck_preview_number_max_fields {
    confirm_status: Int
    confirm_time: timestamptz
    confirmor: String
    contact_person: String
    contact_phone: String
    create_by: String
    delete_at: timestamptz
    delete_by: String
    front_license_plate: String
    id: bigint
    initial_registration_date: timestamptz
    marking_time: timestamptz
    original_number: String
    production_status: Int
    production_time: timestamptz
    production_times: Int
    rear_license_plate: String
    registration_time: timestamptz
    remarks: String
    side_license_plate: String
    svn_number: String
    unlawful_violation_number: Int
    update_at: timestamptz
    update_by: String
    vehicle_id: String
    work_number_plate_color: String
}

"""
order by max() on columns of table "muck_truck_preview_number"
"""
input muck_truck_preview_number_max_order_by {
    confirm_status: order_by
    confirm_time: order_by
    confirmor: order_by
    contact_person: order_by
    contact_phone: order_by
    create_by: order_by
    delete_at: order_by
    delete_by: order_by
    front_license_plate: order_by
    id: order_by
    initial_registration_date: order_by
    marking_time: order_by
    original_number: order_by
    production_status: order_by
    production_time: order_by
    production_times: order_by
    rear_license_plate: order_by
    registration_time: order_by
    remarks: order_by
    side_license_plate: order_by
    svn_number: order_by
    unlawful_violation_number: order_by
    update_at: order_by
    update_by: order_by
    vehicle_id: order_by
    work_number_plate_color: order_by
}

"""aggregate min on columns"""
type muck_truck_preview_number_min_fields {
    confirm_status: Int
    confirm_time: timestamptz
    confirmor: String
    contact_person: String
    contact_phone: String
    create_by: String
    delete_at: timestamptz
    delete_by: String
    front_license_plate: String
    id: bigint
    initial_registration_date: timestamptz
    marking_time: timestamptz
    original_number: String
    production_status: Int
    production_time: timestamptz
    production_times: Int
    rear_license_plate: String
    registration_time: timestamptz
    remarks: String
    side_license_plate: String
    svn_number: String
    unlawful_violation_number: Int
    update_at: timestamptz
    update_by: String
    vehicle_id: String
    work_number_plate_color: String
}

"""
order by min() on columns of table "muck_truck_preview_number"
"""
input muck_truck_preview_number_min_order_by {
    confirm_status: order_by
    confirm_time: order_by
    confirmor: order_by
    contact_person: order_by
    contact_phone: order_by
    create_by: order_by
    delete_at: order_by
    delete_by: order_by
    front_license_plate: order_by
    id: order_by
    initial_registration_date: order_by
    marking_time: order_by
    original_number: order_by
    production_status: order_by
    production_time: order_by
    production_times: order_by
    rear_license_plate: order_by
    registration_time: order_by
    remarks: order_by
    side_license_plate: order_by
    svn_number: order_by
    unlawful_violation_number: order_by
    update_at: order_by
    update_by: order_by
    vehicle_id: order_by
    work_number_plate_color: order_by
}

"""
response of any mutation on the table "muck_truck_preview_number"
"""
type muck_truck_preview_number_mutation_response {
    """number of affected rows by the mutation"""
    affected_rows: Int!

    """data of the affected rows by the mutation"""
    returning: [muck_truck_preview_number!]!
}

"""
input type for inserting object relation for remote table "muck_truck_preview_number"
"""
input muck_truck_preview_number_obj_rel_insert_input {
    data: muck_truck_preview_number_insert_input!
    on_conflict: muck_truck_preview_number_on_conflict
}

"""
on conflict condition type for table "muck_truck_preview_number"
"""
input muck_truck_preview_number_on_conflict {
    constraint: muck_truck_preview_number_constraint!
    update_columns: [muck_truck_preview_number_update_column!]!
    where: muck_truck_preview_number_bool_exp
}

"""
ordering options when selecting data from "muck_truck_preview_number"
"""
input muck_truck_preview_number_order_by {
    confirm_status: order_by
    confirm_time: order_by
    confirmor: order_by
    contact_person: order_by
    contact_phone: order_by
    create_by: order_by
    delete_at: order_by
    delete_by: order_by
    front_license_plate: order_by
    id: order_by
    initial_registration_date: order_by
    is_delete: order_by
    is_register_sale_order: order_by
    is_review_automatically: order_by
    marking_time: order_by
    original_number: order_by
    production_status: order_by
    production_time: order_by
    production_times: order_by
    rear_license_plate: order_by
    registration_time: order_by
    remarks: order_by
    side_license_plate: order_by
    svn_number: order_by
    unlawful_violation_number: order_by
    update_at: order_by
    update_by: order_by
    vehicle_id: order_by
    work_number_plate_color: order_by
}

"""
primary key columns input for table: "muck_truck_preview_number"
"""
input muck_truck_preview_number_pk_columns_input {
    """主键"""
    id: bigint!
}

"""
select columns of table "muck_truck_preview_number"
"""
enum muck_truck_preview_number_select_column {
    """column name"""
    confirm_status

    """column name"""
    confirm_time

    """column name"""
    confirmor

    """column name"""
    contact_person

    """column name"""
    contact_phone

    """column name"""
    create_by

    """column name"""
    delete_at

    """column name"""
    delete_by

    """column name"""
    front_license_plate

    """column name"""
    id

    """column name"""
    initial_registration_date

    """column name"""
    is_delete

    """column name"""
    is_register_sale_order

    """column name"""
    is_review_automatically

    """column name"""
    marking_time

    """column name"""
    original_number

    """column name"""
    production_status

    """column name"""
    production_time

    """column name"""
    production_times

    """column name"""
    rear_license_plate

    """column name"""
    registration_time

    """column name"""
    remarks

    """column name"""
    side_license_plate

    """column name"""
    svn_number

    """column name"""
    unlawful_violation_number

    """column name"""
    update_at

    """column name"""
    update_by

    """column name"""
    vehicle_id

    """column name"""
    work_number_plate_color
}

"""
input type for updating data in table "muck_truck_preview_number"
"""
input muck_truck_preview_number_set_input {
    confirm_status: Int
    confirm_time: timestamptz
    confirmor: String
    contact_person: String
    contact_phone: String
    create_by: String
    delete_at: timestamptz
    delete_by: String
    front_license_plate: String
    id: bigint
    initial_registration_date: timestamptz
    is_delete: Boolean
    is_register_sale_order: Boolean
    is_review_automatically: Boolean
    marking_time: timestamptz
    original_number: String
    production_status: Int
    production_time: timestamptz
    production_times: Int
    rear_license_plate: String
    registration_time: timestamptz
    remarks: String
    side_license_plate: String
    svn_number: String
    unlawful_violation_number: Int
    update_at: timestamptz
    update_by: String
    vehicle_id: String
    work_number_plate_color: String
}

"""aggregate stddev on columns"""
type muck_truck_preview_number_stddev_fields {
    confirm_status: Float
    id: Float
    production_status: Float
    production_times: Float
    unlawful_violation_number: Float
}

"""
order by stddev() on columns of table "muck_truck_preview_number"
"""
input muck_truck_preview_number_stddev_order_by {
    confirm_status: order_by
    id: order_by
    production_status: order_by
    production_times: order_by
    unlawful_violation_number: order_by
}

"""aggregate stddev_pop on columns"""
type muck_truck_preview_number_stddev_pop_fields {
    confirm_status: Float
    id: Float
    production_status: Float
    production_times: Float
    unlawful_violation_number: Float
}

"""
order by stddev_pop() on columns of table "muck_truck_preview_number"
"""
input muck_truck_preview_number_stddev_pop_order_by {
    confirm_status: order_by
    id: order_by
    production_status: order_by
    production_times: order_by
    unlawful_violation_number: order_by
}

"""aggregate stddev_samp on columns"""
type muck_truck_preview_number_stddev_samp_fields {
    confirm_status: Float
    id: Float
    production_status: Float
    production_times: Float
    unlawful_violation_number: Float
}

"""
order by stddev_samp() on columns of table "muck_truck_preview_number"
"""
input muck_truck_preview_number_stddev_samp_order_by {
    confirm_status: order_by
    id: order_by
    production_status: order_by
    production_times: order_by
    unlawful_violation_number: order_by
}

"""aggregate sum on columns"""
type muck_truck_preview_number_sum_fields {
    confirm_status: Int
    id: bigint
    production_status: Int
    production_times: Int
    unlawful_violation_number: Int
}

"""
order by sum() on columns of table "muck_truck_preview_number"
"""
input muck_truck_preview_number_sum_order_by {
    confirm_status: order_by
    id: order_by
    production_status: order_by
    production_times: order_by
    unlawful_violation_number: order_by
}

"""
update columns of table "muck_truck_preview_number"
"""
enum muck_truck_preview_number_update_column {
    """column name"""
    confirm_status

    """column name"""
    confirm_time

    """column name"""
    confirmor

    """column name"""
    contact_person

    """column name"""
    contact_phone

    """column name"""
    create_by

    """column name"""
    delete_at

    """column name"""
    delete_by

    """column name"""
    front_license_plate

    """column name"""
    id

    """column name"""
    initial_registration_date

    """column name"""
    is_delete

    """column name"""
    is_register_sale_order

    """column name"""
    is_review_automatically

    """column name"""
    marking_time

    """column name"""
    original_number

    """column name"""
    production_status

    """column name"""
    production_time

    """column name"""
    production_times

    """column name"""
    rear_license_plate

    """column name"""
    registration_time

    """column name"""
    remarks

    """column name"""
    side_license_plate

    """column name"""
    svn_number

    """column name"""
    unlawful_violation_number

    """column name"""
    update_at

    """column name"""
    update_by

    """column name"""
    vehicle_id

    """column name"""
    work_number_plate_color
}

"""aggregate var_pop on columns"""
type muck_truck_preview_number_var_pop_fields {
    confirm_status: Float
    id: Float
    production_status: Float
    production_times: Float
    unlawful_violation_number: Float
}

"""
order by var_pop() on columns of table "muck_truck_preview_number"
"""
input muck_truck_preview_number_var_pop_order_by {
    confirm_status: order_by
    id: order_by
    production_status: order_by
    production_times: order_by
    unlawful_violation_number: order_by
}

"""aggregate var_samp on columns"""
type muck_truck_preview_number_var_samp_fields {
    confirm_status: Float
    id: Float
    production_status: Float
    production_times: Float
    unlawful_violation_number: Float
}

"""
order by var_samp() on columns of table "muck_truck_preview_number"
"""
input muck_truck_preview_number_var_samp_order_by {
    confirm_status: order_by
    id: order_by
    production_status: order_by
    production_times: order_by
    unlawful_violation_number: order_by
}

"""aggregate variance on columns"""
type muck_truck_preview_number_variance_fields {
    confirm_status: Float
    id: Float
    production_status: Float
    production_times: Float
    unlawful_violation_number: Float
}

"""
order by variance() on columns of table "muck_truck_preview_number"
"""
input muck_truck_preview_number_variance_order_by {
    confirm_status: order_by
    id: order_by
    production_status: order_by
    production_times: order_by
    unlawful_violation_number: order_by
}

"""
渣土车工号牌制作订单表


columns and relationships of "muck_truck_worker_id_card_orders"

"""
type muck_truck_worker_id_card_orders {
    """创建时间"""
    create_at: timestamptz!

    """创建人"""
    create_by: String!

    """删除时间"""
    delete_at: timestamptz

    """删除人"""
    delete_by: String

    """主键"""
    id: bigint!

    """muck_truck_preview_number  渣土车车辆预编号表的id"""
    preview_number_id: bigint!

    """修改时间"""
    update_at: timestamptz

    """修改人"""
    update_by: String

    """vehicle_info 车辆信息表 的vehicle_id"""
    vehicle_id: String!
}

"""
aggregated selection of "muck_truck_worker_id_card_orders"
"""
type muck_truck_worker_id_card_orders_aggregate {
    aggregate: muck_truck_worker_id_card_orders_aggregate_fields
    nodes: [muck_truck_worker_id_card_orders!]!
}

"""
aggregate fields of "muck_truck_worker_id_card_orders"
"""
type muck_truck_worker_id_card_orders_aggregate_fields {
    avg: muck_truck_worker_id_card_orders_avg_fields
    count(columns: [muck_truck_worker_id_card_orders_select_column!], distinct: Boolean): Int
    max: muck_truck_worker_id_card_orders_max_fields
    min: muck_truck_worker_id_card_orders_min_fields
    stddev: muck_truck_worker_id_card_orders_stddev_fields
    stddev_pop: muck_truck_worker_id_card_orders_stddev_pop_fields
    stddev_samp: muck_truck_worker_id_card_orders_stddev_samp_fields
    sum: muck_truck_worker_id_card_orders_sum_fields
    var_pop: muck_truck_worker_id_card_orders_var_pop_fields
    var_samp: muck_truck_worker_id_card_orders_var_samp_fields
    variance: muck_truck_worker_id_card_orders_variance_fields
}

"""
order by aggregate values of table "muck_truck_worker_id_card_orders"
"""
input muck_truck_worker_id_card_orders_aggregate_order_by {
    avg: muck_truck_worker_id_card_orders_avg_order_by
    count: order_by
    max: muck_truck_worker_id_card_orders_max_order_by
    min: muck_truck_worker_id_card_orders_min_order_by
    stddev: muck_truck_worker_id_card_orders_stddev_order_by
    stddev_pop: muck_truck_worker_id_card_orders_stddev_pop_order_by
    stddev_samp: muck_truck_worker_id_card_orders_stddev_samp_order_by
    sum: muck_truck_worker_id_card_orders_sum_order_by
    var_pop: muck_truck_worker_id_card_orders_var_pop_order_by
    var_samp: muck_truck_worker_id_card_orders_var_samp_order_by
    variance: muck_truck_worker_id_card_orders_variance_order_by
}

"""
input type for inserting array relation for remote table "muck_truck_worker_id_card_orders"
"""
input muck_truck_worker_id_card_orders_arr_rel_insert_input {
    data: [muck_truck_worker_id_card_orders_insert_input!]!
    on_conflict: muck_truck_worker_id_card_orders_on_conflict
}

"""aggregate avg on columns"""
type muck_truck_worker_id_card_orders_avg_fields {
    id: Float
    preview_number_id: Float
}

"""
order by avg() on columns of table "muck_truck_worker_id_card_orders"
"""
input muck_truck_worker_id_card_orders_avg_order_by {
    id: order_by
    preview_number_id: order_by
}

"""
Boolean expression to filter rows from the table
"muck_truck_worker_id_card_orders". All fields are combined with a logical 'AND'.
"""
input muck_truck_worker_id_card_orders_bool_exp {
    _and: [muck_truck_worker_id_card_orders_bool_exp]
    _not: muck_truck_worker_id_card_orders_bool_exp
    _or: [muck_truck_worker_id_card_orders_bool_exp]
    create_at: timestamptz_comparison_exp
    create_by: String_comparison_exp
    delete_at: timestamptz_comparison_exp
    delete_by: String_comparison_exp
    id: bigint_comparison_exp
    preview_number_id: bigint_comparison_exp
    update_at: timestamptz_comparison_exp
    update_by: String_comparison_exp
    vehicle_id: String_comparison_exp
}

"""
unique or primary key constraints on table "muck_truck_worker_id_card_orders"
"""
enum muck_truck_worker_id_card_orders_constraint {
    """unique or primary key constraint"""
    muck_truck_worker_id_card_orders_pkey
}

"""
input type for incrementing integer column in table "muck_truck_worker_id_card_orders"
"""
input muck_truck_worker_id_card_orders_inc_input {
    id: bigint
    preview_number_id: bigint
}

"""
input type for inserting data into table "muck_truck_worker_id_card_orders"
"""
input muck_truck_worker_id_card_orders_insert_input {
    create_at: timestamptz
    create_by: String
    delete_at: timestamptz
    delete_by: String
    id: bigint
    preview_number_id: bigint
    update_at: timestamptz
    update_by: String
    vehicle_id: String
}

"""aggregate max on columns"""
type muck_truck_worker_id_card_orders_max_fields {
    create_at: timestamptz
    create_by: String
    delete_at: timestamptz
    delete_by: String
    id: bigint
    preview_number_id: bigint
    update_at: timestamptz
    update_by: String
    vehicle_id: String
}

"""
order by max() on columns of table "muck_truck_worker_id_card_orders"
"""
input muck_truck_worker_id_card_orders_max_order_by {
    create_at: order_by
    create_by: order_by
    delete_at: order_by
    delete_by: order_by
    id: order_by
    preview_number_id: order_by
    update_at: order_by
    update_by: order_by
    vehicle_id: order_by
}

"""aggregate min on columns"""
type muck_truck_worker_id_card_orders_min_fields {
    create_at: timestamptz
    create_by: String
    delete_at: timestamptz
    delete_by: String
    id: bigint
    preview_number_id: bigint
    update_at: timestamptz
    update_by: String
    vehicle_id: String
}

"""
order by min() on columns of table "muck_truck_worker_id_card_orders"
"""
input muck_truck_worker_id_card_orders_min_order_by {
    create_at: order_by
    create_by: order_by
    delete_at: order_by
    delete_by: order_by
    id: order_by
    preview_number_id: order_by
    update_at: order_by
    update_by: order_by
    vehicle_id: order_by
}

"""
response of any mutation on the table "muck_truck_worker_id_card_orders"
"""
type muck_truck_worker_id_card_orders_mutation_response {
    """number of affected rows by the mutation"""
    affected_rows: Int!

    """data of the affected rows by the mutation"""
    returning: [muck_truck_worker_id_card_orders!]!
}

"""
input type for inserting object relation for remote table "muck_truck_worker_id_card_orders"
"""
input muck_truck_worker_id_card_orders_obj_rel_insert_input {
    data: muck_truck_worker_id_card_orders_insert_input!
    on_conflict: muck_truck_worker_id_card_orders_on_conflict
}

"""
on conflict condition type for table "muck_truck_worker_id_card_orders"
"""
input muck_truck_worker_id_card_orders_on_conflict {
    constraint: muck_truck_worker_id_card_orders_constraint!
    update_columns: [muck_truck_worker_id_card_orders_update_column!]!
    where: muck_truck_worker_id_card_orders_bool_exp
}

"""
ordering options when selecting data from "muck_truck_worker_id_card_orders"
"""
input muck_truck_worker_id_card_orders_order_by {
    create_at: order_by
    create_by: order_by
    delete_at: order_by
    delete_by: order_by
    id: order_by
    preview_number_id: order_by
    update_at: order_by
    update_by: order_by
    vehicle_id: order_by
}

"""
primary key columns input for table: "muck_truck_worker_id_card_orders"
"""
input muck_truck_worker_id_card_orders_pk_columns_input {
    """主键"""
    id: bigint!
}

"""
select columns of table "muck_truck_worker_id_card_orders"
"""
enum muck_truck_worker_id_card_orders_select_column {
    """column name"""
    create_at

    """column name"""
    create_by

    """column name"""
    delete_at

    """column name"""
    delete_by

    """column name"""
    id

    """column name"""
    preview_number_id

    """column name"""
    update_at

    """column name"""
    update_by

    """column name"""
    vehicle_id
}

"""
input type for updating data in table "muck_truck_worker_id_card_orders"
"""
input muck_truck_worker_id_card_orders_set_input {
    create_at: timestamptz
    create_by: String
    delete_at: timestamptz
    delete_by: String
    id: bigint
    preview_number_id: bigint
    update_at: timestamptz
    update_by: String
    vehicle_id: String
}

"""aggregate stddev on columns"""
type muck_truck_worker_id_card_orders_stddev_fields {
    id: Float
    preview_number_id: Float
}

"""
order by stddev() on columns of table "muck_truck_worker_id_card_orders"
"""
input muck_truck_worker_id_card_orders_stddev_order_by {
    id: order_by
    preview_number_id: order_by
}

"""aggregate stddev_pop on columns"""
type muck_truck_worker_id_card_orders_stddev_pop_fields {
    id: Float
    preview_number_id: Float
}

"""
order by stddev_pop() on columns of table "muck_truck_worker_id_card_orders"
"""
input muck_truck_worker_id_card_orders_stddev_pop_order_by {
    id: order_by
    preview_number_id: order_by
}

"""aggregate stddev_samp on columns"""
type muck_truck_worker_id_card_orders_stddev_samp_fields {
    id: Float
    preview_number_id: Float
}

"""
order by stddev_samp() on columns of table "muck_truck_worker_id_card_orders"
"""
input muck_truck_worker_id_card_orders_stddev_samp_order_by {
    id: order_by
    preview_number_id: order_by
}

"""aggregate sum on columns"""
type muck_truck_worker_id_card_orders_sum_fields {
    id: bigint
    preview_number_id: bigint
}

"""
order by sum() on columns of table "muck_truck_worker_id_card_orders"
"""
input muck_truck_worker_id_card_orders_sum_order_by {
    id: order_by
    preview_number_id: order_by
}

"""
update columns of table "muck_truck_worker_id_card_orders"
"""
enum muck_truck_worker_id_card_orders_update_column {
    """column name"""
    create_at

    """column name"""
    create_by

    """column name"""
    delete_at

    """column name"""
    delete_by

    """column name"""
    id

    """column name"""
    preview_number_id

    """column name"""
    update_at

    """column name"""
    update_by

    """column name"""
    vehicle_id
}

"""aggregate var_pop on columns"""
type muck_truck_worker_id_card_orders_var_pop_fields {
    id: Float
    preview_number_id: Float
}

"""
order by var_pop() on columns of table "muck_truck_worker_id_card_orders"
"""
input muck_truck_worker_id_card_orders_var_pop_order_by {
    id: order_by
    preview_number_id: order_by
}

"""aggregate var_samp on columns"""
type muck_truck_worker_id_card_orders_var_samp_fields {
    id: Float
    preview_number_id: Float
}

"""
order by var_samp() on columns of table "muck_truck_worker_id_card_orders"
"""
input muck_truck_worker_id_card_orders_var_samp_order_by {
    id: order_by
    preview_number_id: order_by
}

"""aggregate variance on columns"""
type muck_truck_worker_id_card_orders_variance_fields {
    id: Float
    preview_number_id: Float
}

"""
order by variance() on columns of table "muck_truck_worker_id_card_orders"
"""
input muck_truck_worker_id_card_orders_variance_order_by {
    id: order_by
    preview_number_id: order_by
}

"""mutation root"""
type Mutation {
    """
    delete data from the table: "JJ_VEHICLE"
  """
    delete_JJ_VEHICLE(
        """filter the rows which have to be deleted"""
        where: JJ_VEHICLE_bool_exp!
    ): JJ_VEHICLE_mutation_response

    """
    delete single row from the table: "JJ_VEHICLE"
  """
    delete_JJ_VEHICLE_by_pk(
        """主键"""
        id: bigint!
    ): JJ_VEHICLE

    """
    delete data from the table: "muck_truck_category_info"
  """
    delete_muck_truck_category_info(
        """filter the rows which have to be deleted"""
        where: muck_truck_category_info_bool_exp!
    ): muck_truck_category_info_mutation_response

    """
    delete single row from the table: "muck_truck_category_info"
  """
    delete_muck_truck_category_info_by_pk(
        """主键"""
        id: bigint!
    ): muck_truck_category_info

    """
    delete data from the table: "muck_truck_info"
  """
    delete_muck_truck_info(
        """filter the rows which have to be deleted"""
        where: muck_truck_info_bool_exp!
    ): muck_truck_info_mutation_response

    """
    delete single row from the table: "muck_truck_info"
  """
    delete_muck_truck_info_by_pk(
        """主键"""
        muck_truck_id: bigint!
    ): muck_truck_info

    """
    delete data from the table: "muck_truck_preview_number"
  """
    delete_muck_truck_preview_number(
        """filter the rows which have to be deleted"""
        where: muck_truck_preview_number_bool_exp!
    ): muck_truck_preview_number_mutation_response

    """
    delete single row from the table: "muck_truck_preview_number"
  """
    delete_muck_truck_preview_number_by_pk(
        """主键"""
        id: bigint!
    ): muck_truck_preview_number

    """
    delete data from the table: "muck_truck_worker_id_card_orders"
  """
    delete_muck_truck_worker_id_card_orders(
        """filter the rows which have to be deleted"""
        where: muck_truck_worker_id_card_orders_bool_exp!
    ): muck_truck_worker_id_card_orders_mutation_response

    """
    delete single row from the table: "muck_truck_worker_id_card_orders"
  """
    delete_muck_truck_worker_id_card_orders_by_pk(
        """主键"""
        id: bigint!
    ): muck_truck_worker_id_card_orders

    """
    delete data from the table: "operating_vehicle_info"
  """
    delete_operating_vehicle_info(
        """filter the rows which have to be deleted"""
        where: operating_vehicle_info_bool_exp!
    ): operating_vehicle_info_mutation_response

    """
    delete single row from the table: "operating_vehicle_info"
  """
    delete_operating_vehicle_info_by_pk(
        """主键"""
        operating_vehicle_id: bigint!
    ): operating_vehicle_info

    """
    delete data from the table: "owner_info"
  """
    delete_owner_info(
        """filter the rows which have to be deleted"""
        where: owner_info_bool_exp!
    ): owner_info_mutation_response

    """
    delete single row from the table: "owner_info"
  """
    delete_owner_info_by_pk(
        """主键"""
        id: bigint!
    ): owner_info

    """
    delete data from the table: "vehicle_info"
  """
    delete_vehicle_info(
        """filter the rows which have to be deleted"""
        where: vehicle_info_bool_exp!
    ): vehicle_info_mutation_response

    """
    delete single row from the table: "vehicle_info"
  """
    delete_vehicle_info_by_pk(
        """主键"""
        id: bigint!

        """车辆外部编码，由golang程序生成的xid，暴露到外部使用"""
        vehicle_id: String!
    ): vehicle_info

    """
    delete data from the table: "vehicle_info_change_log"
  """
    delete_vehicle_info_change_log(
        """filter the rows which have to be deleted"""
        where: vehicle_info_change_log_bool_exp!
    ): vehicle_info_change_log_mutation_response

    """
    delete single row from the table: "vehicle_info_change_log"
  """
    delete_vehicle_info_change_log_by_pk(
        """主键"""
        id: bigint!

        """车辆信息变更日志外部编码，由golang程序生成的xid，暴露到外部使用"""
        vehicle_info_change_id: String!
    ): vehicle_info_change_log

    """
    delete data from the table: "vehicle_supervision_photo"
  """
    delete_vehicle_supervision_photo(
        """filter the rows which have to be deleted"""
        where: vehicle_supervision_photo_bool_exp!
    ): vehicle_supervision_photo_mutation_response

    """
    delete single row from the table: "vehicle_supervision_photo"
  """
    delete_vehicle_supervision_photo_by_pk(
        """主键"""
        id: bigint!

        """车辆监控图片外部编码，由golang程序生成的xid，暴露到外部使用"""
        supervision_photo_id: String!
    ): vehicle_supervision_photo

    """
    insert data into the table: "JJ_VEHICLE"
  """
    insert_JJ_VEHICLE(
        """the rows to be inserted"""
        objects: [JJ_VEHICLE_insert_input!]!

        """on conflict condition"""
        on_conflict: JJ_VEHICLE_on_conflict
    ): JJ_VEHICLE_mutation_response

    """
    insert a single row into the table: "JJ_VEHICLE"
  """
    insert_JJ_VEHICLE_one(
        """the row to be inserted"""
        object: JJ_VEHICLE_insert_input!

        """on conflict condition"""
        on_conflict: JJ_VEHICLE_on_conflict
    ): JJ_VEHICLE

    """
    insert data into the table: "muck_truck_category_info"
  """
    insert_muck_truck_category_info(
        """the rows to be inserted"""
        objects: [muck_truck_category_info_insert_input!]!

        """on conflict condition"""
        on_conflict: muck_truck_category_info_on_conflict
    ): muck_truck_category_info_mutation_response

    """
    insert a single row into the table: "muck_truck_category_info"
  """
    insert_muck_truck_category_info_one(
        """the row to be inserted"""
        object: muck_truck_category_info_insert_input!

        """on conflict condition"""
        on_conflict: muck_truck_category_info_on_conflict
    ): muck_truck_category_info

    """
    insert data into the table: "muck_truck_info"
  """
    insert_muck_truck_info(
        """the rows to be inserted"""
        objects: [muck_truck_info_insert_input!]!

        """on conflict condition"""
        on_conflict: muck_truck_info_on_conflict
    ): muck_truck_info_mutation_response

    """
    insert a single row into the table: "muck_truck_info"
  """
    insert_muck_truck_info_one(
        """the row to be inserted"""
        object: muck_truck_info_insert_input!

        """on conflict condition"""
        on_conflict: muck_truck_info_on_conflict
    ): muck_truck_info

    """
    insert data into the table: "muck_truck_preview_number"
  """
    insert_muck_truck_preview_number(
        """the rows to be inserted"""
        objects: [muck_truck_preview_number_insert_input!]!

        """on conflict condition"""
        on_conflict: muck_truck_preview_number_on_conflict
    ): muck_truck_preview_number_mutation_response

    """
    insert a single row into the table: "muck_truck_preview_number"
  """
    insert_muck_truck_preview_number_one(
        """the row to be inserted"""
        object: muck_truck_preview_number_insert_input!

        """on conflict condition"""
        on_conflict: muck_truck_preview_number_on_conflict
    ): muck_truck_preview_number

    """
    insert data into the table: "muck_truck_worker_id_card_orders"
  """
    insert_muck_truck_worker_id_card_orders(
        """the rows to be inserted"""
        objects: [muck_truck_worker_id_card_orders_insert_input!]!

        """on conflict condition"""
        on_conflict: muck_truck_worker_id_card_orders_on_conflict
    ): muck_truck_worker_id_card_orders_mutation_response

    """
    insert a single row into the table: "muck_truck_worker_id_card_orders"
  """
    insert_muck_truck_worker_id_card_orders_one(
        """the row to be inserted"""
        object: muck_truck_worker_id_card_orders_insert_input!

        """on conflict condition"""
        on_conflict: muck_truck_worker_id_card_orders_on_conflict
    ): muck_truck_worker_id_card_orders

    """
    insert data into the table: "operating_vehicle_info"
  """
    insert_operating_vehicle_info(
        """the rows to be inserted"""
        objects: [operating_vehicle_info_insert_input!]!

        """on conflict condition"""
        on_conflict: operating_vehicle_info_on_conflict
    ): operating_vehicle_info_mutation_response

    """
    insert a single row into the table: "operating_vehicle_info"
  """
    insert_operating_vehicle_info_one(
        """the row to be inserted"""
        object: operating_vehicle_info_insert_input!

        """on conflict condition"""
        on_conflict: operating_vehicle_info_on_conflict
    ): operating_vehicle_info

    """
    insert data into the table: "owner_info"
  """
    insert_owner_info(
        """the rows to be inserted"""
        objects: [owner_info_insert_input!]!

        """on conflict condition"""
        on_conflict: owner_info_on_conflict
    ): owner_info_mutation_response

    """
    insert a single row into the table: "owner_info"
  """
    insert_owner_info_one(
        """the row to be inserted"""
        object: owner_info_insert_input!

        """on conflict condition"""
        on_conflict: owner_info_on_conflict
    ): owner_info

    """
    insert data into the table: "vehicle_info"
  """
    insert_vehicle_info(
        """the rows to be inserted"""
        objects: [vehicle_info_insert_input!]!

        """on conflict condition"""
        on_conflict: vehicle_info_on_conflict
    ): vehicle_info_mutation_response

    """
    insert data into the table: "vehicle_info_change_log"
  """
    insert_vehicle_info_change_log(
        """the rows to be inserted"""
        objects: [vehicle_info_change_log_insert_input!]!

        """on conflict condition"""
        on_conflict: vehicle_info_change_log_on_conflict
    ): vehicle_info_change_log_mutation_response

    """
    insert a single row into the table: "vehicle_info_change_log"
  """
    insert_vehicle_info_change_log_one(
        """the row to be inserted"""
        object: vehicle_info_change_log_insert_input!

        """on conflict condition"""
        on_conflict: vehicle_info_change_log_on_conflict
    ): vehicle_info_change_log

    """
    insert a single row into the table: "vehicle_info"
  """
    insert_vehicle_info_one(
        """the row to be inserted"""
        object: vehicle_info_insert_input!

        """on conflict condition"""
        on_conflict: vehicle_info_on_conflict
    ): vehicle_info

    """
    insert data into the table: "vehicle_supervision_photo"
  """
    insert_vehicle_supervision_photo(
        """the rows to be inserted"""
        objects: [vehicle_supervision_photo_insert_input!]!

        """on conflict condition"""
        on_conflict: vehicle_supervision_photo_on_conflict
    ): vehicle_supervision_photo_mutation_response

    """
    insert a single row into the table: "vehicle_supervision_photo"
  """
    insert_vehicle_supervision_photo_one(
        """the row to be inserted"""
        object: vehicle_supervision_photo_insert_input!

        """on conflict condition"""
        on_conflict: vehicle_supervision_photo_on_conflict
    ): vehicle_supervision_photo

    """
    update data of the table: "JJ_VEHICLE"
  """
    update_JJ_VEHICLE(
        """increments the integer columns with given value of the filtered values"""
        _inc: JJ_VEHICLE_inc_input

        """sets the columns of the filtered rows to the given values"""
        _set: JJ_VEHICLE_set_input

        """filter the rows which have to be updated"""
        where: JJ_VEHICLE_bool_exp!
    ): JJ_VEHICLE_mutation_response

    """
    update single row of the table: "JJ_VEHICLE"
  """
    update_JJ_VEHICLE_by_pk(
        """increments the integer columns with given value of the filtered values"""
        _inc: JJ_VEHICLE_inc_input

        """sets the columns of the filtered rows to the given values"""
        _set: JJ_VEHICLE_set_input
        pk_columns: JJ_VEHICLE_pk_columns_input!
    ): JJ_VEHICLE

    """
    update data of the table: "muck_truck_category_info"
  """
    update_muck_truck_category_info(
        """increments the integer columns with given value of the filtered values"""
        _inc: muck_truck_category_info_inc_input

        """sets the columns of the filtered rows to the given values"""
        _set: muck_truck_category_info_set_input

        """filter the rows which have to be updated"""
        where: muck_truck_category_info_bool_exp!
    ): muck_truck_category_info_mutation_response

    """
    update single row of the table: "muck_truck_category_info"
  """
    update_muck_truck_category_info_by_pk(
        """increments the integer columns with given value of the filtered values"""
        _inc: muck_truck_category_info_inc_input

        """sets the columns of the filtered rows to the given values"""
        _set: muck_truck_category_info_set_input
        pk_columns: muck_truck_category_info_pk_columns_input!
    ): muck_truck_category_info

    """
    update data of the table: "muck_truck_info"
  """
    update_muck_truck_info(
        """increments the integer columns with given value of the filtered values"""
        _inc: muck_truck_info_inc_input

        """sets the columns of the filtered rows to the given values"""
        _set: muck_truck_info_set_input

        """filter the rows which have to be updated"""
        where: muck_truck_info_bool_exp!
    ): muck_truck_info_mutation_response

    """
    update single row of the table: "muck_truck_info"
  """
    update_muck_truck_info_by_pk(
        """increments the integer columns with given value of the filtered values"""
        _inc: muck_truck_info_inc_input

        """sets the columns of the filtered rows to the given values"""
        _set: muck_truck_info_set_input
        pk_columns: muck_truck_info_pk_columns_input!
    ): muck_truck_info

    """
    update data of the table: "muck_truck_preview_number"
  """
    update_muck_truck_preview_number(
        """increments the integer columns with given value of the filtered values"""
        _inc: muck_truck_preview_number_inc_input

        """sets the columns of the filtered rows to the given values"""
        _set: muck_truck_preview_number_set_input

        """filter the rows which have to be updated"""
        where: muck_truck_preview_number_bool_exp!
    ): muck_truck_preview_number_mutation_response

    """
    update single row of the table: "muck_truck_preview_number"
  """
    update_muck_truck_preview_number_by_pk(
        """increments the integer columns with given value of the filtered values"""
        _inc: muck_truck_preview_number_inc_input

        """sets the columns of the filtered rows to the given values"""
        _set: muck_truck_preview_number_set_input
        pk_columns: muck_truck_preview_number_pk_columns_input!
    ): muck_truck_preview_number

    """
    update data of the table: "muck_truck_worker_id_card_orders"
  """
    update_muck_truck_worker_id_card_orders(
        """increments the integer columns with given value of the filtered values"""
        _inc: muck_truck_worker_id_card_orders_inc_input

        """sets the columns of the filtered rows to the given values"""
        _set: muck_truck_worker_id_card_orders_set_input

        """filter the rows which have to be updated"""
        where: muck_truck_worker_id_card_orders_bool_exp!
    ): muck_truck_worker_id_card_orders_mutation_response

    """
    update single row of the table: "muck_truck_worker_id_card_orders"
  """
    update_muck_truck_worker_id_card_orders_by_pk(
        """increments the integer columns with given value of the filtered values"""
        _inc: muck_truck_worker_id_card_orders_inc_input

        """sets the columns of the filtered rows to the given values"""
        _set: muck_truck_worker_id_card_orders_set_input
        pk_columns: muck_truck_worker_id_card_orders_pk_columns_input!
    ): muck_truck_worker_id_card_orders

    """
    update data of the table: "operating_vehicle_info"
  """
    update_operating_vehicle_info(
        """increments the integer columns with given value of the filtered values"""
        _inc: operating_vehicle_info_inc_input

        """sets the columns of the filtered rows to the given values"""
        _set: operating_vehicle_info_set_input

        """filter the rows which have to be updated"""
        where: operating_vehicle_info_bool_exp!
    ): operating_vehicle_info_mutation_response

    """
    update single row of the table: "operating_vehicle_info"
  """
    update_operating_vehicle_info_by_pk(
        """increments the integer columns with given value of the filtered values"""
        _inc: operating_vehicle_info_inc_input

        """sets the columns of the filtered rows to the given values"""
        _set: operating_vehicle_info_set_input
        pk_columns: operating_vehicle_info_pk_columns_input!
    ): operating_vehicle_info

    """
    update data of the table: "owner_info"
  """
    update_owner_info(
        """increments the integer columns with given value of the filtered values"""
        _inc: owner_info_inc_input

        """sets the columns of the filtered rows to the given values"""
        _set: owner_info_set_input

        """filter the rows which have to be updated"""
        where: owner_info_bool_exp!
    ): owner_info_mutation_response

    """
    update single row of the table: "owner_info"
  """
    update_owner_info_by_pk(
        """increments the integer columns with given value of the filtered values"""
        _inc: owner_info_inc_input

        """sets the columns of the filtered rows to the given values"""
        _set: owner_info_set_input
        pk_columns: owner_info_pk_columns_input!
    ): owner_info

    """
    update data of the table: "vehicle_info"
  """
    update_vehicle_info(
        """increments the integer columns with given value of the filtered values"""
        _inc: vehicle_info_inc_input

        """sets the columns of the filtered rows to the given values"""
        _set: vehicle_info_set_input

        """filter the rows which have to be updated"""
        where: vehicle_info_bool_exp!
    ): vehicle_info_mutation_response

    """
    update single row of the table: "vehicle_info"
  """
    update_vehicle_info_by_pk(
        """increments the integer columns with given value of the filtered values"""
        _inc: vehicle_info_inc_input

        """sets the columns of the filtered rows to the given values"""
        _set: vehicle_info_set_input
        pk_columns: vehicle_info_pk_columns_input!
    ): vehicle_info

    """
    update data of the table: "vehicle_info_change_log"
  """
    update_vehicle_info_change_log(
        """increments the integer columns with given value of the filtered values"""
        _inc: vehicle_info_change_log_inc_input

        """sets the columns of the filtered rows to the given values"""
        _set: vehicle_info_change_log_set_input

        """filter the rows which have to be updated"""
        where: vehicle_info_change_log_bool_exp!
    ): vehicle_info_change_log_mutation_response

    """
    update single row of the table: "vehicle_info_change_log"
  """
    update_vehicle_info_change_log_by_pk(
        """increments the integer columns with given value of the filtered values"""
        _inc: vehicle_info_change_log_inc_input

        """sets the columns of the filtered rows to the given values"""
        _set: vehicle_info_change_log_set_input
        pk_columns: vehicle_info_change_log_pk_columns_input!
    ): vehicle_info_change_log

    """
    update data of the table: "vehicle_supervision_photo"
  """
    update_vehicle_supervision_photo(
        """increments the integer columns with given value of the filtered values"""
        _inc: vehicle_supervision_photo_inc_input

        """sets the columns of the filtered rows to the given values"""
        _set: vehicle_supervision_photo_set_input

        """filter the rows which have to be updated"""
        where: vehicle_supervision_photo_bool_exp!
    ): vehicle_supervision_photo_mutation_response

    """
    update single row of the table: "vehicle_supervision_photo"
  """
    update_vehicle_supervision_photo_by_pk(
        """increments the integer columns with given value of the filtered values"""
        _inc: vehicle_supervision_photo_inc_input

        """sets the columns of the filtered rows to the given values"""
        _set: vehicle_supervision_photo_set_input
        pk_columns: vehicle_supervision_photo_pk_columns_input!
    ): vehicle_supervision_photo
}

scalar numeric

"""
expression to compare columns of type numeric. All fields are combined with logical 'AND'.
"""
input numeric_comparison_exp {
    _eq: numeric
    _gt: numeric
    _gte: numeric
    _in: [numeric!]
    _is_null: Boolean
    _lt: numeric
    _lte: numeric
    _neq: numeric
    _nin: [numeric!]
}

"""
营运车信息表


columns and relationships of "operating_vehicle_info"

"""
type operating_vehicle_info {
    """行政区域"""
    administrative_region: String

    """代理商"""
    agent: String

    """合同编号"""
    contact_number: String

    """合同时间"""
    contract_time: timestamptz

    """创建时间"""
    create_at: timestamptz!

    """创建人"""
    create_by: String!

    """删除时间"""
    delete_at: timestamptz

    """删除人"""
    delete_by: String

    """行驶证所有人"""
    driving_license_owner: String

    """第一次上线时间"""
    first_online_time: timestamptz

    """安装时间"""
    installation_time: timestamptz

    """是否北斗部标平台"""
    is_BD: Boolean

    """是否激活"""
    is_active: Boolean

    """是否办理终端安装证明"""
    is_applay_terminal_installation: Boolean

    """是否屏蔽"""
    is_block: Boolean

    """是否工程运输车"""
    is_engineering_vehicle: Boolean

    """是否功能测试通过"""
    is_function_ok: Boolean

    """是否在运证系统"""
    is_in_operating_system: Boolean

    """是否上传货运平台"""
    is_in_upload_platform: Boolean

    """是否需要监管"""
    is_need_supervise: Boolean

    """是否监管"""
    is_supervise: Boolean

    """最后一次绑定终端时间"""
    last_binding_terminal_time: timestamptz

    """车牌照片,云储存系统返回的路径"""
    license_plate_photo: String

    """渣土车类型,工程运输车车辆类型字典"""
    muck_truck_type: Int

    """主键"""
    operating_vehicle_id: bigint!

    """其他照片,云储存系统返回的路径"""
    other_photo: String

    """平台标识字典"""
    platform: Int

    """位置数据库ID"""
    position_db_id: String

    """报废原因"""
    scrap_reason: String

    """报废时间"""
    scrap_time: timestamptz

    """报废时间审核"""
    scrap_time_check: Int

    """编号"""
    serial_number: String

    """服务到期时间"""
    service_expiration_time: timestamptz

    """速度模式状态"""
    speed_mode_status: String

    """速度模式状态获得时间"""
    speed_mode_status_time: timestamptz

    """临时库,用法不明？"""
    temporary_library: Int

    """临时传交通局,用法不明"""
    temporary_transport_bureau: Int

    """修改时间"""
    update_at: timestamptz

    """修改人"""
    update_by: String

    """vehicle_info 车辆信息表 的vehicle_id"""
    vehicle_id: String!
}

"""
aggregated selection of "operating_vehicle_info"
"""
type operating_vehicle_info_aggregate {
    aggregate: operating_vehicle_info_aggregate_fields
    nodes: [operating_vehicle_info!]!
}

"""
aggregate fields of "operating_vehicle_info"
"""
type operating_vehicle_info_aggregate_fields {
    avg: operating_vehicle_info_avg_fields
    count(columns: [operating_vehicle_info_select_column!], distinct: Boolean): Int
    max: operating_vehicle_info_max_fields
    min: operating_vehicle_info_min_fields
    stddev: operating_vehicle_info_stddev_fields
    stddev_pop: operating_vehicle_info_stddev_pop_fields
    stddev_samp: operating_vehicle_info_stddev_samp_fields
    sum: operating_vehicle_info_sum_fields
    var_pop: operating_vehicle_info_var_pop_fields
    var_samp: operating_vehicle_info_var_samp_fields
    variance: operating_vehicle_info_variance_fields
}

"""
order by aggregate values of table "operating_vehicle_info"
"""
input operating_vehicle_info_aggregate_order_by {
    avg: operating_vehicle_info_avg_order_by
    count: order_by
    max: operating_vehicle_info_max_order_by
    min: operating_vehicle_info_min_order_by
    stddev: operating_vehicle_info_stddev_order_by
    stddev_pop: operating_vehicle_info_stddev_pop_order_by
    stddev_samp: operating_vehicle_info_stddev_samp_order_by
    sum: operating_vehicle_info_sum_order_by
    var_pop: operating_vehicle_info_var_pop_order_by
    var_samp: operating_vehicle_info_var_samp_order_by
    variance: operating_vehicle_info_variance_order_by
}

"""
input type for inserting array relation for remote table "operating_vehicle_info"
"""
input operating_vehicle_info_arr_rel_insert_input {
    data: [operating_vehicle_info_insert_input!]!
    on_conflict: operating_vehicle_info_on_conflict
}

"""aggregate avg on columns"""
type operating_vehicle_info_avg_fields {
    muck_truck_type: Float
    operating_vehicle_id: Float
    platform: Float
    scrap_time_check: Float
    temporary_library: Float
    temporary_transport_bureau: Float
}

"""
order by avg() on columns of table "operating_vehicle_info"
"""
input operating_vehicle_info_avg_order_by {
    muck_truck_type: order_by
    operating_vehicle_id: order_by
    platform: order_by
    scrap_time_check: order_by
    temporary_library: order_by
    temporary_transport_bureau: order_by
}

"""
Boolean expression to filter rows from the table "operating_vehicle_info". All fields are combined with a logical 'AND'.
"""
input operating_vehicle_info_bool_exp {
    _and: [operating_vehicle_info_bool_exp]
    _not: operating_vehicle_info_bool_exp
    _or: [operating_vehicle_info_bool_exp]
    administrative_region: String_comparison_exp
    agent: String_comparison_exp
    contact_number: String_comparison_exp
    contract_time: timestamptz_comparison_exp
    create_at: timestamptz_comparison_exp
    create_by: String_comparison_exp
    delete_at: timestamptz_comparison_exp
    delete_by: String_comparison_exp
    driving_license_owner: String_comparison_exp
    first_online_time: timestamptz_comparison_exp
    installation_time: timestamptz_comparison_exp
    is_BD: Boolean_comparison_exp
    is_active: Boolean_comparison_exp
    is_applay_terminal_installation: Boolean_comparison_exp
    is_block: Boolean_comparison_exp
    is_engineering_vehicle: Boolean_comparison_exp
    is_function_ok: Boolean_comparison_exp
    is_in_operating_system: Boolean_comparison_exp
    is_in_upload_platform: Boolean_comparison_exp
    is_need_supervise: Boolean_comparison_exp
    is_supervise: Boolean_comparison_exp
    last_binding_terminal_time: timestamptz_comparison_exp
    license_plate_photo: String_comparison_exp
    muck_truck_type: Int_comparison_exp
    operating_vehicle_id: bigint_comparison_exp
    other_photo: String_comparison_exp
    platform: Int_comparison_exp
    position_db_id: String_comparison_exp
    scrap_reason: String_comparison_exp
    scrap_time: timestamptz_comparison_exp
    scrap_time_check: Int_comparison_exp
    serial_number: String_comparison_exp
    service_expiration_time: timestamptz_comparison_exp
    speed_mode_status: String_comparison_exp
    speed_mode_status_time: timestamptz_comparison_exp
    temporary_library: Int_comparison_exp
    temporary_transport_bureau: Int_comparison_exp
    update_at: timestamptz_comparison_exp
    update_by: String_comparison_exp
    vehicle_id: String_comparison_exp
}

"""
unique or primary key constraints on table "operating_vehicle_info"
"""
enum operating_vehicle_info_constraint {
    """unique or primary key constraint"""
    operating_vehicle_info_pkey
}

"""
input type for incrementing integer column in table "operating_vehicle_info"
"""
input operating_vehicle_info_inc_input {
    muck_truck_type: Int
    operating_vehicle_id: bigint
    platform: Int
    scrap_time_check: Int
    temporary_library: Int
    temporary_transport_bureau: Int
}

"""
input type for inserting data into table "operating_vehicle_info"
"""
input operating_vehicle_info_insert_input {
    administrative_region: String
    agent: String
    contact_number: String
    contract_time: timestamptz
    create_at: timestamptz
    create_by: String
    delete_at: timestamptz
    delete_by: String
    driving_license_owner: String
    first_online_time: timestamptz
    installation_time: timestamptz
    is_BD: Boolean
    is_active: Boolean
    is_applay_terminal_installation: Boolean
    is_block: Boolean
    is_engineering_vehicle: Boolean
    is_function_ok: Boolean
    is_in_operating_system: Boolean
    is_in_upload_platform: Boolean
    is_need_supervise: Boolean
    is_supervise: Boolean
    last_binding_terminal_time: timestamptz
    license_plate_photo: String
    muck_truck_type: Int
    operating_vehicle_id: bigint
    other_photo: String
    platform: Int
    position_db_id: String
    scrap_reason: String
    scrap_time: timestamptz
    scrap_time_check: Int
    serial_number: String
    service_expiration_time: timestamptz
    speed_mode_status: String
    speed_mode_status_time: timestamptz
    temporary_library: Int
    temporary_transport_bureau: Int
    update_at: timestamptz
    update_by: String
    vehicle_id: String
}

"""aggregate max on columns"""
type operating_vehicle_info_max_fields {
    administrative_region: String
    agent: String
    contact_number: String
    contract_time: timestamptz
    create_at: timestamptz
    create_by: String
    delete_at: timestamptz
    delete_by: String
    driving_license_owner: String
    first_online_time: timestamptz
    installation_time: timestamptz
    last_binding_terminal_time: timestamptz
    license_plate_photo: String
    muck_truck_type: Int
    operating_vehicle_id: bigint
    other_photo: String
    platform: Int
    position_db_id: String
    scrap_reason: String
    scrap_time: timestamptz
    scrap_time_check: Int
    serial_number: String
    service_expiration_time: timestamptz
    speed_mode_status: String
    speed_mode_status_time: timestamptz
    temporary_library: Int
    temporary_transport_bureau: Int
    update_at: timestamptz
    update_by: String
    vehicle_id: String
}

"""
order by max() on columns of table "operating_vehicle_info"
"""
input operating_vehicle_info_max_order_by {
    administrative_region: order_by
    agent: order_by
    contact_number: order_by
    contract_time: order_by
    create_at: order_by
    create_by: order_by
    delete_at: order_by
    delete_by: order_by
    driving_license_owner: order_by
    first_online_time: order_by
    installation_time: order_by
    last_binding_terminal_time: order_by
    license_plate_photo: order_by
    muck_truck_type: order_by
    operating_vehicle_id: order_by
    other_photo: order_by
    platform: order_by
    position_db_id: order_by
    scrap_reason: order_by
    scrap_time: order_by
    scrap_time_check: order_by
    serial_number: order_by
    service_expiration_time: order_by
    speed_mode_status: order_by
    speed_mode_status_time: order_by
    temporary_library: order_by
    temporary_transport_bureau: order_by
    update_at: order_by
    update_by: order_by
    vehicle_id: order_by
}

"""aggregate min on columns"""
type operating_vehicle_info_min_fields {
    administrative_region: String
    agent: String
    contact_number: String
    contract_time: timestamptz
    create_at: timestamptz
    create_by: String
    delete_at: timestamptz
    delete_by: String
    driving_license_owner: String
    first_online_time: timestamptz
    installation_time: timestamptz
    last_binding_terminal_time: timestamptz
    license_plate_photo: String
    muck_truck_type: Int
    operating_vehicle_id: bigint
    other_photo: String
    platform: Int
    position_db_id: String
    scrap_reason: String
    scrap_time: timestamptz
    scrap_time_check: Int
    serial_number: String
    service_expiration_time: timestamptz
    speed_mode_status: String
    speed_mode_status_time: timestamptz
    temporary_library: Int
    temporary_transport_bureau: Int
    update_at: timestamptz
    update_by: String
    vehicle_id: String
}

"""
order by min() on columns of table "operating_vehicle_info"
"""
input operating_vehicle_info_min_order_by {
    administrative_region: order_by
    agent: order_by
    contact_number: order_by
    contract_time: order_by
    create_at: order_by
    create_by: order_by
    delete_at: order_by
    delete_by: order_by
    driving_license_owner: order_by
    first_online_time: order_by
    installation_time: order_by
    last_binding_terminal_time: order_by
    license_plate_photo: order_by
    muck_truck_type: order_by
    operating_vehicle_id: order_by
    other_photo: order_by
    platform: order_by
    position_db_id: order_by
    scrap_reason: order_by
    scrap_time: order_by
    scrap_time_check: order_by
    serial_number: order_by
    service_expiration_time: order_by
    speed_mode_status: order_by
    speed_mode_status_time: order_by
    temporary_library: order_by
    temporary_transport_bureau: order_by
    update_at: order_by
    update_by: order_by
    vehicle_id: order_by
}

"""
response of any mutation on the table "operating_vehicle_info"
"""
type operating_vehicle_info_mutation_response {
    """number of affected rows by the mutation"""
    affected_rows: Int!

    """data of the affected rows by the mutation"""
    returning: [operating_vehicle_info!]!
}

"""
input type for inserting object relation for remote table "operating_vehicle_info"
"""
input operating_vehicle_info_obj_rel_insert_input {
    data: operating_vehicle_info_insert_input!
    on_conflict: operating_vehicle_info_on_conflict
}

"""
on conflict condition type for table "operating_vehicle_info"
"""
input operating_vehicle_info_on_conflict {
    constraint: operating_vehicle_info_constraint!
    update_columns: [operating_vehicle_info_update_column!]!
    where: operating_vehicle_info_bool_exp
}

"""
ordering options when selecting data from "operating_vehicle_info"
"""
input operating_vehicle_info_order_by {
    administrative_region: order_by
    agent: order_by
    contact_number: order_by
    contract_time: order_by
    create_at: order_by
    create_by: order_by
    delete_at: order_by
    delete_by: order_by
    driving_license_owner: order_by
    first_online_time: order_by
    installation_time: order_by
    is_BD: order_by
    is_active: order_by
    is_applay_terminal_installation: order_by
    is_block: order_by
    is_engineering_vehicle: order_by
    is_function_ok: order_by
    is_in_operating_system: order_by
    is_in_upload_platform: order_by
    is_need_supervise: order_by
    is_supervise: order_by
    last_binding_terminal_time: order_by
    license_plate_photo: order_by
    muck_truck_type: order_by
    operating_vehicle_id: order_by
    other_photo: order_by
    platform: order_by
    position_db_id: order_by
    scrap_reason: order_by
    scrap_time: order_by
    scrap_time_check: order_by
    serial_number: order_by
    service_expiration_time: order_by
    speed_mode_status: order_by
    speed_mode_status_time: order_by
    temporary_library: order_by
    temporary_transport_bureau: order_by
    update_at: order_by
    update_by: order_by
    vehicle_id: order_by
}

"""
primary key columns input for table: "operating_vehicle_info"
"""
input operating_vehicle_info_pk_columns_input {
    """主键"""
    operating_vehicle_id: bigint!
}

"""
select columns of table "operating_vehicle_info"
"""
enum operating_vehicle_info_select_column {
    """column name"""
    administrative_region

    """column name"""
    agent

    """column name"""
    contact_number

    """column name"""
    contract_time

    """column name"""
    create_at

    """column name"""
    create_by

    """column name"""
    delete_at

    """column name"""
    delete_by

    """column name"""
    driving_license_owner

    """column name"""
    first_online_time

    """column name"""
    installation_time

    """column name"""
    is_BD

    """column name"""
    is_active

    """column name"""
    is_applay_terminal_installation

    """column name"""
    is_block

    """column name"""
    is_engineering_vehicle

    """column name"""
    is_function_ok

    """column name"""
    is_in_operating_system

    """column name"""
    is_in_upload_platform

    """column name"""
    is_need_supervise

    """column name"""
    is_supervise

    """column name"""
    last_binding_terminal_time

    """column name"""
    license_plate_photo

    """column name"""
    muck_truck_type

    """column name"""
    operating_vehicle_id

    """column name"""
    other_photo

    """column name"""
    platform

    """column name"""
    position_db_id

    """column name"""
    scrap_reason

    """column name"""
    scrap_time

    """column name"""
    scrap_time_check

    """column name"""
    serial_number

    """column name"""
    service_expiration_time

    """column name"""
    speed_mode_status

    """column name"""
    speed_mode_status_time

    """column name"""
    temporary_library

    """column name"""
    temporary_transport_bureau

    """column name"""
    update_at

    """column name"""
    update_by

    """column name"""
    vehicle_id
}

"""
input type for updating data in table "operating_vehicle_info"
"""
input operating_vehicle_info_set_input {
    administrative_region: String
    agent: String
    contact_number: String
    contract_time: timestamptz
    create_at: timestamptz
    create_by: String
    delete_at: timestamptz
    delete_by: String
    driving_license_owner: String
    first_online_time: timestamptz
    installation_time: timestamptz
    is_BD: Boolean
    is_active: Boolean
    is_applay_terminal_installation: Boolean
    is_block: Boolean
    is_engineering_vehicle: Boolean
    is_function_ok: Boolean
    is_in_operating_system: Boolean
    is_in_upload_platform: Boolean
    is_need_supervise: Boolean
    is_supervise: Boolean
    last_binding_terminal_time: timestamptz
    license_plate_photo: String
    muck_truck_type: Int
    operating_vehicle_id: bigint
    other_photo: String
    platform: Int
    position_db_id: String
    scrap_reason: String
    scrap_time: timestamptz
    scrap_time_check: Int
    serial_number: String
    service_expiration_time: timestamptz
    speed_mode_status: String
    speed_mode_status_time: timestamptz
    temporary_library: Int
    temporary_transport_bureau: Int
    update_at: timestamptz
    update_by: String
    vehicle_id: String
}

"""aggregate stddev on columns"""
type operating_vehicle_info_stddev_fields {
    muck_truck_type: Float
    operating_vehicle_id: Float
    platform: Float
    scrap_time_check: Float
    temporary_library: Float
    temporary_transport_bureau: Float
}

"""
order by stddev() on columns of table "operating_vehicle_info"
"""
input operating_vehicle_info_stddev_order_by {
    muck_truck_type: order_by
    operating_vehicle_id: order_by
    platform: order_by
    scrap_time_check: order_by
    temporary_library: order_by
    temporary_transport_bureau: order_by
}

"""aggregate stddev_pop on columns"""
type operating_vehicle_info_stddev_pop_fields {
    muck_truck_type: Float
    operating_vehicle_id: Float
    platform: Float
    scrap_time_check: Float
    temporary_library: Float
    temporary_transport_bureau: Float
}

"""
order by stddev_pop() on columns of table "operating_vehicle_info"
"""
input operating_vehicle_info_stddev_pop_order_by {
    muck_truck_type: order_by
    operating_vehicle_id: order_by
    platform: order_by
    scrap_time_check: order_by
    temporary_library: order_by
    temporary_transport_bureau: order_by
}

"""aggregate stddev_samp on columns"""
type operating_vehicle_info_stddev_samp_fields {
    muck_truck_type: Float
    operating_vehicle_id: Float
    platform: Float
    scrap_time_check: Float
    temporary_library: Float
    temporary_transport_bureau: Float
}

"""
order by stddev_samp() on columns of table "operating_vehicle_info"
"""
input operating_vehicle_info_stddev_samp_order_by {
    muck_truck_type: order_by
    operating_vehicle_id: order_by
    platform: order_by
    scrap_time_check: order_by
    temporary_library: order_by
    temporary_transport_bureau: order_by
}

"""aggregate sum on columns"""
type operating_vehicle_info_sum_fields {
    muck_truck_type: Int
    operating_vehicle_id: bigint
    platform: Int
    scrap_time_check: Int
    temporary_library: Int
    temporary_transport_bureau: Int
}

"""
order by sum() on columns of table "operating_vehicle_info"
"""
input operating_vehicle_info_sum_order_by {
    muck_truck_type: order_by
    operating_vehicle_id: order_by
    platform: order_by
    scrap_time_check: order_by
    temporary_library: order_by
    temporary_transport_bureau: order_by
}

"""
update columns of table "operating_vehicle_info"
"""
enum operating_vehicle_info_update_column {
    """column name"""
    administrative_region

    """column name"""
    agent

    """column name"""
    contact_number

    """column name"""
    contract_time

    """column name"""
    create_at

    """column name"""
    create_by

    """column name"""
    delete_at

    """column name"""
    delete_by

    """column name"""
    driving_license_owner

    """column name"""
    first_online_time

    """column name"""
    installation_time

    """column name"""
    is_BD

    """column name"""
    is_active

    """column name"""
    is_applay_terminal_installation

    """column name"""
    is_block

    """column name"""
    is_engineering_vehicle

    """column name"""
    is_function_ok

    """column name"""
    is_in_operating_system

    """column name"""
    is_in_upload_platform

    """column name"""
    is_need_supervise

    """column name"""
    is_supervise

    """column name"""
    last_binding_terminal_time

    """column name"""
    license_plate_photo

    """column name"""
    muck_truck_type

    """column name"""
    operating_vehicle_id

    """column name"""
    other_photo

    """column name"""
    platform

    """column name"""
    position_db_id

    """column name"""
    scrap_reason

    """column name"""
    scrap_time

    """column name"""
    scrap_time_check

    """column name"""
    serial_number

    """column name"""
    service_expiration_time

    """column name"""
    speed_mode_status

    """column name"""
    speed_mode_status_time

    """column name"""
    temporary_library

    """column name"""
    temporary_transport_bureau

    """column name"""
    update_at

    """column name"""
    update_by

    """column name"""
    vehicle_id
}

"""aggregate var_pop on columns"""
type operating_vehicle_info_var_pop_fields {
    muck_truck_type: Float
    operating_vehicle_id: Float
    platform: Float
    scrap_time_check: Float
    temporary_library: Float
    temporary_transport_bureau: Float
}

"""
order by var_pop() on columns of table "operating_vehicle_info"
"""
input operating_vehicle_info_var_pop_order_by {
    muck_truck_type: order_by
    operating_vehicle_id: order_by
    platform: order_by
    scrap_time_check: order_by
    temporary_library: order_by
    temporary_transport_bureau: order_by
}

"""aggregate var_samp on columns"""
type operating_vehicle_info_var_samp_fields {
    muck_truck_type: Float
    operating_vehicle_id: Float
    platform: Float
    scrap_time_check: Float
    temporary_library: Float
    temporary_transport_bureau: Float
}

"""
order by var_samp() on columns of table "operating_vehicle_info"
"""
input operating_vehicle_info_var_samp_order_by {
    muck_truck_type: order_by
    operating_vehicle_id: order_by
    platform: order_by
    scrap_time_check: order_by
    temporary_library: order_by
    temporary_transport_bureau: order_by
}

"""aggregate variance on columns"""
type operating_vehicle_info_variance_fields {
    muck_truck_type: Float
    operating_vehicle_id: Float
    platform: Float
    scrap_time_check: Float
    temporary_library: Float
    temporary_transport_bureau: Float
}

"""
order by variance() on columns of table "operating_vehicle_info"
"""
input operating_vehicle_info_variance_order_by {
    muck_truck_type: order_by
    operating_vehicle_id: order_by
    platform: order_by
    scrap_time_check: order_by
    temporary_library: order_by
    temporary_transport_bureau: order_by
}

"""column ordering options"""
enum order_by {
    """in the ascending order, nulls last"""
    asc

    """in the ascending order, nulls first"""
    asc_nulls_first

    """in the ascending order, nulls last"""
    asc_nulls_last

    """in the descending order, nulls first"""
    desc

    """in the descending order, nulls first"""
    desc_nulls_first

    """in the descending order, nulls last"""
    desc_nulls_last
}

"""
车主信息表


columns and relationships of "owner_info"

"""
type owner_info {
    """联系地址"""
    address: String

    """代理商"""
    agent: String

    """固定电话"""
    cellphone: String

    """创建时间"""
    create_at: timestamptz!

    """创建人"""
    create_by: String!

    """删除时间"""
    delete_at: timestamptz

    """删除人"""
    delete_by: String

    """
    department 部门信息表

    """
    department_id: String

    """邮箱地址"""
    email: String

    """证件过期日期"""
    expiry_date: timestamptz

    """主键"""
    id: bigint!

    """身份证号"""
    id_number: String

    """是否删除"""
    is_delete: Boolean

    """车主姓名"""
    name: String

    """运营商"""
    operator: String

    """
    车主信息外部编码，由golang程序生成的xid，暴露到外部使用
    联合主键
    """
    owner_id: String!

    """备注"""
    remarks: String

    """
    车主性别(性别字典)

    """
    sex: Int

    """手机号码"""
    telephone: String

    """修改时间"""
    update_at: timestamptz

    """修改人"""
    update_by: String
}

"""
aggregated selection of "owner_info"
"""
type owner_info_aggregate {
    aggregate: owner_info_aggregate_fields
    nodes: [owner_info!]!
}

"""
aggregate fields of "owner_info"
"""
type owner_info_aggregate_fields {
    avg: owner_info_avg_fields
    count(columns: [owner_info_select_column!], distinct: Boolean): Int
    max: owner_info_max_fields
    min: owner_info_min_fields
    stddev: owner_info_stddev_fields
    stddev_pop: owner_info_stddev_pop_fields
    stddev_samp: owner_info_stddev_samp_fields
    sum: owner_info_sum_fields
    var_pop: owner_info_var_pop_fields
    var_samp: owner_info_var_samp_fields
    variance: owner_info_variance_fields
}

"""
order by aggregate values of table "owner_info"
"""
input owner_info_aggregate_order_by {
    avg: owner_info_avg_order_by
    count: order_by
    max: owner_info_max_order_by
    min: owner_info_min_order_by
    stddev: owner_info_stddev_order_by
    stddev_pop: owner_info_stddev_pop_order_by
    stddev_samp: owner_info_stddev_samp_order_by
    sum: owner_info_sum_order_by
    var_pop: owner_info_var_pop_order_by
    var_samp: owner_info_var_samp_order_by
    variance: owner_info_variance_order_by
}

"""
input type for inserting array relation for remote table "owner_info"
"""
input owner_info_arr_rel_insert_input {
    data: [owner_info_insert_input!]!
    on_conflict: owner_info_on_conflict
}

"""aggregate avg on columns"""
type owner_info_avg_fields {
    id: Float
    sex: Float
}

"""
order by avg() on columns of table "owner_info"
"""
input owner_info_avg_order_by {
    id: order_by
    sex: order_by
}

"""
Boolean expression to filter rows from the table "owner_info". All fields are combined with a logical 'AND'.
"""
input owner_info_bool_exp {
    _and: [owner_info_bool_exp]
    _not: owner_info_bool_exp
    _or: [owner_info_bool_exp]
    address: String_comparison_exp
    agent: String_comparison_exp
    cellphone: String_comparison_exp
    create_at: timestamptz_comparison_exp
    create_by: String_comparison_exp
    delete_at: timestamptz_comparison_exp
    delete_by: String_comparison_exp
    department_id: String_comparison_exp
    email: String_comparison_exp
    expiry_date: timestamptz_comparison_exp
    id: bigint_comparison_exp
    id_number: String_comparison_exp
    is_delete: Boolean_comparison_exp
    name: String_comparison_exp
    operator: String_comparison_exp
    owner_id: String_comparison_exp
    remarks: String_comparison_exp
    sex: Int_comparison_exp
    telephone: String_comparison_exp
    update_at: timestamptz_comparison_exp
    update_by: String_comparison_exp
}

"""
unique or primary key constraints on table "owner_info"
"""
enum owner_info_constraint {
    """unique or primary key constraint"""
    owner_info_pkey
}

"""
input type for incrementing integer column in table "owner_info"
"""
input owner_info_inc_input {
    id: bigint
    sex: Int
}

"""
input type for inserting data into table "owner_info"
"""
input owner_info_insert_input {
    address: String
    agent: String
    cellphone: String
    create_at: timestamptz
    create_by: String
    delete_at: timestamptz
    delete_by: String
    department_id: String
    email: String
    expiry_date: timestamptz
    id: bigint
    id_number: String
    is_delete: Boolean
    name: String
    operator: String
    owner_id: String
    remarks: String
    sex: Int
    telephone: String
    update_at: timestamptz
    update_by: String
}

"""aggregate max on columns"""
type owner_info_max_fields {
    address: String
    agent: String
    cellphone: String
    create_at: timestamptz
    create_by: String
    delete_at: timestamptz
    delete_by: String
    department_id: String
    email: String
    expiry_date: timestamptz
    id: bigint
    id_number: String
    name: String
    operator: String
    owner_id: String
    remarks: String
    sex: Int
    telephone: String
    update_at: timestamptz
    update_by: String
}

"""
order by max() on columns of table "owner_info"
"""
input owner_info_max_order_by {
    address: order_by
    agent: order_by
    cellphone: order_by
    create_at: order_by
    create_by: order_by
    delete_at: order_by
    delete_by: order_by
    department_id: order_by
    email: order_by
    expiry_date: order_by
    id: order_by
    id_number: order_by
    name: order_by
    operator: order_by
    owner_id: order_by
    remarks: order_by
    sex: order_by
    telephone: order_by
    update_at: order_by
    update_by: order_by
}

"""aggregate min on columns"""
type owner_info_min_fields {
    address: String
    agent: String
    cellphone: String
    create_at: timestamptz
    create_by: String
    delete_at: timestamptz
    delete_by: String
    department_id: String
    email: String
    expiry_date: timestamptz
    id: bigint
    id_number: String
    name: String
    operator: String
    owner_id: String
    remarks: String
    sex: Int
    telephone: String
    update_at: timestamptz
    update_by: String
}

"""
order by min() on columns of table "owner_info"
"""
input owner_info_min_order_by {
    address: order_by
    agent: order_by
    cellphone: order_by
    create_at: order_by
    create_by: order_by
    delete_at: order_by
    delete_by: order_by
    department_id: order_by
    email: order_by
    expiry_date: order_by
    id: order_by
    id_number: order_by
    name: order_by
    operator: order_by
    owner_id: order_by
    remarks: order_by
    sex: order_by
    telephone: order_by
    update_at: order_by
    update_by: order_by
}

"""
response of any mutation on the table "owner_info"
"""
type owner_info_mutation_response {
    """number of affected rows by the mutation"""
    affected_rows: Int!

    """data of the affected rows by the mutation"""
    returning: [owner_info!]!
}

"""
input type for inserting object relation for remote table "owner_info"
"""
input owner_info_obj_rel_insert_input {
    data: owner_info_insert_input!
    on_conflict: owner_info_on_conflict
}

"""
on conflict condition type for table "owner_info"
"""
input owner_info_on_conflict {
    constraint: owner_info_constraint!
    update_columns: [owner_info_update_column!]!
    where: owner_info_bool_exp
}

"""
ordering options when selecting data from "owner_info"
"""
input owner_info_order_by {
    address: order_by
    agent: order_by
    cellphone: order_by
    create_at: order_by
    create_by: order_by
    delete_at: order_by
    delete_by: order_by
    department_id: order_by
    email: order_by
    expiry_date: order_by
    id: order_by
    id_number: order_by
    is_delete: order_by
    name: order_by
    operator: order_by
    owner_id: order_by
    remarks: order_by
    sex: order_by
    telephone: order_by
    update_at: order_by
    update_by: order_by
}

"""
primary key columns input for table: "owner_info"
"""
input owner_info_pk_columns_input {
    """主键"""
    id: bigint!
}

"""
select columns of table "owner_info"
"""
enum owner_info_select_column {
    """column name"""
    address

    """column name"""
    agent

    """column name"""
    cellphone

    """column name"""
    create_at

    """column name"""
    create_by

    """column name"""
    delete_at

    """column name"""
    delete_by

    """column name"""
    department_id

    """column name"""
    email

    """column name"""
    expiry_date

    """column name"""
    id

    """column name"""
    id_number

    """column name"""
    is_delete

    """column name"""
    name

    """column name"""
    operator

    """column name"""
    owner_id

    """column name"""
    remarks

    """column name"""
    sex

    """column name"""
    telephone

    """column name"""
    update_at

    """column name"""
    update_by
}

"""
input type for updating data in table "owner_info"
"""
input owner_info_set_input {
    address: String
    agent: String
    cellphone: String
    create_at: timestamptz
    create_by: String
    delete_at: timestamptz
    delete_by: String
    department_id: String
    email: String
    expiry_date: timestamptz
    id: bigint
    id_number: String
    is_delete: Boolean
    name: String
    operator: String
    owner_id: String
    remarks: String
    sex: Int
    telephone: String
    update_at: timestamptz
    update_by: String
}

"""aggregate stddev on columns"""
type owner_info_stddev_fields {
    id: Float
    sex: Float
}

"""
order by stddev() on columns of table "owner_info"
"""
input owner_info_stddev_order_by {
    id: order_by
    sex: order_by
}

"""aggregate stddev_pop on columns"""
type owner_info_stddev_pop_fields {
    id: Float
    sex: Float
}

"""
order by stddev_pop() on columns of table "owner_info"
"""
input owner_info_stddev_pop_order_by {
    id: order_by
    sex: order_by
}

"""aggregate stddev_samp on columns"""
type owner_info_stddev_samp_fields {
    id: Float
    sex: Float
}

"""
order by stddev_samp() on columns of table "owner_info"
"""
input owner_info_stddev_samp_order_by {
    id: order_by
    sex: order_by
}

"""aggregate sum on columns"""
type owner_info_sum_fields {
    id: bigint
    sex: Int
}

"""
order by sum() on columns of table "owner_info"
"""
input owner_info_sum_order_by {
    id: order_by
    sex: order_by
}

"""
update columns of table "owner_info"
"""
enum owner_info_update_column {
    """column name"""
    address

    """column name"""
    agent

    """column name"""
    cellphone

    """column name"""
    create_at

    """column name"""
    create_by

    """column name"""
    delete_at

    """column name"""
    delete_by

    """column name"""
    department_id

    """column name"""
    email

    """column name"""
    expiry_date

    """column name"""
    id

    """column name"""
    id_number

    """column name"""
    is_delete

    """column name"""
    name

    """column name"""
    operator

    """column name"""
    owner_id

    """column name"""
    remarks

    """column name"""
    sex

    """column name"""
    telephone

    """column name"""
    update_at

    """column name"""
    update_by
}

"""aggregate var_pop on columns"""
type owner_info_var_pop_fields {
    id: Float
    sex: Float
}

"""
order by var_pop() on columns of table "owner_info"
"""
input owner_info_var_pop_order_by {
    id: order_by
    sex: order_by
}

"""aggregate var_samp on columns"""
type owner_info_var_samp_fields {
    id: Float
    sex: Float
}

"""
order by var_samp() on columns of table "owner_info"
"""
input owner_info_var_samp_order_by {
    id: order_by
    sex: order_by
}

"""aggregate variance on columns"""
type owner_info_variance_fields {
    id: Float
    sex: Float
}

"""
order by variance() on columns of table "owner_info"
"""
input owner_info_variance_order_by {
    id: order_by
    sex: order_by
}

"""query root"""
type Query {
    """
    fetch data from the table: "JJ_VEHICLE"
  """
    JJ_VEHICLE(
        """distinct select on columns"""
        distinct_on: [JJ_VEHICLE_select_column!]

        """limit the number of rows returned"""
        limit: Int

        """skip the first n rows. Use only with order_by"""
        offset: Int

        """sort the rows by one or more columns"""
        order_by: [JJ_VEHICLE_order_by!]

        """filter the rows returned"""
        where: JJ_VEHICLE_bool_exp
    ): [JJ_VEHICLE!]!

    """
    fetch aggregated fields from the table: "JJ_VEHICLE"
  """
    JJ_VEHICLE_aggregate(
        """distinct select on columns"""
        distinct_on: [JJ_VEHICLE_select_column!]

        """limit the number of rows returned"""
        limit: Int

        """skip the first n rows. Use only with order_by"""
        offset: Int

        """sort the rows by one or more columns"""
        order_by: [JJ_VEHICLE_order_by!]

        """filter the rows returned"""
        where: JJ_VEHICLE_bool_exp
    ): JJ_VEHICLE_aggregate!

    """fetch data from the table: "JJ_VEHICLE" using primary key columns"""
    JJ_VEHICLE_by_pk(
        """主键"""
        id: bigint!
    ): JJ_VEHICLE

    """
    fetch data from the table: "muck_truck_category_info"
  """
    muck_truck_category_info(
        """distinct select on columns"""
        distinct_on: [muck_truck_category_info_select_column!]

        """limit the number of rows returned"""
        limit: Int

        """skip the first n rows. Use only with order_by"""
        offset: Int

        """sort the rows by one or more columns"""
        order_by: [muck_truck_category_info_order_by!]

        """filter the rows returned"""
        where: muck_truck_category_info_bool_exp
    ): [muck_truck_category_info!]!

    """
    fetch aggregated fields from the table: "muck_truck_category_info"
  """
    muck_truck_category_info_aggregate(
        """distinct select on columns"""
        distinct_on: [muck_truck_category_info_select_column!]

        """limit the number of rows returned"""
        limit: Int

        """skip the first n rows. Use only with order_by"""
        offset: Int

        """sort the rows by one or more columns"""
        order_by: [muck_truck_category_info_order_by!]

        """filter the rows returned"""
        where: muck_truck_category_info_bool_exp
    ): muck_truck_category_info_aggregate!

    """
    fetch data from the table: "muck_truck_category_info" using primary key columns
    """
    muck_truck_category_info_by_pk(
        """主键"""
        id: bigint!
    ): muck_truck_category_info

    """
    fetch data from the table: "muck_truck_info"
  """
    muck_truck_info(
        """distinct select on columns"""
        distinct_on: [muck_truck_info_select_column!]

        """limit the number of rows returned"""
        limit: Int

        """skip the first n rows. Use only with order_by"""
        offset: Int

        """sort the rows by one or more columns"""
        order_by: [muck_truck_info_order_by!]

        """filter the rows returned"""
        where: muck_truck_info_bool_exp
    ): [muck_truck_info!]!

    """
    fetch aggregated fields from the table: "muck_truck_info"
  """
    muck_truck_info_aggregate(
        """distinct select on columns"""
        distinct_on: [muck_truck_info_select_column!]

        """limit the number of rows returned"""
        limit: Int

        """skip the first n rows. Use only with order_by"""
        offset: Int

        """sort the rows by one or more columns"""
        order_by: [muck_truck_info_order_by!]

        """filter the rows returned"""
        where: muck_truck_info_bool_exp
    ): muck_truck_info_aggregate!

    """fetch data from the table: "muck_truck_info" using primary key columns"""
    muck_truck_info_by_pk(
        """主键"""
        muck_truck_id: bigint!
    ): muck_truck_info

    """
    fetch data from the table: "muck_truck_preview_number"
  """
    muck_truck_preview_number(
        """distinct select on columns"""
        distinct_on: [muck_truck_preview_number_select_column!]

        """limit the number of rows returned"""
        limit: Int

        """skip the first n rows. Use only with order_by"""
        offset: Int

        """sort the rows by one or more columns"""
        order_by: [muck_truck_preview_number_order_by!]

        """filter the rows returned"""
        where: muck_truck_preview_number_bool_exp
    ): [muck_truck_preview_number!]!

    """
    fetch aggregated fields from the table: "muck_truck_preview_number"
  """
    muck_truck_preview_number_aggregate(
        """distinct select on columns"""
        distinct_on: [muck_truck_preview_number_select_column!]

        """limit the number of rows returned"""
        limit: Int

        """skip the first n rows. Use only with order_by"""
        offset: Int

        """sort the rows by one or more columns"""
        order_by: [muck_truck_preview_number_order_by!]

        """filter the rows returned"""
        where: muck_truck_preview_number_bool_exp
    ): muck_truck_preview_number_aggregate!

    """
    fetch data from the table: "muck_truck_preview_number" using primary key columns
    """
    muck_truck_preview_number_by_pk(
        """主键"""
        id: bigint!
    ): muck_truck_preview_number

    """
    fetch data from the table: "muck_truck_worker_id_card_orders"
  """
    muck_truck_worker_id_card_orders(
        """distinct select on columns"""
        distinct_on: [muck_truck_worker_id_card_orders_select_column!]

        """limit the number of rows returned"""
        limit: Int

        """skip the first n rows. Use only with order_by"""
        offset: Int

        """sort the rows by one or more columns"""
        order_by: [muck_truck_worker_id_card_orders_order_by!]

        """filter the rows returned"""
        where: muck_truck_worker_id_card_orders_bool_exp
    ): [muck_truck_worker_id_card_orders!]!

    """
    fetch aggregated fields from the table: "muck_truck_worker_id_card_orders"
  """
    muck_truck_worker_id_card_orders_aggregate(
        """distinct select on columns"""
        distinct_on: [muck_truck_worker_id_card_orders_select_column!]

        """limit the number of rows returned"""
        limit: Int

        """skip the first n rows. Use only with order_by"""
        offset: Int

        """sort the rows by one or more columns"""
        order_by: [muck_truck_worker_id_card_orders_order_by!]

        """filter the rows returned"""
        where: muck_truck_worker_id_card_orders_bool_exp
    ): muck_truck_worker_id_card_orders_aggregate!

    """
    fetch data from the table: "muck_truck_worker_id_card_orders" using primary key columns
    """
    muck_truck_worker_id_card_orders_by_pk(
        """主键"""
        id: bigint!
    ): muck_truck_worker_id_card_orders

    """
    fetch data from the table: "operating_vehicle_info"
  """
    operating_vehicle_info(
        """distinct select on columns"""
        distinct_on: [operating_vehicle_info_select_column!]

        """limit the number of rows returned"""
        limit: Int

        """skip the first n rows. Use only with order_by"""
        offset: Int

        """sort the rows by one or more columns"""
        order_by: [operating_vehicle_info_order_by!]

        """filter the rows returned"""
        where: operating_vehicle_info_bool_exp
    ): [operating_vehicle_info!]!

    """
    fetch aggregated fields from the table: "operating_vehicle_info"
  """
    operating_vehicle_info_aggregate(
        """distinct select on columns"""
        distinct_on: [operating_vehicle_info_select_column!]

        """limit the number of rows returned"""
        limit: Int

        """skip the first n rows. Use only with order_by"""
        offset: Int

        """sort the rows by one or more columns"""
        order_by: [operating_vehicle_info_order_by!]

        """filter the rows returned"""
        where: operating_vehicle_info_bool_exp
    ): operating_vehicle_info_aggregate!

    """
    fetch data from the table: "operating_vehicle_info" using primary key columns
    """
    operating_vehicle_info_by_pk(
        """主键"""
        operating_vehicle_id: bigint!
    ): operating_vehicle_info

    """
    fetch data from the table: "owner_info"
  """
    owner_info(
        """distinct select on columns"""
        distinct_on: [owner_info_select_column!]

        """limit the number of rows returned"""
        limit: Int

        """skip the first n rows. Use only with order_by"""
        offset: Int

        """sort the rows by one or more columns"""
        order_by: [owner_info_order_by!]

        """filter the rows returned"""
        where: owner_info_bool_exp
    ): [owner_info!]!

    """
    fetch aggregated fields from the table: "owner_info"
  """
    owner_info_aggregate(
        """distinct select on columns"""
        distinct_on: [owner_info_select_column!]

        """limit the number of rows returned"""
        limit: Int

        """skip the first n rows. Use only with order_by"""
        offset: Int

        """sort the rows by one or more columns"""
        order_by: [owner_info_order_by!]

        """filter the rows returned"""
        where: owner_info_bool_exp
    ): owner_info_aggregate!

    """fetch data from the table: "owner_info" using primary key columns"""
    owner_info_by_pk(
        """主键"""
        id: bigint!
    ): owner_info

    """
    fetch data from the table: "vehicle_info"
  """
    vehicle_info(
        """distinct select on columns"""
        distinct_on: [vehicle_info_select_column!]

        """limit the number of rows returned"""
        limit: Int

        """skip the first n rows. Use only with order_by"""
        offset: Int

        """sort the rows by one or more columns"""
        order_by: [vehicle_info_order_by!]

        """filter the rows returned"""
        where: vehicle_info_bool_exp
    ): [vehicle_info!]!

    """
    fetch aggregated fields from the table: "vehicle_info"
  """
    vehicle_info_aggregate(
        """distinct select on columns"""
        distinct_on: [vehicle_info_select_column!]

        """limit the number of rows returned"""
        limit: Int

        """skip the first n rows. Use only with order_by"""
        offset: Int

        """sort the rows by one or more columns"""
        order_by: [vehicle_info_order_by!]

        """filter the rows returned"""
        where: vehicle_info_bool_exp
    ): vehicle_info_aggregate!

    """fetch data from the table: "vehicle_info" using primary key columns"""
    vehicle_info_by_pk(
        """主键"""
        id: bigint!

        """车辆外部编码，由golang程序生成的xid，暴露到外部使用"""
        vehicle_id: String!
    ): vehicle_info

    """
    fetch data from the table: "vehicle_info_change_log"
  """
    vehicle_info_change_log(
        """distinct select on columns"""
        distinct_on: [vehicle_info_change_log_select_column!]

        """limit the number of rows returned"""
        limit: Int

        """skip the first n rows. Use only with order_by"""
        offset: Int

        """sort the rows by one or more columns"""
        order_by: [vehicle_info_change_log_order_by!]

        """filter the rows returned"""
        where: vehicle_info_change_log_bool_exp
    ): [vehicle_info_change_log!]!

    """
    fetch aggregated fields from the table: "vehicle_info_change_log"
  """
    vehicle_info_change_log_aggregate(
        """distinct select on columns"""
        distinct_on: [vehicle_info_change_log_select_column!]

        """limit the number of rows returned"""
        limit: Int

        """skip the first n rows. Use only with order_by"""
        offset: Int

        """sort the rows by one or more columns"""
        order_by: [vehicle_info_change_log_order_by!]

        """filter the rows returned"""
        where: vehicle_info_change_log_bool_exp
    ): vehicle_info_change_log_aggregate!

    """
    fetch data from the table: "vehicle_info_change_log" using primary key columns
    """
    vehicle_info_change_log_by_pk(
        """主键"""
        id: bigint!

        """车辆信息变更日志外部编码，由golang程序生成的xid，暴露到外部使用"""
        vehicle_info_change_id: String!
    ): vehicle_info_change_log

    """
    fetch data from the table: "vehicle_supervision_photo"
  """
    vehicle_supervision_photo(
        """distinct select on columns"""
        distinct_on: [vehicle_supervision_photo_select_column!]

        """limit the number of rows returned"""
        limit: Int

        """skip the first n rows. Use only with order_by"""
        offset: Int

        """sort the rows by one or more columns"""
        order_by: [vehicle_supervision_photo_order_by!]

        """filter the rows returned"""
        where: vehicle_supervision_photo_bool_exp
    ): [vehicle_supervision_photo!]!

    """
    fetch aggregated fields from the table: "vehicle_supervision_photo"
  """
    vehicle_supervision_photo_aggregate(
        """distinct select on columns"""
        distinct_on: [vehicle_supervision_photo_select_column!]

        """limit the number of rows returned"""
        limit: Int

        """skip the first n rows. Use only with order_by"""
        offset: Int

        """sort the rows by one or more columns"""
        order_by: [vehicle_supervision_photo_order_by!]

        """filter the rows returned"""
        where: vehicle_supervision_photo_bool_exp
    ): vehicle_supervision_photo_aggregate!

    """
    fetch data from the table: "vehicle_supervision_photo" using primary key columns
    """
    vehicle_supervision_photo_by_pk(
        """主键"""
        id: bigint!

        """车辆监控图片外部编码，由golang程序生成的xid，暴露到外部使用"""
        supervision_photo_id: String!
    ): vehicle_supervision_photo
}

"""
expression to compare columns of type String. All fields are combined with logical 'AND'.
"""
input String_comparison_exp {
    _eq: String
    _gt: String
    _gte: String
    _ilike: String
    _in: [String!]
    _is_null: Boolean
    _like: String
    _lt: String
    _lte: String
    _neq: String
    _nilike: String
    _nin: [String!]
    _nlike: String
    _nsimilar: String
    _similar: String
}

"""subscription root"""
type Subscription {
    """
    fetch data from the table: "JJ_VEHICLE"
  """
    JJ_VEHICLE(
        """distinct select on columns"""
        distinct_on: [JJ_VEHICLE_select_column!]

        """limit the number of rows returned"""
        limit: Int

        """skip the first n rows. Use only with order_by"""
        offset: Int

        """sort the rows by one or more columns"""
        order_by: [JJ_VEHICLE_order_by!]

        """filter the rows returned"""
        where: JJ_VEHICLE_bool_exp
    ): [JJ_VEHICLE!]!

    """
    fetch aggregated fields from the table: "JJ_VEHICLE"
  """
    JJ_VEHICLE_aggregate(
        """distinct select on columns"""
        distinct_on: [JJ_VEHICLE_select_column!]

        """limit the number of rows returned"""
        limit: Int

        """skip the first n rows. Use only with order_by"""
        offset: Int

        """sort the rows by one or more columns"""
        order_by: [JJ_VEHICLE_order_by!]

        """filter the rows returned"""
        where: JJ_VEHICLE_bool_exp
    ): JJ_VEHICLE_aggregate!

    """fetch data from the table: "JJ_VEHICLE" using primary key columns"""
    JJ_VEHICLE_by_pk(
        """主键"""
        id: bigint!
    ): JJ_VEHICLE

    """
    fetch data from the table: "muck_truck_category_info"
  """
    muck_truck_category_info(
        """distinct select on columns"""
        distinct_on: [muck_truck_category_info_select_column!]

        """limit the number of rows returned"""
        limit: Int

        """skip the first n rows. Use only with order_by"""
        offset: Int

        """sort the rows by one or more columns"""
        order_by: [muck_truck_category_info_order_by!]

        """filter the rows returned"""
        where: muck_truck_category_info_bool_exp
    ): [muck_truck_category_info!]!

    """
    fetch aggregated fields from the table: "muck_truck_category_info"
  """
    muck_truck_category_info_aggregate(
        """distinct select on columns"""
        distinct_on: [muck_truck_category_info_select_column!]

        """limit the number of rows returned"""
        limit: Int

        """skip the first n rows. Use only with order_by"""
        offset: Int

        """sort the rows by one or more columns"""
        order_by: [muck_truck_category_info_order_by!]

        """filter the rows returned"""
        where: muck_truck_category_info_bool_exp
    ): muck_truck_category_info_aggregate!

    """
    fetch data from the table: "muck_truck_category_info" using primary key columns
    """
    muck_truck_category_info_by_pk(
        """主键"""
        id: bigint!
    ): muck_truck_category_info

    """
    fetch data from the table: "muck_truck_info"
  """
    muck_truck_info(
        """distinct select on columns"""
        distinct_on: [muck_truck_info_select_column!]

        """limit the number of rows returned"""
        limit: Int

        """skip the first n rows. Use only with order_by"""
        offset: Int

        """sort the rows by one or more columns"""
        order_by: [muck_truck_info_order_by!]

        """filter the rows returned"""
        where: muck_truck_info_bool_exp
    ): [muck_truck_info!]!

    """
    fetch aggregated fields from the table: "muck_truck_info"
  """
    muck_truck_info_aggregate(
        """distinct select on columns"""
        distinct_on: [muck_truck_info_select_column!]

        """limit the number of rows returned"""
        limit: Int

        """skip the first n rows. Use only with order_by"""
        offset: Int

        """sort the rows by one or more columns"""
        order_by: [muck_truck_info_order_by!]

        """filter the rows returned"""
        where: muck_truck_info_bool_exp
    ): muck_truck_info_aggregate!

    """fetch data from the table: "muck_truck_info" using primary key columns"""
    muck_truck_info_by_pk(
        """主键"""
        muck_truck_id: bigint!
    ): muck_truck_info

    """
    fetch data from the table: "muck_truck_preview_number"
  """
    muck_truck_preview_number(
        """distinct select on columns"""
        distinct_on: [muck_truck_preview_number_select_column!]

        """limit the number of rows returned"""
        limit: Int

        """skip the first n rows. Use only with order_by"""
        offset: Int

        """sort the rows by one or more columns"""
        order_by: [muck_truck_preview_number_order_by!]

        """filter the rows returned"""
        where: muck_truck_preview_number_bool_exp
    ): [muck_truck_preview_number!]!

    """
    fetch aggregated fields from the table: "muck_truck_preview_number"
  """
    muck_truck_preview_number_aggregate(
        """distinct select on columns"""
        distinct_on: [muck_truck_preview_number_select_column!]

        """limit the number of rows returned"""
        limit: Int

        """skip the first n rows. Use only with order_by"""
        offset: Int

        """sort the rows by one or more columns"""
        order_by: [muck_truck_preview_number_order_by!]

        """filter the rows returned"""
        where: muck_truck_preview_number_bool_exp
    ): muck_truck_preview_number_aggregate!

    """
    fetch data from the table: "muck_truck_preview_number" using primary key columns
    """
    muck_truck_preview_number_by_pk(
        """主键"""
        id: bigint!
    ): muck_truck_preview_number

    """
    fetch data from the table: "muck_truck_worker_id_card_orders"
  """
    muck_truck_worker_id_card_orders(
        """distinct select on columns"""
        distinct_on: [muck_truck_worker_id_card_orders_select_column!]

        """limit the number of rows returned"""
        limit: Int

        """skip the first n rows. Use only with order_by"""
        offset: Int

        """sort the rows by one or more columns"""
        order_by: [muck_truck_worker_id_card_orders_order_by!]

        """filter the rows returned"""
        where: muck_truck_worker_id_card_orders_bool_exp
    ): [muck_truck_worker_id_card_orders!]!

    """
    fetch aggregated fields from the table: "muck_truck_worker_id_card_orders"
  """
    muck_truck_worker_id_card_orders_aggregate(
        """distinct select on columns"""
        distinct_on: [muck_truck_worker_id_card_orders_select_column!]

        """limit the number of rows returned"""
        limit: Int

        """skip the first n rows. Use only with order_by"""
        offset: Int

        """sort the rows by one or more columns"""
        order_by: [muck_truck_worker_id_card_orders_order_by!]

        """filter the rows returned"""
        where: muck_truck_worker_id_card_orders_bool_exp
    ): muck_truck_worker_id_card_orders_aggregate!

    """
    fetch data from the table: "muck_truck_worker_id_card_orders" using primary key columns
    """
    muck_truck_worker_id_card_orders_by_pk(
        """主键"""
        id: bigint!
    ): muck_truck_worker_id_card_orders

    """
    fetch data from the table: "operating_vehicle_info"
  """
    operating_vehicle_info(
        """distinct select on columns"""
        distinct_on: [operating_vehicle_info_select_column!]

        """limit the number of rows returned"""
        limit: Int

        """skip the first n rows. Use only with order_by"""
        offset: Int

        """sort the rows by one or more columns"""
        order_by: [operating_vehicle_info_order_by!]

        """filter the rows returned"""
        where: operating_vehicle_info_bool_exp
    ): [operating_vehicle_info!]!

    """
    fetch aggregated fields from the table: "operating_vehicle_info"
  """
    operating_vehicle_info_aggregate(
        """distinct select on columns"""
        distinct_on: [operating_vehicle_info_select_column!]

        """limit the number of rows returned"""
        limit: Int

        """skip the first n rows. Use only with order_by"""
        offset: Int

        """sort the rows by one or more columns"""
        order_by: [operating_vehicle_info_order_by!]

        """filter the rows returned"""
        where: operating_vehicle_info_bool_exp
    ): operating_vehicle_info_aggregate!

    """
    fetch data from the table: "operating_vehicle_info" using primary key columns
    """
    operating_vehicle_info_by_pk(
        """主键"""
        operating_vehicle_id: bigint!
    ): operating_vehicle_info

    """
    fetch data from the table: "owner_info"
  """
    owner_info(
        """distinct select on columns"""
        distinct_on: [owner_info_select_column!]

        """limit the number of rows returned"""
        limit: Int

        """skip the first n rows. Use only with order_by"""
        offset: Int

        """sort the rows by one or more columns"""
        order_by: [owner_info_order_by!]

        """filter the rows returned"""
        where: owner_info_bool_exp
    ): [owner_info!]!

    """
    fetch aggregated fields from the table: "owner_info"
  """
    owner_info_aggregate(
        """distinct select on columns"""
        distinct_on: [owner_info_select_column!]

        """limit the number of rows returned"""
        limit: Int

        """skip the first n rows. Use only with order_by"""
        offset: Int

        """sort the rows by one or more columns"""
        order_by: [owner_info_order_by!]

        """filter the rows returned"""
        where: owner_info_bool_exp
    ): owner_info_aggregate!

    """fetch data from the table: "owner_info" using primary key columns"""
    owner_info_by_pk(
        """主键"""
        id: bigint!
    ): owner_info

    """
    fetch data from the table: "vehicle_info"
  """
    vehicle_info(
        """distinct select on columns"""
        distinct_on: [vehicle_info_select_column!]

        """limit the number of rows returned"""
        limit: Int

        """skip the first n rows. Use only with order_by"""
        offset: Int

        """sort the rows by one or more columns"""
        order_by: [vehicle_info_order_by!]

        """filter the rows returned"""
        where: vehicle_info_bool_exp
    ): [vehicle_info!]!

    """
    fetch aggregated fields from the table: "vehicle_info"
  """
    vehicle_info_aggregate(
        """distinct select on columns"""
        distinct_on: [vehicle_info_select_column!]

        """limit the number of rows returned"""
        limit: Int

        """skip the first n rows. Use only with order_by"""
        offset: Int

        """sort the rows by one or more columns"""
        order_by: [vehicle_info_order_by!]

        """filter the rows returned"""
        where: vehicle_info_bool_exp
    ): vehicle_info_aggregate!

    """fetch data from the table: "vehicle_info" using primary key columns"""
    vehicle_info_by_pk(
        """主键"""
        id: bigint!

        """车辆外部编码，由golang程序生成的xid，暴露到外部使用"""
        vehicle_id: String!
    ): vehicle_info

    """
    fetch data from the table: "vehicle_info_change_log"
  """
    vehicle_info_change_log(
        """distinct select on columns"""
        distinct_on: [vehicle_info_change_log_select_column!]

        """limit the number of rows returned"""
        limit: Int

        """skip the first n rows. Use only with order_by"""
        offset: Int

        """sort the rows by one or more columns"""
        order_by: [vehicle_info_change_log_order_by!]

        """filter the rows returned"""
        where: vehicle_info_change_log_bool_exp
    ): [vehicle_info_change_log!]!

    """
    fetch aggregated fields from the table: "vehicle_info_change_log"
  """
    vehicle_info_change_log_aggregate(
        """distinct select on columns"""
        distinct_on: [vehicle_info_change_log_select_column!]

        """limit the number of rows returned"""
        limit: Int

        """skip the first n rows. Use only with order_by"""
        offset: Int

        """sort the rows by one or more columns"""
        order_by: [vehicle_info_change_log_order_by!]

        """filter the rows returned"""
        where: vehicle_info_change_log_bool_exp
    ): vehicle_info_change_log_aggregate!

    """
    fetch data from the table: "vehicle_info_change_log" using primary key columns
    """
    vehicle_info_change_log_by_pk(
        """主键"""
        id: bigint!

        """车辆信息变更日志外部编码，由golang程序生成的xid，暴露到外部使用"""
        vehicle_info_change_id: String!
    ): vehicle_info_change_log

    """
    fetch data from the table: "vehicle_supervision_photo"
  """
    vehicle_supervision_photo(
        """distinct select on columns"""
        distinct_on: [vehicle_supervision_photo_select_column!]

        """limit the number of rows returned"""
        limit: Int

        """skip the first n rows. Use only with order_by"""
        offset: Int

        """sort the rows by one or more columns"""
        order_by: [vehicle_supervision_photo_order_by!]

        """filter the rows returned"""
        where: vehicle_supervision_photo_bool_exp
    ): [vehicle_supervision_photo!]!

    """
    fetch aggregated fields from the table: "vehicle_supervision_photo"
  """
    vehicle_supervision_photo_aggregate(
        """distinct select on columns"""
        distinct_on: [vehicle_supervision_photo_select_column!]

        """limit the number of rows returned"""
        limit: Int

        """skip the first n rows. Use only with order_by"""
        offset: Int

        """sort the rows by one or more columns"""
        order_by: [vehicle_supervision_photo_order_by!]

        """filter the rows returned"""
        where: vehicle_supervision_photo_bool_exp
    ): vehicle_supervision_photo_aggregate!

    """
    fetch data from the table: "vehicle_supervision_photo" using primary key columns
    """
    vehicle_supervision_photo_by_pk(
        """主键"""
        id: bigint!

        """车辆监控图片外部编码，由golang程序生成的xid，暴露到外部使用"""
        supervision_photo_id: String!
    ): vehicle_supervision_photo
}

scalar timestamp

"""
expression to compare columns of type timestamp. All fields are combined with logical 'AND'.
"""
input timestamp_comparison_exp {
    _eq: timestamp
    _gt: timestamp
    _gte: timestamp
    _in: [timestamp!]
    _is_null: Boolean
    _lt: timestamp
    _lte: timestamp
    _neq: timestamp
    _nin: [timestamp!]
}

scalar timestamptz

"""
expression to compare columns of type timestamptz. All fields are combined with logical 'AND'.
"""
input timestamptz_comparison_exp {
    _eq: timestamptz
    _gt: timestamptz
    _gte: timestamptz
    _in: [timestamptz!]
    _is_null: Boolean
    _lt: timestamptz
    _lte: timestamptz
    _neq: timestamptz
    _nin: [timestamptz!]
}

"""
车辆信息主表


columns and relationships of "vehicle_info"

"""
type vehicle_info {
    """经营范围字典"""
    business_scope: Int

    """租车标准价格"""
    car_rental_price: numeric

    """校验状态"""
    check_state: Int

    """创建时间"""
    create_at: timestamp!

    """创建人,"""
    create_by: String!

    """删除时间"""
    delete_at: timestamp

    """删除人"""
    delete_by: timestamp

    """所在部门id,department 部门信息表"""
    department_id: String

    """行驶证照片,云储存系统返回的路径"""
    driving_licensee_pic: String

    """所在企业id,enterprise_info表的enterprise_id"""
    enterprise_id: String

    """吨位"""
    heavy: numeric

    """主键"""
    id: bigint!

    """行业类别字典"""
    industry_category: Int

    """检验日期（六合一）"""
    inspection_date: timestamp

    """投保公司"""
    insurance_company: Int

    """投保日期"""
    insurance_date: timestamp

    """是否激活"""
    is_active: Boolean

    """是否申请安装智能终端"""
    is_apply_install_terminal: Boolean

    """是否完成;用于标志车辆资料是否处于确定状态。未确定状态的车辆信息在系统上除车辆管理外的功能中都查不到"""
    is_complete: Boolean

    """是否删除"""
    is_delete: Boolean

    """是否导入"""
    is_import: Boolean

    """是否录入完成"""
    is_input: Boolean

    """是否上传省厅"""
    is_upload_province: Boolean

    """车牌颜色字典"""
    license_plate_color: Int

    """车牌号"""
    license_plate_number: String

    """号牌种类字典"""
    license_plate_type: Int

    """muck_truck _info 渣土车信息表的id"""
    muck_truck_id: bigint!

    """营运线路"""
    operating_route: String

    """营运状态字典"""
    operating_state: Int

    """营运类型字典"""
    operating_type: Int

    """operating_vehi cle_ info 营运车信息表的id"""
    operating_vehicle_id: bigint!

    """机动车所有人（六合一）"""
    owner: String

    """准驾车型"""
    quasi_driving_models: Int

    """登记时间"""
    record_at: timestamp

    """登记人,system_user表的user_id"""
    record_by: String

    """车辆信息同步内网反馈信息;车辆信息同步到公安内网后内网的反馈内容，如车牌号填写错误会反馈车辆号牌错误"""
    remark_in: String

    """备注"""
    remarks: String

    """报废日期（六合一）"""
    retirement_date: timestamp

    """
    道路运输证号


    """
    road_transport_license_number: String

    """座位"""
    seats: Int

    """终端ID"""
    terminal_id: String

    """修改时间"""
    update_at: timestamp

    """修改人"""
    update_by: String

    """内网更新时间"""
    update_time_in: timestamp

    """使用性质（六合一）"""
    use_nature: String

    """车辆品牌"""
    vehicle_brand: Int

    """汽车排量"""
    vehicle_displacement: String

    """车辆外部编码，由golang程序生成的xid，暴露到外部使用"""
    vehicle_id: String!

    """车架号(后6位),车辆识别代号vin,如D02133"""
    vehicle_identification_number: String

    """
    维保数据数组，字段包括: 1.maintenance_ date 维保时间<br />2.maintenance_ kilometers 维保公里数
    """
    vehicle_maintenances: _jsonb

    """机动车管理人"""
    vehicle_manager: String

    """机动车管理人身份证"""
    vehicle_manager_id_card: String

    """机动车管理人联系电话"""
    vehicle_manager_phone: String

    """机动车状态"""
    vehicle_state: Int

    """车辆类型字典"""
    vehicle_type: Int
}

"""
aggregated selection of "vehicle_info"
"""
type vehicle_info_aggregate {
    aggregate: vehicle_info_aggregate_fields
    nodes: [vehicle_info!]!
}

"""
aggregate fields of "vehicle_info"
"""
type vehicle_info_aggregate_fields {
    avg: vehicle_info_avg_fields
    count(columns: [vehicle_info_select_column!], distinct: Boolean): Int
    max: vehicle_info_max_fields
    min: vehicle_info_min_fields
    stddev: vehicle_info_stddev_fields
    stddev_pop: vehicle_info_stddev_pop_fields
    stddev_samp: vehicle_info_stddev_samp_fields
    sum: vehicle_info_sum_fields
    var_pop: vehicle_info_var_pop_fields
    var_samp: vehicle_info_var_samp_fields
    variance: vehicle_info_variance_fields
}

"""
order by aggregate values of table "vehicle_info"
"""
input vehicle_info_aggregate_order_by {
    avg: vehicle_info_avg_order_by
    count: order_by
    max: vehicle_info_max_order_by
    min: vehicle_info_min_order_by
    stddev: vehicle_info_stddev_order_by
    stddev_pop: vehicle_info_stddev_pop_order_by
    stddev_samp: vehicle_info_stddev_samp_order_by
    sum: vehicle_info_sum_order_by
    var_pop: vehicle_info_var_pop_order_by
    var_samp: vehicle_info_var_samp_order_by
    variance: vehicle_info_variance_order_by
}

"""
input type for inserting array relation for remote table "vehicle_info"
"""
input vehicle_info_arr_rel_insert_input {
    data: [vehicle_info_insert_input!]!
    on_conflict: vehicle_info_on_conflict
}

"""aggregate avg on columns"""
type vehicle_info_avg_fields {
    business_scope: Float
    car_rental_price: Float
    check_state: Float
    heavy: Float
    id: Float
    industry_category: Float
    insurance_company: Float
    license_plate_color: Float
    license_plate_type: Float
    muck_truck_id: Float
    operating_state: Float
    operating_type: Float
    operating_vehicle_id: Float
    quasi_driving_models: Float
    seats: Float
    vehicle_brand: Float
    vehicle_state: Float
    vehicle_type: Float
}

"""
order by avg() on columns of table "vehicle_info"
"""
input vehicle_info_avg_order_by {
    business_scope: order_by
    car_rental_price: order_by
    check_state: order_by
    heavy: order_by
    id: order_by
    industry_category: order_by
    insurance_company: order_by
    license_plate_color: order_by
    license_plate_type: order_by
    muck_truck_id: order_by
    operating_state: order_by
    operating_type: order_by
    operating_vehicle_id: order_by
    quasi_driving_models: order_by
    seats: order_by
    vehicle_brand: order_by
    vehicle_state: order_by
    vehicle_type: order_by
}

"""
Boolean expression to filter rows from the table "vehicle_info". All fields are combined with a logical 'AND'.
"""
input vehicle_info_bool_exp {
    _and: [vehicle_info_bool_exp]
    _not: vehicle_info_bool_exp
    _or: [vehicle_info_bool_exp]
    business_scope: Int_comparison_exp
    car_rental_price: numeric_comparison_exp
    check_state: Int_comparison_exp
    create_at: timestamp_comparison_exp
    create_by: String_comparison_exp
    delete_at: timestamp_comparison_exp
    delete_by: timestamp_comparison_exp
    department_id: String_comparison_exp
    driving_licensee_pic: String_comparison_exp
    enterprise_id: String_comparison_exp
    heavy: numeric_comparison_exp
    id: bigint_comparison_exp
    industry_category: Int_comparison_exp
    inspection_date: timestamp_comparison_exp
    insurance_company: Int_comparison_exp
    insurance_date: timestamp_comparison_exp
    is_active: Boolean_comparison_exp
    is_apply_install_terminal: Boolean_comparison_exp
    is_complete: Boolean_comparison_exp
    is_delete: Boolean_comparison_exp
    is_import: Boolean_comparison_exp
    is_input: Boolean_comparison_exp
    is_upload_province: Boolean_comparison_exp
    license_plate_color: Int_comparison_exp
    license_plate_number: String_comparison_exp
    license_plate_type: Int_comparison_exp
    muck_truck_id: bigint_comparison_exp
    operating_route: String_comparison_exp
    operating_state: Int_comparison_exp
    operating_type: Int_comparison_exp
    operating_vehicle_id: bigint_comparison_exp
    owner: String_comparison_exp
    quasi_driving_models: Int_comparison_exp
    record_at: timestamp_comparison_exp
    record_by: String_comparison_exp
    remark_in: String_comparison_exp
    remarks: String_comparison_exp
    retirement_date: timestamp_comparison_exp
    road_transport_license_number: String_comparison_exp
    seats: Int_comparison_exp
    terminal_id: String_comparison_exp
    update_at: timestamp_comparison_exp
    update_by: String_comparison_exp
    update_time_in: timestamp_comparison_exp
    use_nature: String_comparison_exp
    vehicle_brand: Int_comparison_exp
    vehicle_displacement: String_comparison_exp
    vehicle_id: String_comparison_exp
    vehicle_identification_number: String_comparison_exp
    vehicle_maintenances: _jsonb_comparison_exp
    vehicle_manager: String_comparison_exp
    vehicle_manager_id_card: String_comparison_exp
    vehicle_manager_phone: String_comparison_exp
    vehicle_state: Int_comparison_exp
    vehicle_type: Int_comparison_exp
}

"""
车辆信息变更日志表


columns and relationships of "vehicle_info_change_log"

"""
type vehicle_info_change_log {
    """经营范围字典"""
    business_scope: Int

    """租车标准价格"""
    car_rental_price: numeric

    """校验状态"""
    check_state: Int

    """创建时间"""
    create_at: timestamp!

    """创建人,"""
    create_by: String!

    """删除时间"""
    delete_at: timestamp

    """删除人"""
    delete_by: timestamp

    """所在部门id,department 部门信息表"""
    department_id: String

    """行驶证照片,云储存系统返回的路径"""
    driving_licensee_pic: String

    """所在企业id,enterprise_info表的enterprise_id"""
    enterprise_id: String

    """吨位"""
    heavy: numeric

    """主键"""
    id: bigint!

    """行业类别字典"""
    industry_category: Int

    """检验日期（六合一）"""
    inspection_date: timestamp

    """投保公司"""
    insurance_company: Int

    """投保日期"""
    insurance_date: timestamp

    """是否激活"""
    is_active: Boolean

    """是否申请安装智能终端"""
    is_apply_install_terminal: Boolean

    """是否完成;用于标志车辆资料是否处于确定状态。未确定状态的车辆信息在系统上除车辆管理外的功能中都查不到"""
    is_complete: Boolean

    """是否删除"""
    is_delete: Boolean

    """是否导入"""
    is_import: Boolean

    """是否录入完成"""
    is_input: Boolean

    """是否上传省厅"""
    is_upload_province: Boolean

    """车牌颜色字典"""
    license_plate_color: Int

    """车牌号"""
    license_plate_number: String

    """号牌种类字典"""
    license_plate_type: Int

    """muck_truck _info 渣土车信息表的id"""
    muck_truck_id: bigint!

    """营运线路"""
    operating_route: String

    """营运状态字典"""
    operating_state: Int

    """营运类型字典"""
    operating_type: Int

    """operating_vehi cle_ info 营运车信息表的id"""
    operating_vehicle_id: bigint!

    """机动车所有人（六合一）"""
    owner: String

    """准驾车型"""
    quasi_driving_models: Int

    """登记时间"""
    record_at: timestamp

    """登记人,system_user表的user_id"""
    record_by: String

    """车辆信息同步内网反馈信息;车辆信息同步到公安内网后内网的反馈内容，如车牌号填写错误会反馈车辆号牌错误"""
    remark_in: String

    """备注"""
    remarks: String

    """报废日期（六合一）"""
    retirement_date: timestamp

    """
    道路运输证号


    """
    road_transport_license_number: String

    """座位"""
    seats: Int

    """终端ID"""
    terminal_id: String

    """修改时间"""
    update_at: timestamp

    """修改人"""
    update_by: String

    """内网更新时间"""
    update_time_in: timestamp

    """使用性质（六合一）"""
    use_nature: String

    """车辆品牌"""
    vehicle_brand: Int

    """汽车排量"""
    vehicle_displacement: String

    """车架号(后6位),车辆识别代号vin,如D02133"""
    vehicle_identification_number: String

    """车辆信息变更日志外部编码，由golang程序生成的xid，暴露到外部使用"""
    vehicle_info_change_id: String!

    """
    维保数据数组，字段包括: 1.maintenance_ date 维保时间<br />2.maintenance_ kilometers 维保公里数
    """
    vehicle_maintenances: _jsonb

    """机动车管理人"""
    vehicle_manager: String

    """机动车管理人身份证"""
    vehicle_manager_id_card: String

    """机动车管理人联系电话"""
    vehicle_manager_phone: String

    """机动车状态"""
    vehicle_state: Int

    """车辆类型字典"""
    vehicle_type: Int
}

"""
aggregated selection of "vehicle_info_change_log"
"""
type vehicle_info_change_log_aggregate {
    aggregate: vehicle_info_change_log_aggregate_fields
    nodes: [vehicle_info_change_log!]!
}

"""
aggregate fields of "vehicle_info_change_log"
"""
type vehicle_info_change_log_aggregate_fields {
    avg: vehicle_info_change_log_avg_fields
    count(columns: [vehicle_info_change_log_select_column!], distinct: Boolean): Int
    max: vehicle_info_change_log_max_fields
    min: vehicle_info_change_log_min_fields
    stddev: vehicle_info_change_log_stddev_fields
    stddev_pop: vehicle_info_change_log_stddev_pop_fields
    stddev_samp: vehicle_info_change_log_stddev_samp_fields
    sum: vehicle_info_change_log_sum_fields
    var_pop: vehicle_info_change_log_var_pop_fields
    var_samp: vehicle_info_change_log_var_samp_fields
    variance: vehicle_info_change_log_variance_fields
}

"""
order by aggregate values of table "vehicle_info_change_log"
"""
input vehicle_info_change_log_aggregate_order_by {
    avg: vehicle_info_change_log_avg_order_by
    count: order_by
    max: vehicle_info_change_log_max_order_by
    min: vehicle_info_change_log_min_order_by
    stddev: vehicle_info_change_log_stddev_order_by
    stddev_pop: vehicle_info_change_log_stddev_pop_order_by
    stddev_samp: vehicle_info_change_log_stddev_samp_order_by
    sum: vehicle_info_change_log_sum_order_by
    var_pop: vehicle_info_change_log_var_pop_order_by
    var_samp: vehicle_info_change_log_var_samp_order_by
    variance: vehicle_info_change_log_variance_order_by
}

"""
input type for inserting array relation for remote table "vehicle_info_change_log"
"""
input vehicle_info_change_log_arr_rel_insert_input {
    data: [vehicle_info_change_log_insert_input!]!
    on_conflict: vehicle_info_change_log_on_conflict
}

"""aggregate avg on columns"""
type vehicle_info_change_log_avg_fields {
    business_scope: Float
    car_rental_price: Float
    check_state: Float
    heavy: Float
    id: Float
    industry_category: Float
    insurance_company: Float
    license_plate_color: Float
    license_plate_type: Float
    muck_truck_id: Float
    operating_state: Float
    operating_type: Float
    operating_vehicle_id: Float
    quasi_driving_models: Float
    seats: Float
    vehicle_brand: Float
    vehicle_state: Float
    vehicle_type: Float
}

"""
order by avg() on columns of table "vehicle_info_change_log"
"""
input vehicle_info_change_log_avg_order_by {
    business_scope: order_by
    car_rental_price: order_by
    check_state: order_by
    heavy: order_by
    id: order_by
    industry_category: order_by
    insurance_company: order_by
    license_plate_color: order_by
    license_plate_type: order_by
    muck_truck_id: order_by
    operating_state: order_by
    operating_type: order_by
    operating_vehicle_id: order_by
    quasi_driving_models: order_by
    seats: order_by
    vehicle_brand: order_by
    vehicle_state: order_by
    vehicle_type: order_by
}

"""
Boolean expression to filter rows from the table "vehicle_info_change_log". All fields are combined with a logical 'AND'.
"""
input vehicle_info_change_log_bool_exp {
    _and: [vehicle_info_change_log_bool_exp]
    _not: vehicle_info_change_log_bool_exp
    _or: [vehicle_info_change_log_bool_exp]
    business_scope: Int_comparison_exp
    car_rental_price: numeric_comparison_exp
    check_state: Int_comparison_exp
    create_at: timestamp_comparison_exp
    create_by: String_comparison_exp
    delete_at: timestamp_comparison_exp
    delete_by: timestamp_comparison_exp
    department_id: String_comparison_exp
    driving_licensee_pic: String_comparison_exp
    enterprise_id: String_comparison_exp
    heavy: numeric_comparison_exp
    id: bigint_comparison_exp
    industry_category: Int_comparison_exp
    inspection_date: timestamp_comparison_exp
    insurance_company: Int_comparison_exp
    insurance_date: timestamp_comparison_exp
    is_active: Boolean_comparison_exp
    is_apply_install_terminal: Boolean_comparison_exp
    is_complete: Boolean_comparison_exp
    is_delete: Boolean_comparison_exp
    is_import: Boolean_comparison_exp
    is_input: Boolean_comparison_exp
    is_upload_province: Boolean_comparison_exp
    license_plate_color: Int_comparison_exp
    license_plate_number: String_comparison_exp
    license_plate_type: Int_comparison_exp
    muck_truck_id: bigint_comparison_exp
    operating_route: String_comparison_exp
    operating_state: Int_comparison_exp
    operating_type: Int_comparison_exp
    operating_vehicle_id: bigint_comparison_exp
    owner: String_comparison_exp
    quasi_driving_models: Int_comparison_exp
    record_at: timestamp_comparison_exp
    record_by: String_comparison_exp
    remark_in: String_comparison_exp
    remarks: String_comparison_exp
    retirement_date: timestamp_comparison_exp
    road_transport_license_number: String_comparison_exp
    seats: Int_comparison_exp
    terminal_id: String_comparison_exp
    update_at: timestamp_comparison_exp
    update_by: String_comparison_exp
    update_time_in: timestamp_comparison_exp
    use_nature: String_comparison_exp
    vehicle_brand: Int_comparison_exp
    vehicle_displacement: String_comparison_exp
    vehicle_identification_number: String_comparison_exp
    vehicle_info_change_id: String_comparison_exp
    vehicle_maintenances: _jsonb_comparison_exp
    vehicle_manager: String_comparison_exp
    vehicle_manager_id_card: String_comparison_exp
    vehicle_manager_phone: String_comparison_exp
    vehicle_state: Int_comparison_exp
    vehicle_type: Int_comparison_exp
}

"""
unique or primary key constraints on table "vehicle_info_change_log"
"""
enum vehicle_info_change_log_constraint {
    """unique or primary key constraint"""
    vehicle_info_change_log_pkey
}

"""
input type for incrementing integer column in table "vehicle_info_change_log"
"""
input vehicle_info_change_log_inc_input {
    business_scope: Int
    car_rental_price: numeric
    check_state: Int
    heavy: numeric
    id: bigint
    industry_category: Int
    insurance_company: Int
    license_plate_color: Int
    license_plate_type: Int
    muck_truck_id: bigint
    operating_state: Int
    operating_type: Int
    operating_vehicle_id: bigint
    quasi_driving_models: Int
    seats: Int
    vehicle_brand: Int
    vehicle_state: Int
    vehicle_type: Int
}

"""
input type for inserting data into table "vehicle_info_change_log"
"""
input vehicle_info_change_log_insert_input {
    business_scope: Int
    car_rental_price: numeric
    check_state: Int
    create_at: timestamp
    create_by: String
    delete_at: timestamp
    delete_by: timestamp
    department_id: String
    driving_licensee_pic: String
    enterprise_id: String
    heavy: numeric
    id: bigint
    industry_category: Int
    inspection_date: timestamp
    insurance_company: Int
    insurance_date: timestamp
    is_active: Boolean
    is_apply_install_terminal: Boolean
    is_complete: Boolean
    is_delete: Boolean
    is_import: Boolean
    is_input: Boolean
    is_upload_province: Boolean
    license_plate_color: Int
    license_plate_number: String
    license_plate_type: Int
    muck_truck_id: bigint
    operating_route: String
    operating_state: Int
    operating_type: Int
    operating_vehicle_id: bigint
    owner: String
    quasi_driving_models: Int
    record_at: timestamp
    record_by: String
    remark_in: String
    remarks: String
    retirement_date: timestamp
    road_transport_license_number: String
    seats: Int
    terminal_id: String
    update_at: timestamp
    update_by: String
    update_time_in: timestamp
    use_nature: String
    vehicle_brand: Int
    vehicle_displacement: String
    vehicle_identification_number: String
    vehicle_info_change_id: String
    vehicle_maintenances: _jsonb
    vehicle_manager: String
    vehicle_manager_id_card: String
    vehicle_manager_phone: String
    vehicle_state: Int
    vehicle_type: Int
}

"""aggregate max on columns"""
type vehicle_info_change_log_max_fields {
    business_scope: Int
    car_rental_price: numeric
    check_state: Int
    create_at: timestamp
    create_by: String
    delete_at: timestamp
    delete_by: timestamp
    department_id: String
    driving_licensee_pic: String
    enterprise_id: String
    heavy: numeric
    id: bigint
    industry_category: Int
    inspection_date: timestamp
    insurance_company: Int
    insurance_date: timestamp
    license_plate_color: Int
    license_plate_number: String
    license_plate_type: Int
    muck_truck_id: bigint
    operating_route: String
    operating_state: Int
    operating_type: Int
    operating_vehicle_id: bigint
    owner: String
    quasi_driving_models: Int
    record_at: timestamp
    record_by: String
    remark_in: String
    remarks: String
    retirement_date: timestamp
    road_transport_license_number: String
    seats: Int
    terminal_id: String
    update_at: timestamp
    update_by: String
    update_time_in: timestamp
    use_nature: String
    vehicle_brand: Int
    vehicle_displacement: String
    vehicle_identification_number: String
    vehicle_info_change_id: String
    vehicle_manager: String
    vehicle_manager_id_card: String
    vehicle_manager_phone: String
    vehicle_state: Int
    vehicle_type: Int
}

"""
order by max() on columns of table "vehicle_info_change_log"
"""
input vehicle_info_change_log_max_order_by {
    business_scope: order_by
    car_rental_price: order_by
    check_state: order_by
    create_at: order_by
    create_by: order_by
    delete_at: order_by
    delete_by: order_by
    department_id: order_by
    driving_licensee_pic: order_by
    enterprise_id: order_by
    heavy: order_by
    id: order_by
    industry_category: order_by
    inspection_date: order_by
    insurance_company: order_by
    insurance_date: order_by
    license_plate_color: order_by
    license_plate_number: order_by
    license_plate_type: order_by
    muck_truck_id: order_by
    operating_route: order_by
    operating_state: order_by
    operating_type: order_by
    operating_vehicle_id: order_by
    owner: order_by
    quasi_driving_models: order_by
    record_at: order_by
    record_by: order_by
    remark_in: order_by
    remarks: order_by
    retirement_date: order_by
    road_transport_license_number: order_by
    seats: order_by
    terminal_id: order_by
    update_at: order_by
    update_by: order_by
    update_time_in: order_by
    use_nature: order_by
    vehicle_brand: order_by
    vehicle_displacement: order_by
    vehicle_identification_number: order_by
    vehicle_info_change_id: order_by
    vehicle_manager: order_by
    vehicle_manager_id_card: order_by
    vehicle_manager_phone: order_by
    vehicle_state: order_by
    vehicle_type: order_by
}

"""aggregate min on columns"""
type vehicle_info_change_log_min_fields {
    business_scope: Int
    car_rental_price: numeric
    check_state: Int
    create_at: timestamp
    create_by: String
    delete_at: timestamp
    delete_by: timestamp
    department_id: String
    driving_licensee_pic: String
    enterprise_id: String
    heavy: numeric
    id: bigint
    industry_category: Int
    inspection_date: timestamp
    insurance_company: Int
    insurance_date: timestamp
    license_plate_color: Int
    license_plate_number: String
    license_plate_type: Int
    muck_truck_id: bigint
    operating_route: String
    operating_state: Int
    operating_type: Int
    operating_vehicle_id: bigint
    owner: String
    quasi_driving_models: Int
    record_at: timestamp
    record_by: String
    remark_in: String
    remarks: String
    retirement_date: timestamp
    road_transport_license_number: String
    seats: Int
    terminal_id: String
    update_at: timestamp
    update_by: String
    update_time_in: timestamp
    use_nature: String
    vehicle_brand: Int
    vehicle_displacement: String
    vehicle_identification_number: String
    vehicle_info_change_id: String
    vehicle_manager: String
    vehicle_manager_id_card: String
    vehicle_manager_phone: String
    vehicle_state: Int
    vehicle_type: Int
}

"""
order by min() on columns of table "vehicle_info_change_log"
"""
input vehicle_info_change_log_min_order_by {
    business_scope: order_by
    car_rental_price: order_by
    check_state: order_by
    create_at: order_by
    create_by: order_by
    delete_at: order_by
    delete_by: order_by
    department_id: order_by
    driving_licensee_pic: order_by
    enterprise_id: order_by
    heavy: order_by
    id: order_by
    industry_category: order_by
    inspection_date: order_by
    insurance_company: order_by
    insurance_date: order_by
    license_plate_color: order_by
    license_plate_number: order_by
    license_plate_type: order_by
    muck_truck_id: order_by
    operating_route: order_by
    operating_state: order_by
    operating_type: order_by
    operating_vehicle_id: order_by
    owner: order_by
    quasi_driving_models: order_by
    record_at: order_by
    record_by: order_by
    remark_in: order_by
    remarks: order_by
    retirement_date: order_by
    road_transport_license_number: order_by
    seats: order_by
    terminal_id: order_by
    update_at: order_by
    update_by: order_by
    update_time_in: order_by
    use_nature: order_by
    vehicle_brand: order_by
    vehicle_displacement: order_by
    vehicle_identification_number: order_by
    vehicle_info_change_id: order_by
    vehicle_manager: order_by
    vehicle_manager_id_card: order_by
    vehicle_manager_phone: order_by
    vehicle_state: order_by
    vehicle_type: order_by
}

"""
response of any mutation on the table "vehicle_info_change_log"
"""
type vehicle_info_change_log_mutation_response {
    """number of affected rows by the mutation"""
    affected_rows: Int!

    """data of the affected rows by the mutation"""
    returning: [vehicle_info_change_log!]!
}

"""
input type for inserting object relation for remote table "vehicle_info_change_log"
"""
input vehicle_info_change_log_obj_rel_insert_input {
    data: vehicle_info_change_log_insert_input!
    on_conflict: vehicle_info_change_log_on_conflict
}

"""
on conflict condition type for table "vehicle_info_change_log"
"""
input vehicle_info_change_log_on_conflict {
    constraint: vehicle_info_change_log_constraint!
    update_columns: [vehicle_info_change_log_update_column!]!
    where: vehicle_info_change_log_bool_exp
}

"""
ordering options when selecting data from "vehicle_info_change_log"
"""
input vehicle_info_change_log_order_by {
    business_scope: order_by
    car_rental_price: order_by
    check_state: order_by
    create_at: order_by
    create_by: order_by
    delete_at: order_by
    delete_by: order_by
    department_id: order_by
    driving_licensee_pic: order_by
    enterprise_id: order_by
    heavy: order_by
    id: order_by
    industry_category: order_by
    inspection_date: order_by
    insurance_company: order_by
    insurance_date: order_by
    is_active: order_by
    is_apply_install_terminal: order_by
    is_complete: order_by
    is_delete: order_by
    is_import: order_by
    is_input: order_by
    is_upload_province: order_by
    license_plate_color: order_by
    license_plate_number: order_by
    license_plate_type: order_by
    muck_truck_id: order_by
    operating_route: order_by
    operating_state: order_by
    operating_type: order_by
    operating_vehicle_id: order_by
    owner: order_by
    quasi_driving_models: order_by
    record_at: order_by
    record_by: order_by
    remark_in: order_by
    remarks: order_by
    retirement_date: order_by
    road_transport_license_number: order_by
    seats: order_by
    terminal_id: order_by
    update_at: order_by
    update_by: order_by
    update_time_in: order_by
    use_nature: order_by
    vehicle_brand: order_by
    vehicle_displacement: order_by
    vehicle_identification_number: order_by
    vehicle_info_change_id: order_by
    vehicle_maintenances: order_by
    vehicle_manager: order_by
    vehicle_manager_id_card: order_by
    vehicle_manager_phone: order_by
    vehicle_state: order_by
    vehicle_type: order_by
}

"""
primary key columns input for table: "vehicle_info_change_log"
"""
input vehicle_info_change_log_pk_columns_input {
    """主键"""
    id: bigint!

    """车辆信息变更日志外部编码，由golang程序生成的xid，暴露到外部使用"""
    vehicle_info_change_id: String!
}

"""
select columns of table "vehicle_info_change_log"
"""
enum vehicle_info_change_log_select_column {
    """column name"""
    business_scope

    """column name"""
    car_rental_price

    """column name"""
    check_state

    """column name"""
    create_at

    """column name"""
    create_by

    """column name"""
    delete_at

    """column name"""
    delete_by

    """column name"""
    department_id

    """column name"""
    driving_licensee_pic

    """column name"""
    enterprise_id

    """column name"""
    heavy

    """column name"""
    id

    """column name"""
    industry_category

    """column name"""
    inspection_date

    """column name"""
    insurance_company

    """column name"""
    insurance_date

    """column name"""
    is_active

    """column name"""
    is_apply_install_terminal

    """column name"""
    is_complete

    """column name"""
    is_delete

    """column name"""
    is_import

    """column name"""
    is_input

    """column name"""
    is_upload_province

    """column name"""
    license_plate_color

    """column name"""
    license_plate_number

    """column name"""
    license_plate_type

    """column name"""
    muck_truck_id

    """column name"""
    operating_route

    """column name"""
    operating_state

    """column name"""
    operating_type

    """column name"""
    operating_vehicle_id

    """column name"""
    owner

    """column name"""
    quasi_driving_models

    """column name"""
    record_at

    """column name"""
    record_by

    """column name"""
    remark_in

    """column name"""
    remarks

    """column name"""
    retirement_date

    """column name"""
    road_transport_license_number

    """column name"""
    seats

    """column name"""
    terminal_id

    """column name"""
    update_at

    """column name"""
    update_by

    """column name"""
    update_time_in

    """column name"""
    use_nature

    """column name"""
    vehicle_brand

    """column name"""
    vehicle_displacement

    """column name"""
    vehicle_identification_number

    """column name"""
    vehicle_info_change_id

    """column name"""
    vehicle_maintenances

    """column name"""
    vehicle_manager

    """column name"""
    vehicle_manager_id_card

    """column name"""
    vehicle_manager_phone

    """column name"""
    vehicle_state

    """column name"""
    vehicle_type
}

"""
input type for updating data in table "vehicle_info_change_log"
"""
input vehicle_info_change_log_set_input {
    business_scope: Int
    car_rental_price: numeric
    check_state: Int
    create_at: timestamp
    create_by: String
    delete_at: timestamp
    delete_by: timestamp
    department_id: String
    driving_licensee_pic: String
    enterprise_id: String
    heavy: numeric
    id: bigint
    industry_category: Int
    inspection_date: timestamp
    insurance_company: Int
    insurance_date: timestamp
    is_active: Boolean
    is_apply_install_terminal: Boolean
    is_complete: Boolean
    is_delete: Boolean
    is_import: Boolean
    is_input: Boolean
    is_upload_province: Boolean
    license_plate_color: Int
    license_plate_number: String
    license_plate_type: Int
    muck_truck_id: bigint
    operating_route: String
    operating_state: Int
    operating_type: Int
    operating_vehicle_id: bigint
    owner: String
    quasi_driving_models: Int
    record_at: timestamp
    record_by: String
    remark_in: String
    remarks: String
    retirement_date: timestamp
    road_transport_license_number: String
    seats: Int
    terminal_id: String
    update_at: timestamp
    update_by: String
    update_time_in: timestamp
    use_nature: String
    vehicle_brand: Int
    vehicle_displacement: String
    vehicle_identification_number: String
    vehicle_info_change_id: String
    vehicle_maintenances: _jsonb
    vehicle_manager: String
    vehicle_manager_id_card: String
    vehicle_manager_phone: String
    vehicle_state: Int
    vehicle_type: Int
}

"""aggregate stddev on columns"""
type vehicle_info_change_log_stddev_fields {
    business_scope: Float
    car_rental_price: Float
    check_state: Float
    heavy: Float
    id: Float
    industry_category: Float
    insurance_company: Float
    license_plate_color: Float
    license_plate_type: Float
    muck_truck_id: Float
    operating_state: Float
    operating_type: Float
    operating_vehicle_id: Float
    quasi_driving_models: Float
    seats: Float
    vehicle_brand: Float
    vehicle_state: Float
    vehicle_type: Float
}

"""
order by stddev() on columns of table "vehicle_info_change_log"
"""
input vehicle_info_change_log_stddev_order_by {
    business_scope: order_by
    car_rental_price: order_by
    check_state: order_by
    heavy: order_by
    id: order_by
    industry_category: order_by
    insurance_company: order_by
    license_plate_color: order_by
    license_plate_type: order_by
    muck_truck_id: order_by
    operating_state: order_by
    operating_type: order_by
    operating_vehicle_id: order_by
    quasi_driving_models: order_by
    seats: order_by
    vehicle_brand: order_by
    vehicle_state: order_by
    vehicle_type: order_by
}

"""aggregate stddev_pop on columns"""
type vehicle_info_change_log_stddev_pop_fields {
    business_scope: Float
    car_rental_price: Float
    check_state: Float
    heavy: Float
    id: Float
    industry_category: Float
    insurance_company: Float
    license_plate_color: Float
    license_plate_type: Float
    muck_truck_id: Float
    operating_state: Float
    operating_type: Float
    operating_vehicle_id: Float
    quasi_driving_models: Float
    seats: Float
    vehicle_brand: Float
    vehicle_state: Float
    vehicle_type: Float
}

"""
order by stddev_pop() on columns of table "vehicle_info_change_log"
"""
input vehicle_info_change_log_stddev_pop_order_by {
    business_scope: order_by
    car_rental_price: order_by
    check_state: order_by
    heavy: order_by
    id: order_by
    industry_category: order_by
    insurance_company: order_by
    license_plate_color: order_by
    license_plate_type: order_by
    muck_truck_id: order_by
    operating_state: order_by
    operating_type: order_by
    operating_vehicle_id: order_by
    quasi_driving_models: order_by
    seats: order_by
    vehicle_brand: order_by
    vehicle_state: order_by
    vehicle_type: order_by
}

"""aggregate stddev_samp on columns"""
type vehicle_info_change_log_stddev_samp_fields {
    business_scope: Float
    car_rental_price: Float
    check_state: Float
    heavy: Float
    id: Float
    industry_category: Float
    insurance_company: Float
    license_plate_color: Float
    license_plate_type: Float
    muck_truck_id: Float
    operating_state: Float
    operating_type: Float
    operating_vehicle_id: Float
    quasi_driving_models: Float
    seats: Float
    vehicle_brand: Float
    vehicle_state: Float
    vehicle_type: Float
}

"""
order by stddev_samp() on columns of table "vehicle_info_change_log"
"""
input vehicle_info_change_log_stddev_samp_order_by {
    business_scope: order_by
    car_rental_price: order_by
    check_state: order_by
    heavy: order_by
    id: order_by
    industry_category: order_by
    insurance_company: order_by
    license_plate_color: order_by
    license_plate_type: order_by
    muck_truck_id: order_by
    operating_state: order_by
    operating_type: order_by
    operating_vehicle_id: order_by
    quasi_driving_models: order_by
    seats: order_by
    vehicle_brand: order_by
    vehicle_state: order_by
    vehicle_type: order_by
}

"""aggregate sum on columns"""
type vehicle_info_change_log_sum_fields {
    business_scope: Int
    car_rental_price: numeric
    check_state: Int
    heavy: numeric
    id: bigint
    industry_category: Int
    insurance_company: Int
    license_plate_color: Int
    license_plate_type: Int
    muck_truck_id: bigint
    operating_state: Int
    operating_type: Int
    operating_vehicle_id: bigint
    quasi_driving_models: Int
    seats: Int
    vehicle_brand: Int
    vehicle_state: Int
    vehicle_type: Int
}

"""
order by sum() on columns of table "vehicle_info_change_log"
"""
input vehicle_info_change_log_sum_order_by {
    business_scope: order_by
    car_rental_price: order_by
    check_state: order_by
    heavy: order_by
    id: order_by
    industry_category: order_by
    insurance_company: order_by
    license_plate_color: order_by
    license_plate_type: order_by
    muck_truck_id: order_by
    operating_state: order_by
    operating_type: order_by
    operating_vehicle_id: order_by
    quasi_driving_models: order_by
    seats: order_by
    vehicle_brand: order_by
    vehicle_state: order_by
    vehicle_type: order_by
}

"""
update columns of table "vehicle_info_change_log"
"""
enum vehicle_info_change_log_update_column {
    """column name"""
    business_scope

    """column name"""
    car_rental_price

    """column name"""
    check_state

    """column name"""
    create_at

    """column name"""
    create_by

    """column name"""
    delete_at

    """column name"""
    delete_by

    """column name"""
    department_id

    """column name"""
    driving_licensee_pic

    """column name"""
    enterprise_id

    """column name"""
    heavy

    """column name"""
    id

    """column name"""
    industry_category

    """column name"""
    inspection_date

    """column name"""
    insurance_company

    """column name"""
    insurance_date

    """column name"""
    is_active

    """column name"""
    is_apply_install_terminal

    """column name"""
    is_complete

    """column name"""
    is_delete

    """column name"""
    is_import

    """column name"""
    is_input

    """column name"""
    is_upload_province

    """column name"""
    license_plate_color

    """column name"""
    license_plate_number

    """column name"""
    license_plate_type

    """column name"""
    muck_truck_id

    """column name"""
    operating_route

    """column name"""
    operating_state

    """column name"""
    operating_type

    """column name"""
    operating_vehicle_id

    """column name"""
    owner

    """column name"""
    quasi_driving_models

    """column name"""
    record_at

    """column name"""
    record_by

    """column name"""
    remark_in

    """column name"""
    remarks

    """column name"""
    retirement_date

    """column name"""
    road_transport_license_number

    """column name"""
    seats

    """column name"""
    terminal_id

    """column name"""
    update_at

    """column name"""
    update_by

    """column name"""
    update_time_in

    """column name"""
    use_nature

    """column name"""
    vehicle_brand

    """column name"""
    vehicle_displacement

    """column name"""
    vehicle_identification_number

    """column name"""
    vehicle_info_change_id

    """column name"""
    vehicle_maintenances

    """column name"""
    vehicle_manager

    """column name"""
    vehicle_manager_id_card

    """column name"""
    vehicle_manager_phone

    """column name"""
    vehicle_state

    """column name"""
    vehicle_type
}

"""aggregate var_pop on columns"""
type vehicle_info_change_log_var_pop_fields {
    business_scope: Float
    car_rental_price: Float
    check_state: Float
    heavy: Float
    id: Float
    industry_category: Float
    insurance_company: Float
    license_plate_color: Float
    license_plate_type: Float
    muck_truck_id: Float
    operating_state: Float
    operating_type: Float
    operating_vehicle_id: Float
    quasi_driving_models: Float
    seats: Float
    vehicle_brand: Float
    vehicle_state: Float
    vehicle_type: Float
}

"""
order by var_pop() on columns of table "vehicle_info_change_log"
"""
input vehicle_info_change_log_var_pop_order_by {
    business_scope: order_by
    car_rental_price: order_by
    check_state: order_by
    heavy: order_by
    id: order_by
    industry_category: order_by
    insurance_company: order_by
    license_plate_color: order_by
    license_plate_type: order_by
    muck_truck_id: order_by
    operating_state: order_by
    operating_type: order_by
    operating_vehicle_id: order_by
    quasi_driving_models: order_by
    seats: order_by
    vehicle_brand: order_by
    vehicle_state: order_by
    vehicle_type: order_by
}

"""aggregate var_samp on columns"""
type vehicle_info_change_log_var_samp_fields {
    business_scope: Float
    car_rental_price: Float
    check_state: Float
    heavy: Float
    id: Float
    industry_category: Float
    insurance_company: Float
    license_plate_color: Float
    license_plate_type: Float
    muck_truck_id: Float
    operating_state: Float
    operating_type: Float
    operating_vehicle_id: Float
    quasi_driving_models: Float
    seats: Float
    vehicle_brand: Float
    vehicle_state: Float
    vehicle_type: Float
}

"""
order by var_samp() on columns of table "vehicle_info_change_log"
"""
input vehicle_info_change_log_var_samp_order_by {
    business_scope: order_by
    car_rental_price: order_by
    check_state: order_by
    heavy: order_by
    id: order_by
    industry_category: order_by
    insurance_company: order_by
    license_plate_color: order_by
    license_plate_type: order_by
    muck_truck_id: order_by
    operating_state: order_by
    operating_type: order_by
    operating_vehicle_id: order_by
    quasi_driving_models: order_by
    seats: order_by
    vehicle_brand: order_by
    vehicle_state: order_by
    vehicle_type: order_by
}

"""aggregate variance on columns"""
type vehicle_info_change_log_variance_fields {
    business_scope: Float
    car_rental_price: Float
    check_state: Float
    heavy: Float
    id: Float
    industry_category: Float
    insurance_company: Float
    license_plate_color: Float
    license_plate_type: Float
    muck_truck_id: Float
    operating_state: Float
    operating_type: Float
    operating_vehicle_id: Float
    quasi_driving_models: Float
    seats: Float
    vehicle_brand: Float
    vehicle_state: Float
    vehicle_type: Float
}

"""
order by variance() on columns of table "vehicle_info_change_log"
"""
input vehicle_info_change_log_variance_order_by {
    business_scope: order_by
    car_rental_price: order_by
    check_state: order_by
    heavy: order_by
    id: order_by
    industry_category: order_by
    insurance_company: order_by
    license_plate_color: order_by
    license_plate_type: order_by
    muck_truck_id: order_by
    operating_state: order_by
    operating_type: order_by
    operating_vehicle_id: order_by
    quasi_driving_models: order_by
    seats: order_by
    vehicle_brand: order_by
    vehicle_state: order_by
    vehicle_type: order_by
}

"""
unique or primary key constraints on table "vehicle_info"
"""
enum vehicle_info_constraint {
    """unique or primary key constraint"""
    vehicle_info_pkey
}

"""
input type for incrementing integer column in table "vehicle_info"
"""
input vehicle_info_inc_input {
    business_scope: Int
    car_rental_price: numeric
    check_state: Int
    heavy: numeric
    id: bigint
    industry_category: Int
    insurance_company: Int
    license_plate_color: Int
    license_plate_type: Int
    muck_truck_id: bigint
    operating_state: Int
    operating_type: Int
    operating_vehicle_id: bigint
    quasi_driving_models: Int
    seats: Int
    vehicle_brand: Int
    vehicle_state: Int
    vehicle_type: Int
}

"""
input type for inserting data into table "vehicle_info"
"""
input vehicle_info_insert_input {
    business_scope: Int
    car_rental_price: numeric
    check_state: Int
    create_at: timestamp
    create_by: String
    delete_at: timestamp
    delete_by: timestamp
    department_id: String
    driving_licensee_pic: String
    enterprise_id: String
    heavy: numeric
    id: bigint
    industry_category: Int
    inspection_date: timestamp
    insurance_company: Int
    insurance_date: timestamp
    is_active: Boolean
    is_apply_install_terminal: Boolean
    is_complete: Boolean
    is_delete: Boolean
    is_import: Boolean
    is_input: Boolean
    is_upload_province: Boolean
    license_plate_color: Int
    license_plate_number: String
    license_plate_type: Int
    muck_truck_id: bigint
    operating_route: String
    operating_state: Int
    operating_type: Int
    operating_vehicle_id: bigint
    owner: String
    quasi_driving_models: Int
    record_at: timestamp
    record_by: String
    remark_in: String
    remarks: String
    retirement_date: timestamp
    road_transport_license_number: String
    seats: Int
    terminal_id: String
    update_at: timestamp
    update_by: String
    update_time_in: timestamp
    use_nature: String
    vehicle_brand: Int
    vehicle_displacement: String
    vehicle_id: String
    vehicle_identification_number: String
    vehicle_maintenances: _jsonb
    vehicle_manager: String
    vehicle_manager_id_card: String
    vehicle_manager_phone: String
    vehicle_state: Int
    vehicle_type: Int
}

"""aggregate max on columns"""
type vehicle_info_max_fields {
    business_scope: Int
    car_rental_price: numeric
    check_state: Int
    create_at: timestamp
    create_by: String
    delete_at: timestamp
    delete_by: timestamp
    department_id: String
    driving_licensee_pic: String
    enterprise_id: String
    heavy: numeric
    id: bigint
    industry_category: Int
    inspection_date: timestamp
    insurance_company: Int
    insurance_date: timestamp
    license_plate_color: Int
    license_plate_number: String
    license_plate_type: Int
    muck_truck_id: bigint
    operating_route: String
    operating_state: Int
    operating_type: Int
    operating_vehicle_id: bigint
    owner: String
    quasi_driving_models: Int
    record_at: timestamp
    record_by: String
    remark_in: String
    remarks: String
    retirement_date: timestamp
    road_transport_license_number: String
    seats: Int
    terminal_id: String
    update_at: timestamp
    update_by: String
    update_time_in: timestamp
    use_nature: String
    vehicle_brand: Int
    vehicle_displacement: String
    vehicle_id: String
    vehicle_identification_number: String
    vehicle_manager: String
    vehicle_manager_id_card: String
    vehicle_manager_phone: String
    vehicle_state: Int
    vehicle_type: Int
}

"""
order by max() on columns of table "vehicle_info"
"""
input vehicle_info_max_order_by {
    business_scope: order_by
    car_rental_price: order_by
    check_state: order_by
    create_at: order_by
    create_by: order_by
    delete_at: order_by
    delete_by: order_by
    department_id: order_by
    driving_licensee_pic: order_by
    enterprise_id: order_by
    heavy: order_by
    id: order_by
    industry_category: order_by
    inspection_date: order_by
    insurance_company: order_by
    insurance_date: order_by
    license_plate_color: order_by
    license_plate_number: order_by
    license_plate_type: order_by
    muck_truck_id: order_by
    operating_route: order_by
    operating_state: order_by
    operating_type: order_by
    operating_vehicle_id: order_by
    owner: order_by
    quasi_driving_models: order_by
    record_at: order_by
    record_by: order_by
    remark_in: order_by
    remarks: order_by
    retirement_date: order_by
    road_transport_license_number: order_by
    seats: order_by
    terminal_id: order_by
    update_at: order_by
    update_by: order_by
    update_time_in: order_by
    use_nature: order_by
    vehicle_brand: order_by
    vehicle_displacement: order_by
    vehicle_id: order_by
    vehicle_identification_number: order_by
    vehicle_manager: order_by
    vehicle_manager_id_card: order_by
    vehicle_manager_phone: order_by
    vehicle_state: order_by
    vehicle_type: order_by
}

"""aggregate min on columns"""
type vehicle_info_min_fields {
    business_scope: Int
    car_rental_price: numeric
    check_state: Int
    create_at: timestamp
    create_by: String
    delete_at: timestamp
    delete_by: timestamp
    department_id: String
    driving_licensee_pic: String
    enterprise_id: String
    heavy: numeric
    id: bigint
    industry_category: Int
    inspection_date: timestamp
    insurance_company: Int
    insurance_date: timestamp
    license_plate_color: Int
    license_plate_number: String
    license_plate_type: Int
    muck_truck_id: bigint
    operating_route: String
    operating_state: Int
    operating_type: Int
    operating_vehicle_id: bigint
    owner: String
    quasi_driving_models: Int
    record_at: timestamp
    record_by: String
    remark_in: String
    remarks: String
    retirement_date: timestamp
    road_transport_license_number: String
    seats: Int
    terminal_id: String
    update_at: timestamp
    update_by: String
    update_time_in: timestamp
    use_nature: String
    vehicle_brand: Int
    vehicle_displacement: String
    vehicle_id: String
    vehicle_identification_number: String
    vehicle_manager: String
    vehicle_manager_id_card: String
    vehicle_manager_phone: String
    vehicle_state: Int
    vehicle_type: Int
}

"""
order by min() on columns of table "vehicle_info"
"""
input vehicle_info_min_order_by {
    business_scope: order_by
    car_rental_price: order_by
    check_state: order_by
    create_at: order_by
    create_by: order_by
    delete_at: order_by
    delete_by: order_by
    department_id: order_by
    driving_licensee_pic: order_by
    enterprise_id: order_by
    heavy: order_by
    id: order_by
    industry_category: order_by
    inspection_date: order_by
    insurance_company: order_by
    insurance_date: order_by
    license_plate_color: order_by
    license_plate_number: order_by
    license_plate_type: order_by
    muck_truck_id: order_by
    operating_route: order_by
    operating_state: order_by
    operating_type: order_by
    operating_vehicle_id: order_by
    owner: order_by
    quasi_driving_models: order_by
    record_at: order_by
    record_by: order_by
    remark_in: order_by
    remarks: order_by
    retirement_date: order_by
    road_transport_license_number: order_by
    seats: order_by
    terminal_id: order_by
    update_at: order_by
    update_by: order_by
    update_time_in: order_by
    use_nature: order_by
    vehicle_brand: order_by
    vehicle_displacement: order_by
    vehicle_id: order_by
    vehicle_identification_number: order_by
    vehicle_manager: order_by
    vehicle_manager_id_card: order_by
    vehicle_manager_phone: order_by
    vehicle_state: order_by
    vehicle_type: order_by
}

"""
response of any mutation on the table "vehicle_info"
"""
type vehicle_info_mutation_response {
    """number of affected rows by the mutation"""
    affected_rows: Int!

    """data of the affected rows by the mutation"""
    returning: [vehicle_info!]!
}

"""
input type for inserting object relation for remote table "vehicle_info"
"""
input vehicle_info_obj_rel_insert_input {
    data: vehicle_info_insert_input!
    on_conflict: vehicle_info_on_conflict
}

"""
on conflict condition type for table "vehicle_info"
"""
input vehicle_info_on_conflict {
    constraint: vehicle_info_constraint!
    update_columns: [vehicle_info_update_column!]!
    where: vehicle_info_bool_exp
}

"""
ordering options when selecting data from "vehicle_info"
"""
input vehicle_info_order_by {
    business_scope: order_by
    car_rental_price: order_by
    check_state: order_by
    create_at: order_by
    create_by: order_by
    delete_at: order_by
    delete_by: order_by
    department_id: order_by
    driving_licensee_pic: order_by
    enterprise_id: order_by
    heavy: order_by
    id: order_by
    industry_category: order_by
    inspection_date: order_by
    insurance_company: order_by
    insurance_date: order_by
    is_active: order_by
    is_apply_install_terminal: order_by
    is_complete: order_by
    is_delete: order_by
    is_import: order_by
    is_input: order_by
    is_upload_province: order_by
    license_plate_color: order_by
    license_plate_number: order_by
    license_plate_type: order_by
    muck_truck_id: order_by
    operating_route: order_by
    operating_state: order_by
    operating_type: order_by
    operating_vehicle_id: order_by
    owner: order_by
    quasi_driving_models: order_by
    record_at: order_by
    record_by: order_by
    remark_in: order_by
    remarks: order_by
    retirement_date: order_by
    road_transport_license_number: order_by
    seats: order_by
    terminal_id: order_by
    update_at: order_by
    update_by: order_by
    update_time_in: order_by
    use_nature: order_by
    vehicle_brand: order_by
    vehicle_displacement: order_by
    vehicle_id: order_by
    vehicle_identification_number: order_by
    vehicle_maintenances: order_by
    vehicle_manager: order_by
    vehicle_manager_id_card: order_by
    vehicle_manager_phone: order_by
    vehicle_state: order_by
    vehicle_type: order_by
}

"""
primary key columns input for table: "vehicle_info"
"""
input vehicle_info_pk_columns_input {
    """主键"""
    id: bigint!

    """车辆外部编码，由golang程序生成的xid，暴露到外部使用"""
    vehicle_id: String!
}

"""
select columns of table "vehicle_info"
"""
enum vehicle_info_select_column {
    """column name"""
    business_scope

    """column name"""
    car_rental_price

    """column name"""
    check_state

    """column name"""
    create_at

    """column name"""
    create_by

    """column name"""
    delete_at

    """column name"""
    delete_by

    """column name"""
    department_id

    """column name"""
    driving_licensee_pic

    """column name"""
    enterprise_id

    """column name"""
    heavy

    """column name"""
    id

    """column name"""
    industry_category

    """column name"""
    inspection_date

    """column name"""
    insurance_company

    """column name"""
    insurance_date

    """column name"""
    is_active

    """column name"""
    is_apply_install_terminal

    """column name"""
    is_complete

    """column name"""
    is_delete

    """column name"""
    is_import

    """column name"""
    is_input

    """column name"""
    is_upload_province

    """column name"""
    license_plate_color

    """column name"""
    license_plate_number

    """column name"""
    license_plate_type

    """column name"""
    muck_truck_id

    """column name"""
    operating_route

    """column name"""
    operating_state

    """column name"""
    operating_type

    """column name"""
    operating_vehicle_id

    """column name"""
    owner

    """column name"""
    quasi_driving_models

    """column name"""
    record_at

    """column name"""
    record_by

    """column name"""
    remark_in

    """column name"""
    remarks

    """column name"""
    retirement_date

    """column name"""
    road_transport_license_number

    """column name"""
    seats

    """column name"""
    terminal_id

    """column name"""
    update_at

    """column name"""
    update_by

    """column name"""
    update_time_in

    """column name"""
    use_nature

    """column name"""
    vehicle_brand

    """column name"""
    vehicle_displacement

    """column name"""
    vehicle_id

    """column name"""
    vehicle_identification_number

    """column name"""
    vehicle_maintenances

    """column name"""
    vehicle_manager

    """column name"""
    vehicle_manager_id_card

    """column name"""
    vehicle_manager_phone

    """column name"""
    vehicle_state

    """column name"""
    vehicle_type
}

"""
input type for updating data in table "vehicle_info"
"""
input vehicle_info_set_input {
    business_scope: Int
    car_rental_price: numeric
    check_state: Int
    create_at: timestamp
    create_by: String
    delete_at: timestamp
    delete_by: timestamp
    department_id: String
    driving_licensee_pic: String
    enterprise_id: String
    heavy: numeric
    id: bigint
    industry_category: Int
    inspection_date: timestamp
    insurance_company: Int
    insurance_date: timestamp
    is_active: Boolean
    is_apply_install_terminal: Boolean
    is_complete: Boolean
    is_delete: Boolean
    is_import: Boolean
    is_input: Boolean
    is_upload_province: Boolean
    license_plate_color: Int
    license_plate_number: String
    license_plate_type: Int
    muck_truck_id: bigint
    operating_route: String
    operating_state: Int
    operating_type: Int
    operating_vehicle_id: bigint
    owner: String
    quasi_driving_models: Int
    record_at: timestamp
    record_by: String
    remark_in: String
    remarks: String
    retirement_date: timestamp
    road_transport_license_number: String
    seats: Int
    terminal_id: String
    update_at: timestamp
    update_by: String
    update_time_in: timestamp
    use_nature: String
    vehicle_brand: Int
    vehicle_displacement: String
    vehicle_id: String
    vehicle_identification_number: String
    vehicle_maintenances: _jsonb
    vehicle_manager: String
    vehicle_manager_id_card: String
    vehicle_manager_phone: String
    vehicle_state: Int
    vehicle_type: Int
}

"""aggregate stddev on columns"""
type vehicle_info_stddev_fields {
    business_scope: Float
    car_rental_price: Float
    check_state: Float
    heavy: Float
    id: Float
    industry_category: Float
    insurance_company: Float
    license_plate_color: Float
    license_plate_type: Float
    muck_truck_id: Float
    operating_state: Float
    operating_type: Float
    operating_vehicle_id: Float
    quasi_driving_models: Float
    seats: Float
    vehicle_brand: Float
    vehicle_state: Float
    vehicle_type: Float
}

"""
order by stddev() on columns of table "vehicle_info"
"""
input vehicle_info_stddev_order_by {
    business_scope: order_by
    car_rental_price: order_by
    check_state: order_by
    heavy: order_by
    id: order_by
    industry_category: order_by
    insurance_company: order_by
    license_plate_color: order_by
    license_plate_type: order_by
    muck_truck_id: order_by
    operating_state: order_by
    operating_type: order_by
    operating_vehicle_id: order_by
    quasi_driving_models: order_by
    seats: order_by
    vehicle_brand: order_by
    vehicle_state: order_by
    vehicle_type: order_by
}

"""aggregate stddev_pop on columns"""
type vehicle_info_stddev_pop_fields {
    business_scope: Float
    car_rental_price: Float
    check_state: Float
    heavy: Float
    id: Float
    industry_category: Float
    insurance_company: Float
    license_plate_color: Float
    license_plate_type: Float
    muck_truck_id: Float
    operating_state: Float
    operating_type: Float
    operating_vehicle_id: Float
    quasi_driving_models: Float
    seats: Float
    vehicle_brand: Float
    vehicle_state: Float
    vehicle_type: Float
}

"""
order by stddev_pop() on columns of table "vehicle_info"
"""
input vehicle_info_stddev_pop_order_by {
    business_scope: order_by
    car_rental_price: order_by
    check_state: order_by
    heavy: order_by
    id: order_by
    industry_category: order_by
    insurance_company: order_by
    license_plate_color: order_by
    license_plate_type: order_by
    muck_truck_id: order_by
    operating_state: order_by
    operating_type: order_by
    operating_vehicle_id: order_by
    quasi_driving_models: order_by
    seats: order_by
    vehicle_brand: order_by
    vehicle_state: order_by
    vehicle_type: order_by
}

"""aggregate stddev_samp on columns"""
type vehicle_info_stddev_samp_fields {
    business_scope: Float
    car_rental_price: Float
    check_state: Float
    heavy: Float
    id: Float
    industry_category: Float
    insurance_company: Float
    license_plate_color: Float
    license_plate_type: Float
    muck_truck_id: Float
    operating_state: Float
    operating_type: Float
    operating_vehicle_id: Float
    quasi_driving_models: Float
    seats: Float
    vehicle_brand: Float
    vehicle_state: Float
    vehicle_type: Float
}

"""
order by stddev_samp() on columns of table "vehicle_info"
"""
input vehicle_info_stddev_samp_order_by {
    business_scope: order_by
    car_rental_price: order_by
    check_state: order_by
    heavy: order_by
    id: order_by
    industry_category: order_by
    insurance_company: order_by
    license_plate_color: order_by
    license_plate_type: order_by
    muck_truck_id: order_by
    operating_state: order_by
    operating_type: order_by
    operating_vehicle_id: order_by
    quasi_driving_models: order_by
    seats: order_by
    vehicle_brand: order_by
    vehicle_state: order_by
    vehicle_type: order_by
}

"""aggregate sum on columns"""
type vehicle_info_sum_fields {
    business_scope: Int
    car_rental_price: numeric
    check_state: Int
    heavy: numeric
    id: bigint
    industry_category: Int
    insurance_company: Int
    license_plate_color: Int
    license_plate_type: Int
    muck_truck_id: bigint
    operating_state: Int
    operating_type: Int
    operating_vehicle_id: bigint
    quasi_driving_models: Int
    seats: Int
    vehicle_brand: Int
    vehicle_state: Int
    vehicle_type: Int
}

"""
order by sum() on columns of table "vehicle_info"
"""
input vehicle_info_sum_order_by {
    business_scope: order_by
    car_rental_price: order_by
    check_state: order_by
    heavy: order_by
    id: order_by
    industry_category: order_by
    insurance_company: order_by
    license_plate_color: order_by
    license_plate_type: order_by
    muck_truck_id: order_by
    operating_state: order_by
    operating_type: order_by
    operating_vehicle_id: order_by
    quasi_driving_models: order_by
    seats: order_by
    vehicle_brand: order_by
    vehicle_state: order_by
    vehicle_type: order_by
}

"""
update columns of table "vehicle_info"
"""
enum vehicle_info_update_column {
    """column name"""
    business_scope

    """column name"""
    car_rental_price

    """column name"""
    check_state

    """column name"""
    create_at

    """column name"""
    create_by

    """column name"""
    delete_at

    """column name"""
    delete_by

    """column name"""
    department_id

    """column name"""
    driving_licensee_pic

    """column name"""
    enterprise_id

    """column name"""
    heavy

    """column name"""
    id

    """column name"""
    industry_category

    """column name"""
    inspection_date

    """column name"""
    insurance_company

    """column name"""
    insurance_date

    """column name"""
    is_active

    """column name"""
    is_apply_install_terminal

    """column name"""
    is_complete

    """column name"""
    is_delete

    """column name"""
    is_import

    """column name"""
    is_input

    """column name"""
    is_upload_province

    """column name"""
    license_plate_color

    """column name"""
    license_plate_number

    """column name"""
    license_plate_type

    """column name"""
    muck_truck_id

    """column name"""
    operating_route

    """column name"""
    operating_state

    """column name"""
    operating_type

    """column name"""
    operating_vehicle_id

    """column name"""
    owner

    """column name"""
    quasi_driving_models

    """column name"""
    record_at

    """column name"""
    record_by

    """column name"""
    remark_in

    """column name"""
    remarks

    """column name"""
    retirement_date

    """column name"""
    road_transport_license_number

    """column name"""
    seats

    """column name"""
    terminal_id

    """column name"""
    update_at

    """column name"""
    update_by

    """column name"""
    update_time_in

    """column name"""
    use_nature

    """column name"""
    vehicle_brand

    """column name"""
    vehicle_displacement

    """column name"""
    vehicle_id

    """column name"""
    vehicle_identification_number

    """column name"""
    vehicle_maintenances

    """column name"""
    vehicle_manager

    """column name"""
    vehicle_manager_id_card

    """column name"""
    vehicle_manager_phone

    """column name"""
    vehicle_state

    """column name"""
    vehicle_type
}

"""aggregate var_pop on columns"""
type vehicle_info_var_pop_fields {
    business_scope: Float
    car_rental_price: Float
    check_state: Float
    heavy: Float
    id: Float
    industry_category: Float
    insurance_company: Float
    license_plate_color: Float
    license_plate_type: Float
    muck_truck_id: Float
    operating_state: Float
    operating_type: Float
    operating_vehicle_id: Float
    quasi_driving_models: Float
    seats: Float
    vehicle_brand: Float
    vehicle_state: Float
    vehicle_type: Float
}

"""
order by var_pop() on columns of table "vehicle_info"
"""
input vehicle_info_var_pop_order_by {
    business_scope: order_by
    car_rental_price: order_by
    check_state: order_by
    heavy: order_by
    id: order_by
    industry_category: order_by
    insurance_company: order_by
    license_plate_color: order_by
    license_plate_type: order_by
    muck_truck_id: order_by
    operating_state: order_by
    operating_type: order_by
    operating_vehicle_id: order_by
    quasi_driving_models: order_by
    seats: order_by
    vehicle_brand: order_by
    vehicle_state: order_by
    vehicle_type: order_by
}

"""aggregate var_samp on columns"""
type vehicle_info_var_samp_fields {
    business_scope: Float
    car_rental_price: Float
    check_state: Float
    heavy: Float
    id: Float
    industry_category: Float
    insurance_company: Float
    license_plate_color: Float
    license_plate_type: Float
    muck_truck_id: Float
    operating_state: Float
    operating_type: Float
    operating_vehicle_id: Float
    quasi_driving_models: Float
    seats: Float
    vehicle_brand: Float
    vehicle_state: Float
    vehicle_type: Float
}

"""
order by var_samp() on columns of table "vehicle_info"
"""
input vehicle_info_var_samp_order_by {
    business_scope: order_by
    car_rental_price: order_by
    check_state: order_by
    heavy: order_by
    id: order_by
    industry_category: order_by
    insurance_company: order_by
    license_plate_color: order_by
    license_plate_type: order_by
    muck_truck_id: order_by
    operating_state: order_by
    operating_type: order_by
    operating_vehicle_id: order_by
    quasi_driving_models: order_by
    seats: order_by
    vehicle_brand: order_by
    vehicle_state: order_by
    vehicle_type: order_by
}

"""aggregate variance on columns"""
type vehicle_info_variance_fields {
    business_scope: Float
    car_rental_price: Float
    check_state: Float
    heavy: Float
    id: Float
    industry_category: Float
    insurance_company: Float
    license_plate_color: Float
    license_plate_type: Float
    muck_truck_id: Float
    operating_state: Float
    operating_type: Float
    operating_vehicle_id: Float
    quasi_driving_models: Float
    seats: Float
    vehicle_brand: Float
    vehicle_state: Float
    vehicle_type: Float
}

"""
order by variance() on columns of table "vehicle_info"
"""
input vehicle_info_variance_order_by {
    business_scope: order_by
    car_rental_price: order_by
    check_state: order_by
    heavy: order_by
    id: order_by
    industry_category: order_by
    insurance_company: order_by
    license_plate_color: order_by
    license_plate_type: order_by
    muck_truck_id: order_by
    operating_state: order_by
    operating_type: order_by
    operating_vehicle_id: order_by
    quasi_driving_models: order_by
    seats: order_by
    vehicle_brand: order_by
    vehicle_state: order_by
    vehicle_type: order_by
}

"""
车辆监控图片表


columns and relationships of "vehicle_supervision_photo"

"""
type vehicle_supervision_photo {
    """终端IMEI"""
    IMEI: String

    """摄像头ID字典"""
    camera_id: Int

    """驾驶员id"""
    driver_id: String

    """所在企业id"""
    enterprise_id: String

    """主键"""
    id: bigint!

    """监控图片地址"""
    monitoring_pic_address: String

    """监控图片名称"""
    monitoring_pic_name: String

    """监控图片上传时间"""
    monitoring_pic_upload_time: timestamptz

    """拍照条件字典"""
    photo_condition: String

    """SIM卡号"""
    sim_number: String

    """车辆监控图片外部编码，由golang程序生成的xid，暴露到外部使用"""
    supervision_photo_id: String!

    """终端上报时间"""
    update_time: timestamptz

    """vehicle_info表vehicle_id"""
    vehicle_id: String!
}

"""
aggregated selection of "vehicle_supervision_photo"
"""
type vehicle_supervision_photo_aggregate {
    aggregate: vehicle_supervision_photo_aggregate_fields
    nodes: [vehicle_supervision_photo!]!
}

"""
aggregate fields of "vehicle_supervision_photo"
"""
type vehicle_supervision_photo_aggregate_fields {
    avg: vehicle_supervision_photo_avg_fields
    count(columns: [vehicle_supervision_photo_select_column!], distinct: Boolean): Int
    max: vehicle_supervision_photo_max_fields
    min: vehicle_supervision_photo_min_fields
    stddev: vehicle_supervision_photo_stddev_fields
    stddev_pop: vehicle_supervision_photo_stddev_pop_fields
    stddev_samp: vehicle_supervision_photo_stddev_samp_fields
    sum: vehicle_supervision_photo_sum_fields
    var_pop: vehicle_supervision_photo_var_pop_fields
    var_samp: vehicle_supervision_photo_var_samp_fields
    variance: vehicle_supervision_photo_variance_fields
}

"""
order by aggregate values of table "vehicle_supervision_photo"
"""
input vehicle_supervision_photo_aggregate_order_by {
    avg: vehicle_supervision_photo_avg_order_by
    count: order_by
    max: vehicle_supervision_photo_max_order_by
    min: vehicle_supervision_photo_min_order_by
    stddev: vehicle_supervision_photo_stddev_order_by
    stddev_pop: vehicle_supervision_photo_stddev_pop_order_by
    stddev_samp: vehicle_supervision_photo_stddev_samp_order_by
    sum: vehicle_supervision_photo_sum_order_by
    var_pop: vehicle_supervision_photo_var_pop_order_by
    var_samp: vehicle_supervision_photo_var_samp_order_by
    variance: vehicle_supervision_photo_variance_order_by
}

"""
input type for inserting array relation for remote table "vehicle_supervision_photo"
"""
input vehicle_supervision_photo_arr_rel_insert_input {
    data: [vehicle_supervision_photo_insert_input!]!
    on_conflict: vehicle_supervision_photo_on_conflict
}

"""aggregate avg on columns"""
type vehicle_supervision_photo_avg_fields {
    camera_id: Float
    id: Float
}

"""
order by avg() on columns of table "vehicle_supervision_photo"
"""
input vehicle_supervision_photo_avg_order_by {
    camera_id: order_by
    id: order_by
}

"""
Boolean expression to filter rows from the table "vehicle_supervision_photo". All fields are combined with a logical 'AND'.
"""
input vehicle_supervision_photo_bool_exp {
    IMEI: String_comparison_exp
    _and: [vehicle_supervision_photo_bool_exp]
    _not: vehicle_supervision_photo_bool_exp
    _or: [vehicle_supervision_photo_bool_exp]
    camera_id: Int_comparison_exp
    driver_id: String_comparison_exp
    enterprise_id: String_comparison_exp
    id: bigint_comparison_exp
    monitoring_pic_address: String_comparison_exp
    monitoring_pic_name: String_comparison_exp
    monitoring_pic_upload_time: timestamptz_comparison_exp
    photo_condition: String_comparison_exp
    sim_number: String_comparison_exp
    supervision_photo_id: String_comparison_exp
    update_time: timestamptz_comparison_exp
    vehicle_id: String_comparison_exp
}

"""
unique or primary key constraints on table "vehicle_supervision_photo"
"""
enum vehicle_supervision_photo_constraint {
    """unique or primary key constraint"""
    vehicle_supervision_photo_pkey
}

"""
input type for incrementing integer column in table "vehicle_supervision_photo"
"""
input vehicle_supervision_photo_inc_input {
    camera_id: Int
    id: bigint
}

"""
input type for inserting data into table "vehicle_supervision_photo"
"""
input vehicle_supervision_photo_insert_input {
    IMEI: String
    camera_id: Int
    driver_id: String
    enterprise_id: String
    id: bigint
    monitoring_pic_address: String
    monitoring_pic_name: String
    monitoring_pic_upload_time: timestamptz
    photo_condition: String
    sim_number: String
    supervision_photo_id: String
    update_time: timestamptz
    vehicle_id: String
}

"""aggregate max on columns"""
type vehicle_supervision_photo_max_fields {
    IMEI: String
    camera_id: Int
    driver_id: String
    enterprise_id: String
    id: bigint
    monitoring_pic_address: String
    monitoring_pic_name: String
    monitoring_pic_upload_time: timestamptz
    photo_condition: String
    sim_number: String
    supervision_photo_id: String
    update_time: timestamptz
    vehicle_id: String
}

"""
order by max() on columns of table "vehicle_supervision_photo"
"""
input vehicle_supervision_photo_max_order_by {
    IMEI: order_by
    camera_id: order_by
    driver_id: order_by
    enterprise_id: order_by
    id: order_by
    monitoring_pic_address: order_by
    monitoring_pic_name: order_by
    monitoring_pic_upload_time: order_by
    photo_condition: order_by
    sim_number: order_by
    supervision_photo_id: order_by
    update_time: order_by
    vehicle_id: order_by
}

"""aggregate min on columns"""
type vehicle_supervision_photo_min_fields {
    IMEI: String
    camera_id: Int
    driver_id: String
    enterprise_id: String
    id: bigint
    monitoring_pic_address: String
    monitoring_pic_name: String
    monitoring_pic_upload_time: timestamptz
    photo_condition: String
    sim_number: String
    supervision_photo_id: String
    update_time: timestamptz
    vehicle_id: String
}

"""
order by min() on columns of table "vehicle_supervision_photo"
"""
input vehicle_supervision_photo_min_order_by {
    IMEI: order_by
    camera_id: order_by
    driver_id: order_by
    enterprise_id: order_by
    id: order_by
    monitoring_pic_address: order_by
    monitoring_pic_name: order_by
    monitoring_pic_upload_time: order_by
    photo_condition: order_by
    sim_number: order_by
    supervision_photo_id: order_by
    update_time: order_by
    vehicle_id: order_by
}

"""
response of any mutation on the table "vehicle_supervision_photo"
"""
type vehicle_supervision_photo_mutation_response {
    """number of affected rows by the mutation"""
    affected_rows: Int!

    """data of the affected rows by the mutation"""
    returning: [vehicle_supervision_photo!]!
}

"""
input type for inserting object relation for remote table "vehicle_supervision_photo"
"""
input vehicle_supervision_photo_obj_rel_insert_input {
    data: vehicle_supervision_photo_insert_input!
    on_conflict: vehicle_supervision_photo_on_conflict
}

"""
on conflict condition type for table "vehicle_supervision_photo"
"""
input vehicle_supervision_photo_on_conflict {
    constraint: vehicle_supervision_photo_constraint!
    update_columns: [vehicle_supervision_photo_update_column!]!
    where: vehicle_supervision_photo_bool_exp
}

"""
ordering options when selecting data from "vehicle_supervision_photo"
"""
input vehicle_supervision_photo_order_by {
    IMEI: order_by
    camera_id: order_by
    driver_id: order_by
    enterprise_id: order_by
    id: order_by
    monitoring_pic_address: order_by
    monitoring_pic_name: order_by
    monitoring_pic_upload_time: order_by
    photo_condition: order_by
    sim_number: order_by
    supervision_photo_id: order_by
    update_time: order_by
    vehicle_id: order_by
}

"""
primary key columns input for table: "vehicle_supervision_photo"
"""
input vehicle_supervision_photo_pk_columns_input {
    """主键"""
    id: bigint!

    """车辆监控图片外部编码，由golang程序生成的xid，暴露到外部使用"""
    supervision_photo_id: String!
}

"""
select columns of table "vehicle_supervision_photo"
"""
enum vehicle_supervision_photo_select_column {
    """column name"""
    IMEI

    """column name"""
    camera_id

    """column name"""
    driver_id

    """column name"""
    enterprise_id

    """column name"""
    id

    """column name"""
    monitoring_pic_address

    """column name"""
    monitoring_pic_name

    """column name"""
    monitoring_pic_upload_time

    """column name"""
    photo_condition

    """column name"""
    sim_number

    """column name"""
    supervision_photo_id

    """column name"""
    update_time

    """column name"""
    vehicle_id
}

"""
input type for updating data in table "vehicle_supervision_photo"
"""
input vehicle_supervision_photo_set_input {
    IMEI: String
    camera_id: Int
    driver_id: String
    enterprise_id: String
    id: bigint
    monitoring_pic_address: String
    monitoring_pic_name: String
    monitoring_pic_upload_time: timestamptz
    photo_condition: String
    sim_number: String
    supervision_photo_id: String
    update_time: timestamptz
    vehicle_id: String
}

"""aggregate stddev on columns"""
type vehicle_supervision_photo_stddev_fields {
    camera_id: Float
    id: Float
}

"""
order by stddev() on columns of table "vehicle_supervision_photo"
"""
input vehicle_supervision_photo_stddev_order_by {
    camera_id: order_by
    id: order_by
}

"""aggregate stddev_pop on columns"""
type vehicle_supervision_photo_stddev_pop_fields {
    camera_id: Float
    id: Float
}

"""
order by stddev_pop() on columns of table "vehicle_supervision_photo"
"""
input vehicle_supervision_photo_stddev_pop_order_by {
    camera_id: order_by
    id: order_by
}

"""aggregate stddev_samp on columns"""
type vehicle_supervision_photo_stddev_samp_fields {
    camera_id: Float
    id: Float
}

"""
order by stddev_samp() on columns of table "vehicle_supervision_photo"
"""
input vehicle_supervision_photo_stddev_samp_order_by {
    camera_id: order_by
    id: order_by
}

"""aggregate sum on columns"""
type vehicle_supervision_photo_sum_fields {
    camera_id: Int
    id: bigint
}

"""
order by sum() on columns of table "vehicle_supervision_photo"
"""
input vehicle_supervision_photo_sum_order_by {
    camera_id: order_by
    id: order_by
}

"""
update columns of table "vehicle_supervision_photo"
"""
enum vehicle_supervision_photo_update_column {
    """column name"""
    IMEI

    """column name"""
    camera_id

    """column name"""
    driver_id

    """column name"""
    enterprise_id

    """column name"""
    id

    """column name"""
    monitoring_pic_address

    """column name"""
    monitoring_pic_name

    """column name"""
    monitoring_pic_upload_time

    """column name"""
    photo_condition

    """column name"""
    sim_number

    """column name"""
    supervision_photo_id

    """column name"""
    update_time

    """column name"""
    vehicle_id
}

"""aggregate var_pop on columns"""
type vehicle_supervision_photo_var_pop_fields {
    camera_id: Float
    id: Float
}

"""
order by var_pop() on columns of table "vehicle_supervision_photo"
"""
input vehicle_supervision_photo_var_pop_order_by {
    camera_id: order_by
    id: order_by
}

"""aggregate var_samp on columns"""
type vehicle_supervision_photo_var_samp_fields {
    camera_id: Float
    id: Float
}

"""
order by var_samp() on columns of table "vehicle_supervision_photo"
"""
input vehicle_supervision_photo_var_samp_order_by {
    camera_id: order_by
    id: order_by
}

"""aggregate variance on columns"""
type vehicle_supervision_photo_variance_fields {
    camera_id: Float
    id: Float
}

"""
order by variance() on columns of table "vehicle_supervision_photo"
"""
input vehicle_supervision_photo_variance_order_by {
    camera_id: order_by
    id: order_by
}

