

"""
车主信息表


columns and relationships of "owner_info"

"""
type owner_info {
    """联系地址"""
    address: String

    """代理商"""
    agent: String

    """固定电话"""
    cellphone: String

    """创建时间"""
    created_at: timestamptz!

    """创建人"""
    created_by: String!

    """删除时间"""
    deleted_at: timestamptz

    """删除人"""
    deleted_by: String

    """
    department 部门信息表

    """
    department_id: String

    """邮箱地址"""
    email: String

    """证件过期日期"""
    expiry_date: timestamptz

    """主键"""
    id: bigint!

    """身份证号"""
    id_number: String

    """是否删除"""
    is_delete: Boolean

    """车主姓名"""
    name: String

    """运营商"""
    operator: String

    """
    车主信息外部编码，由golang程序生成的xid，暴露到外部使用
    联合主键
    """
    owner_id: String!

    """备注"""
    remarks: String

    """
    车主性别(性别字典)

    """
    sex: Int

    """手机号码"""
    telephone: String

    """修改时间"""
    updated_at: timestamptz

    """修改人"""
    updated_by: String
}

"""
aggregated selection of "owner_info"
"""
type owner_info_aggregate {
    aggregate: owner_info_aggregate_fields
    nodes: [owner_info!]!
}

"""
aggregate fields of "owner_info"
"""
type owner_info_aggregate_fields {
    avg: owner_info_avg_fields
    count(columns: [owner_info_select_column!], distinct: Boolean): Int
    max: owner_info_max_fields
    min: owner_info_min_fields
    stddev: owner_info_stddev_fields
    stddev_pop: owner_info_stddev_pop_fields
    stddev_samp: owner_info_stddev_samp_fields
    sum: owner_info_sum_fields
    var_pop: owner_info_var_pop_fields
    var_samp: owner_info_var_samp_fields
    variance: owner_info_variance_fields
}

"""
order by aggregate values of table "owner_info"
"""
input owner_info_aggregate_order_by {
    avg: owner_info_avg_order_by
    count: order_by
    max: owner_info_max_order_by
    min: owner_info_min_order_by
    stddev: owner_info_stddev_order_by
    stddev_pop: owner_info_stddev_pop_order_by
    stddev_samp: owner_info_stddev_samp_order_by
    sum: owner_info_sum_order_by
    var_pop: owner_info_var_pop_order_by
    var_samp: owner_info_var_samp_order_by
    variance: owner_info_variance_order_by
}

"""
input type for inserting array relation for remote table "owner_info"
"""
input owner_info_arr_rel_insert_input {
    data: [owner_info_insert_input!]!
    on_conflict: owner_info_on_conflict
}

"""aggregate avg on columns"""
type owner_info_avg_fields {
    id: Float
    sex: Float
}

"""
order by avg() on columns of table "owner_info"
"""
input owner_info_avg_order_by {
    id: order_by
    sex: order_by
}

"""
Boolean expression to filter rows from the table "owner_info". All fields are combined with a logical 'AND'.
"""
input owner_info_bool_exp {
    _and: [owner_info_bool_exp]
    _not: owner_info_bool_exp
    _or: [owner_info_bool_exp]
    address: String_comparison_exp
    agent: String_comparison_exp
    cellphone: String_comparison_exp
    created_at: timestamptz_comparison_exp
    created_by: String_comparison_exp
    deleted_at: timestamptz_comparison_exp
    deleted_by: String_comparison_exp
    department_id: String_comparison_exp
    email: String_comparison_exp
    expiry_date: timestamptz_comparison_exp
    id: bigint_comparison_exp
    id_number: String_comparison_exp
    is_delete: Boolean_comparison_exp
    name: String_comparison_exp
    operator: String_comparison_exp
    owner_id: String_comparison_exp
    remarks: String_comparison_exp
    sex: Int_comparison_exp
    telephone: String_comparison_exp
    updated_at: timestamptz_comparison_exp
    updated_by: String_comparison_exp
}

"""
unique or primary key constraints on table "owner_info"
"""
enum owner_info_constraint {
    """unique or primary key constraint"""
    owner_info_pkey
}

"""
input type for incrementing integer column in table "owner_info"
"""
input owner_info_inc_input {
    id: bigint
    sex: Int
}

"""
input type for inserting data into table "owner_info"
"""
input owner_info_insert_input {
    address: String
    agent: String
    cellphone: String
    created_at: timestamptz
    created_by: String
    deleted_at: timestamptz
    deleted_by: String
    department_id: String
    email: String
    expiry_date: timestamptz
    id: bigint
    id_number: String
    is_delete: Boolean
    name: String
    operator: String
    owner_id: String
    remarks: String
    sex: Int
    telephone: String
    updated_at: timestamptz
    updated_by: String
}

"""aggregate max on columns"""
type owner_info_max_fields {
    address: String
    agent: String
    cellphone: String
    created_at: timestamptz
    created_by: String
    deleted_at: timestamptz
    deleted_by: String
    department_id: String
    email: String
    expiry_date: timestamptz
    id: bigint
    id_number: String
    name: String
    operator: String
    owner_id: String
    remarks: String
    sex: Int
    telephone: String
    updated_at: timestamptz
    updated_by: String
}

"""
order by max() on columns of table "owner_info"
"""
input owner_info_max_order_by {
    address: order_by
    agent: order_by
    cellphone: order_by
    created_at: order_by
    created_by: order_by
    deleted_at: order_by
    deleted_by: order_by
    department_id: order_by
    email: order_by
    expiry_date: order_by
    id: order_by
    id_number: order_by
    name: order_by
    operator: order_by
    owner_id: order_by
    remarks: order_by
    sex: order_by
    telephone: order_by
    updated_at: order_by
    updated_by: order_by
}

"""aggregate min on columns"""
type owner_info_min_fields {
    address: String
    agent: String
    cellphone: String
    created_at: timestamptz
    created_by: String
    deleted_at: timestamptz
    deleted_by: String
    department_id: String
    email: String
    expiry_date: timestamptz
    id: bigint
    id_number: String
    name: String
    operator: String
    owner_id: String
    remarks: String
    sex: Int
    telephone: String
    updated_at: timestamptz
    updated_by: String
}

"""
order by min() on columns of table "owner_info"
"""
input owner_info_min_order_by {
    address: order_by
    agent: order_by
    cellphone: order_by
    created_at: order_by
    created_by: order_by
    deleted_at: order_by
    deleted_by: order_by
    department_id: order_by
    email: order_by
    expiry_date: order_by
    id: order_by
    id_number: order_by
    name: order_by
    operator: order_by
    owner_id: order_by
    remarks: order_by
    sex: order_by
    telephone: order_by
    updated_at: order_by
    updated_by: order_by
}

"""
response of any mutation on the table "owner_info"
"""
type owner_info_mutation_response {
    """number of affected rows by the mutation"""
    affected_rows: Int!

    """data of the affected rows by the mutation"""
    returning: [owner_info!]!
}

"""
input type for inserting object relation for remote table "owner_info"
"""
input owner_info_obj_rel_insert_input {
    data: owner_info_insert_input!
    on_conflict: owner_info_on_conflict
}

"""
on conflict condition type for table "owner_info"
"""
input owner_info_on_conflict {
    constraint: owner_info_constraint!
    update_columns: [owner_info_update_column!]!
    where: owner_info_bool_exp
}

"""
ordering options when selecting data from "owner_info"
"""
input owner_info_order_by {
    address: order_by
    agent: order_by
    cellphone: order_by
    created_at: order_by
    created_by: order_by
    deleted_at: order_by
    deleted_by: order_by
    department_id: order_by
    email: order_by
    expiry_date: order_by
    id: order_by
    id_number: order_by
    is_delete: order_by
    name: order_by
    operator: order_by
    owner_id: order_by
    remarks: order_by
    sex: order_by
    telephone: order_by
    updated_at: order_by
    updated_by: order_by
}

"""
primary key columns input for table: "owner_info"
"""
input owner_info_pk_columns_input {
    """主键"""
    id: bigint!
}

"""
select columns of table "owner_info"
"""
enum owner_info_select_column {
    """column name"""
    address

    """column name"""
    agent

    """column name"""
    cellphone

    """column name"""
    created_at

    """column name"""
    created_by

    """column name"""
    deleted_at

    """column name"""
    deleted_by

    """column name"""
    department_id

    """column name"""
    email

    """column name"""
    expiry_date

    """column name"""
    id

    """column name"""
    id_number

    """column name"""
    is_delete

    """column name"""
    name

    """column name"""
    operator

    """column name"""
    owner_id

    """column name"""
    remarks

    """column name"""
    sex

    """column name"""
    telephone

    """column name"""
    updated_at

    """column name"""
    updated_by
}

"""
input type for updating data in table "owner_info"
"""
input owner_info_set_input {
    address: String
    agent: String
    cellphone: String
    created_at: timestamptz
    created_by: String
    deleted_at: timestamptz
    deleted_by: String
    department_id: String
    email: String
    expiry_date: timestamptz
    id: bigint
    id_number: String
    is_delete: Boolean
    name: String
    operator: String
    owner_id: String
    remarks: String
    sex: Int
    telephone: String
    updated_at: timestamptz
    updated_by: String
}

"""aggregate stddev on columns"""
type owner_info_stddev_fields {
    id: Float
    sex: Float
}

"""
order by stddev() on columns of table "owner_info"
"""
input owner_info_stddev_order_by {
    id: order_by
    sex: order_by
}

"""aggregate stddev_pop on columns"""
type owner_info_stddev_pop_fields {
    id: Float
    sex: Float
}

"""
order by stddev_pop() on columns of table "owner_info"
"""
input owner_info_stddev_pop_order_by {
    id: order_by
    sex: order_by
}

"""aggregate stddev_samp on columns"""
type owner_info_stddev_samp_fields {
    id: Float
    sex: Float
}

"""
order by stddev_samp() on columns of table "owner_info"
"""
input owner_info_stddev_samp_order_by {
    id: order_by
    sex: order_by
}

"""aggregate sum on columns"""
type owner_info_sum_fields {
    id: bigint
    sex: Int
}

"""
order by sum() on columns of table "owner_info"
"""
input owner_info_sum_order_by {
    id: order_by
    sex: order_by
}

"""
update columns of table "owner_info"
"""
enum owner_info_update_column {
    """column name"""
    address

    """column name"""
    agent

    """column name"""
    cellphone

    """column name"""
    created_at

    """column name"""
    created_by

    """column name"""
    deleted_at

    """column name"""
    deleted_by

    """column name"""
    department_id

    """column name"""
    email

    """column name"""
    expiry_date

    """column name"""
    id

    """column name"""
    id_number

    """column name"""
    is_delete

    """column name"""
    name

    """column name"""
    operator

    """column name"""
    owner_id

    """column name"""
    remarks

    """column name"""
    sex

    """column name"""
    telephone

    """column name"""
    updated_at

    """column name"""
    updated_by
}

"""aggregate var_pop on columns"""
type owner_info_var_pop_fields {
    id: Float
    sex: Float
}

"""
order by var_pop() on columns of table "owner_info"
"""
input owner_info_var_pop_order_by {
    id: order_by
    sex: order_by
}

"""aggregate var_samp on columns"""
type owner_info_var_samp_fields {
    id: Float
    sex: Float
}

"""
order by var_samp() on columns of table "owner_info"
"""
input owner_info_var_samp_order_by {
    id: order_by
    sex: order_by
}

"""aggregate variance on columns"""
type owner_info_variance_fields {
    id: Float
    sex: Float
}

"""
order by variance() on columns of table "owner_info"
"""
input owner_info_variance_order_by {
    id: order_by
    sex: order_by
}

extend type Query {
    """
    fetch data from the table: "owner_info"
  """
    owner_info(
        """distinct select on columns"""
        distinct_on: [owner_info_select_column!]

        """limit the number of rows returned"""
        limit: Int

        """skip the first n rows. Use only with order_by"""
        offset: Int

        """sort the rows by one or more columns"""
        order_by: [owner_info_order_by!]

        """filter the rows returned"""
        where: owner_info_bool_exp
    ): [owner_info!]!

    """
    fetch aggregated fields from the table: "owner_info"
  """
    owner_info_aggregate(
        """distinct select on columns"""
        distinct_on: [owner_info_select_column!]

        """limit the number of rows returned"""
        limit: Int

        """skip the first n rows. Use only with order_by"""
        offset: Int

        """sort the rows by one or more columns"""
        order_by: [owner_info_order_by!]

        """filter the rows returned"""
        where: owner_info_bool_exp
    ): owner_info_aggregate!

    """fetch data from the table: "owner_info" using primary key columns"""
    owner_info_by_pk(
        """主键"""
        id: bigint!
    ): owner_info
}

extend type Mutation {
    """
    delete data from the table: "owner_info"
  """
    delete_owner_info(
        """filter the rows which have to be deleted"""
        where: owner_info_bool_exp!
    ): owner_info_mutation_response

    """
    delete single row from the table: "owner_info"
  """
    delete_owner_info_by_pk(
        """主键"""
        id: bigint!
    ): owner_info

    """
    insert data into the table: "owner_info"
  """
    insert_owner_info(
        """the rows to be inserted"""
        objects: [owner_info_insert_input!]!

        """on conflict condition"""
        on_conflict: owner_info_on_conflict
    ): owner_info_mutation_response

    """
    insert a single row into the table: "owner_info"
  """
    insert_owner_info_one(
        """the row to be inserted"""
        object: owner_info_insert_input!

        """on conflict condition"""
        on_conflict: owner_info_on_conflict
    ): owner_info

    """
    update data of the table: "owner_info"
  """
    update_owner_info(
        """increments the integer columns with given value of the filtered values"""
        _inc: owner_info_inc_input

        """sets the columns of the filtered rows to the given values"""
        _set: owner_info_set_input

        """filter the rows which have to be updated"""
        where: owner_info_bool_exp!
    ): owner_info_mutation_response

    """
    update single row of the table: "owner_info"
  """
    update_owner_info_by_pk(
        """increments the integer columns with given value of the filtered values"""
        _inc: owner_info_inc_input

        """sets the columns of the filtered rows to the given values"""
        _set: owner_info_set_input
        pk_columns: owner_info_pk_columns_input!
    ): owner_info
}


extend type Subscription {
    """
    fetch data from the table: "owner_info"
  """
    owner_info(
        """distinct select on columns"""
        distinct_on: [owner_info_select_column!]

        """limit the number of rows returned"""
        limit: Int

        """skip the first n rows. Use only with order_by"""
        offset: Int

        """sort the rows by one or more columns"""
        order_by: [owner_info_order_by!]

        """filter the rows returned"""
        where: owner_info_bool_exp
    ): [owner_info!]!

    """
    fetch aggregated fields from the table: "owner_info"
  """
    owner_info_aggregate(
        """distinct select on columns"""
        distinct_on: [owner_info_select_column!]

        """limit the number of rows returned"""
        limit: Int

        """skip the first n rows. Use only with order_by"""
        offset: Int

        """sort the rows by one or more columns"""
        order_by: [owner_info_order_by!]

        """filter the rows returned"""
        where: owner_info_bool_exp
    ): owner_info_aggregate!

    """fetch data from the table: "owner_info" using primary key columns"""
    owner_info_by_pk(
        """主键"""
        id: bigint!
    ): owner_info
}
