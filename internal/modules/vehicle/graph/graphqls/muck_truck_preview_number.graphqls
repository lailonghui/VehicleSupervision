
"""
渣土车车辆预编号表


columns and relationships of "muck_truck_preview_number"

"""
type muck_truck_preview_number {
    """确认状态"""
    confirm_status: Int

    """确认时间"""
    confirm_time: timestamptz

    """确认人"""
    confirmor: String

    """联系人"""
    contact_person: String

    """联系电话"""
    contact_phone: String

    """创建人"""
    created_by: String!

    """删除时间"""
    deleted_at: timestamptz

    """删除人"""
    deleted_by: String

    """前车牌"""
    front_license_plate: String

    """主键"""
    id: bigint!

    """初次登记日期"""
    initial_registration_date: timestamptz

    """是否删除"""
    is_delete: Boolean

    """是否登记销售订单"""
    is_register_sale_order: Boolean

    """是否自动审核"""
    is_review_automatically: Boolean

    """制作中时间"""
    marking_time: timestamptz

    """原编号"""
    original_number: String

    """制作状态"""
    production_status: Int

    """制作时间"""
    production_time: timestamptz

    """制作次数"""
    production_times: Int

    """后车牌"""
    rear_license_plate: String

    """登记时间"""
    registration_time: timestamptz

    """备注"""
    remarks: String

    """侧车牌"""
    side_license_plate: String

    """预编号"""
    svn_number: String

    """违法未处理数"""
    unlawful_violation_number: Int

    """修改时间"""
    updated_at: timestamptz!

    """修改人"""
    updated_by: String

    """vehicle_info 车辆信息表 的vehicle_id"""
    vehicle_id: String!

    """工号牌颜色（green.绿色 yellow.黄色）"""
    work_number_plate_color: String
}

"""
aggregated selection of "muck_truck_preview_number"
"""
type muck_truck_preview_number_aggregate {
    aggregate: muck_truck_preview_number_aggregate_fields
    nodes: [muck_truck_preview_number!]!
}

"""
aggregate fields of "muck_truck_preview_number"
"""
type muck_truck_preview_number_aggregate_fields {
    avg: muck_truck_preview_number_avg_fields
    count(columns: [muck_truck_preview_number_select_column!], distinct: Boolean): Int
    max: muck_truck_preview_number_max_fields
    min: muck_truck_preview_number_min_fields
    stddev: muck_truck_preview_number_stddev_fields
    stddev_pop: muck_truck_preview_number_stddev_pop_fields
    stddev_samp: muck_truck_preview_number_stddev_samp_fields
    sum: muck_truck_preview_number_sum_fields
    var_pop: muck_truck_preview_number_var_pop_fields
    var_samp: muck_truck_preview_number_var_samp_fields
    variance: muck_truck_preview_number_variance_fields
}

"""
order by aggregate values of table "muck_truck_preview_number"
"""
input muck_truck_preview_number_aggregate_order_by {
    avg: muck_truck_preview_number_avg_order_by
    count: order_by
    max: muck_truck_preview_number_max_order_by
    min: muck_truck_preview_number_min_order_by
    stddev: muck_truck_preview_number_stddev_order_by
    stddev_pop: muck_truck_preview_number_stddev_pop_order_by
    stddev_samp: muck_truck_preview_number_stddev_samp_order_by
    sum: muck_truck_preview_number_sum_order_by
    var_pop: muck_truck_preview_number_var_pop_order_by
    var_samp: muck_truck_preview_number_var_samp_order_by
    variance: muck_truck_preview_number_variance_order_by
}

"""
input type for inserting array relation for remote table "muck_truck_preview_number"
"""
input muck_truck_preview_number_arr_rel_insert_input {
    data: [muck_truck_preview_number_insert_input!]!
    on_conflict: muck_truck_preview_number_on_conflict
}

"""aggregate avg on columns"""
type muck_truck_preview_number_avg_fields {
    confirm_status: Float
    id: Float
    production_status: Float
    production_times: Float
    unlawful_violation_number: Float
}

"""
order by avg() on columns of table "muck_truck_preview_number"
"""
input muck_truck_preview_number_avg_order_by {
    confirm_status: order_by
    id: order_by
    production_status: order_by
    production_times: order_by
    unlawful_violation_number: order_by
}

"""
Boolean expression to filter rows from the table "muck_truck_preview_number". All fields are combined with a logical 'AND'.
"""
input muck_truck_preview_number_bool_exp {
    _and: [muck_truck_preview_number_bool_exp]
    _not: muck_truck_preview_number_bool_exp
    _or: [muck_truck_preview_number_bool_exp]
    confirm_status: Int_comparison_exp
    confirm_time: timestamptz_comparison_exp
    confirmor: String_comparison_exp
    contact_person: String_comparison_exp
    contact_phone: String_comparison_exp
    created_by: String_comparison_exp
    deleted_at: timestamptz_comparison_exp
    deleted_by: String_comparison_exp
    front_license_plate: String_comparison_exp
    id: bigint_comparison_exp
    initial_registration_date: timestamptz_comparison_exp
    is_delete: Boolean_comparison_exp
    is_register_sale_order: Boolean_comparison_exp
    is_review_automatically: Boolean_comparison_exp
    marking_time: timestamptz_comparison_exp
    original_number: String_comparison_exp
    production_status: Int_comparison_exp
    production_time: timestamptz_comparison_exp
    production_times: Int_comparison_exp
    rear_license_plate: String_comparison_exp
    registration_time: timestamptz_comparison_exp
    remarks: String_comparison_exp
    side_license_plate: String_comparison_exp
    svn_number: String_comparison_exp
    unlawful_violation_number: Int_comparison_exp
    updated_at: timestamptz_comparison_exp
    updated_by: String_comparison_exp
    vehicle_id: String_comparison_exp
    work_number_plate_color: String_comparison_exp
}

"""
unique or primary key constraints on table "muck_truck_preview_number"
"""
enum muck_truck_preview_number_constraint {
    """unique or primary key constraint"""
    muck_truck_preview_number_pkey
}

"""
input type for incrementing integer column in table "muck_truck_preview_number"
"""
input muck_truck_preview_number_inc_input {
    confirm_status: Int
    id: bigint
    production_status: Int
    production_times: Int
    unlawful_violation_number: Int
}

"""
input type for inserting data into table "muck_truck_preview_number"
"""
input muck_truck_preview_number_insert_input {
    confirm_status: Int
    confirm_time: timestamptz
    confirmor: String
    contact_person: String
    contact_phone: String
    created_by: String
    deleted_at: timestamptz
    deleted_by: String
    front_license_plate: String
    id: bigint
    initial_registration_date: timestamptz
    is_delete: Boolean
    is_register_sale_order: Boolean
    is_review_automatically: Boolean
    marking_time: timestamptz
    original_number: String
    production_status: Int
    production_time: timestamptz
    production_times: Int
    rear_license_plate: String
    registration_time: timestamptz
    remarks: String
    side_license_plate: String
    svn_number: String
    unlawful_violation_number: Int
    updated_at: timestamptz
    updated_by: String
    vehicle_id: String
    work_number_plate_color: String
}

"""aggregate max on columns"""
type muck_truck_preview_number_max_fields {
    confirm_status: Int
    confirm_time: timestamptz
    confirmor: String
    contact_person: String
    contact_phone: String
    created_by: String
    deleted_at: timestamptz
    deleted_by: String
    front_license_plate: String
    id: bigint
    initial_registration_date: timestamptz
    marking_time: timestamptz
    original_number: String
    production_status: Int
    production_time: timestamptz
    production_times: Int
    rear_license_plate: String
    registration_time: timestamptz
    remarks: String
    side_license_plate: String
    svn_number: String
    unlawful_violation_number: Int
    updated_at: timestamptz
    updated_by: String
    vehicle_id: String
    work_number_plate_color: String
}

"""
order by max() on columns of table "muck_truck_preview_number"
"""
input muck_truck_preview_number_max_order_by {
    confirm_status: order_by
    confirm_time: order_by
    confirmor: order_by
    contact_person: order_by
    contact_phone: order_by
    created_by: order_by
    deleted_at: order_by
    deleted_by: order_by
    front_license_plate: order_by
    id: order_by
    initial_registration_date: order_by
    marking_time: order_by
    original_number: order_by
    production_status: order_by
    production_time: order_by
    production_times: order_by
    rear_license_plate: order_by
    registration_time: order_by
    remarks: order_by
    side_license_plate: order_by
    svn_number: order_by
    unlawful_violation_number: order_by
    updated_at: order_by
    updated_by: order_by
    vehicle_id: order_by
    work_number_plate_color: order_by
}

"""aggregate min on columns"""
type muck_truck_preview_number_min_fields {
    confirm_status: Int
    confirm_time: timestamptz
    confirmor: String
    contact_person: String
    contact_phone: String
    created_by: String
    deleted_at: timestamptz
    deleted_by: String
    front_license_plate: String
    id: bigint
    initial_registration_date: timestamptz
    marking_time: timestamptz
    original_number: String
    production_status: Int
    production_time: timestamptz
    production_times: Int
    rear_license_plate: String
    registration_time: timestamptz
    remarks: String
    side_license_plate: String
    svn_number: String
    unlawful_violation_number: Int
    updated_at: timestamptz
    updated_by: String
    vehicle_id: String
    work_number_plate_color: String
}

"""
order by min() on columns of table "muck_truck_preview_number"
"""
input muck_truck_preview_number_min_order_by {
    confirm_status: order_by
    confirm_time: order_by
    confirmor: order_by
    contact_person: order_by
    contact_phone: order_by
    created_by: order_by
    deleted_at: order_by
    deleted_by: order_by
    front_license_plate: order_by
    id: order_by
    initial_registration_date: order_by
    marking_time: order_by
    original_number: order_by
    production_status: order_by
    production_time: order_by
    production_times: order_by
    rear_license_plate: order_by
    registration_time: order_by
    remarks: order_by
    side_license_plate: order_by
    svn_number: order_by
    unlawful_violation_number: order_by
    updated_at: order_by
    updated_by: order_by
    vehicle_id: order_by
    work_number_plate_color: order_by
}

"""
response of any mutation on the table "muck_truck_preview_number"
"""
type muck_truck_preview_number_mutation_response {
    """number of affected rows by the mutation"""
    affected_rows: Int!

    """data of the affected rows by the mutation"""
    returning: [muck_truck_preview_number!]!
}

"""
input type for inserting object relation for remote table "muck_truck_preview_number"
"""
input muck_truck_preview_number_obj_rel_insert_input {
    data: muck_truck_preview_number_insert_input!
    on_conflict: muck_truck_preview_number_on_conflict
}

"""
on conflict condition type for table "muck_truck_preview_number"
"""
input muck_truck_preview_number_on_conflict {
    constraint: muck_truck_preview_number_constraint!
    update_columns: [muck_truck_preview_number_update_column!]!
    where: muck_truck_preview_number_bool_exp
}

"""
ordering options when selecting data from "muck_truck_preview_number"
"""
input muck_truck_preview_number_order_by {
    confirm_status: order_by
    confirm_time: order_by
    confirmor: order_by
    contact_person: order_by
    contact_phone: order_by
    created_by: order_by
    deleted_at: order_by
    deleted_by: order_by
    front_license_plate: order_by
    id: order_by
    initial_registration_date: order_by
    is_delete: order_by
    is_register_sale_order: order_by
    is_review_automatically: order_by
    marking_time: order_by
    original_number: order_by
    production_status: order_by
    production_time: order_by
    production_times: order_by
    rear_license_plate: order_by
    registration_time: order_by
    remarks: order_by
    side_license_plate: order_by
    svn_number: order_by
    unlawful_violation_number: order_by
    updated_at: order_by
    updated_by: order_by
    vehicle_id: order_by
    work_number_plate_color: order_by
}

"""
primary key columns input for table: "muck_truck_preview_number"
"""
input muck_truck_preview_number_pk_columns_input {
    """主键"""
    id: bigint!
}

"""
select columns of table "muck_truck_preview_number"
"""
enum muck_truck_preview_number_select_column {
    """column name"""
    confirm_status

    """column name"""
    confirm_time

    """column name"""
    confirmor

    """column name"""
    contact_person

    """column name"""
    contact_phone

    """column name"""
    created_by

    """column name"""
    deleted_at

    """column name"""
    deleted_by

    """column name"""
    front_license_plate

    """column name"""
    id

    """column name"""
    initial_registration_date

    """column name"""
    is_delete

    """column name"""
    is_register_sale_order

    """column name"""
    is_review_automatically

    """column name"""
    marking_time

    """column name"""
    original_number

    """column name"""
    production_status

    """column name"""
    production_time

    """column name"""
    production_times

    """column name"""
    rear_license_plate

    """column name"""
    registration_time

    """column name"""
    remarks

    """column name"""
    side_license_plate

    """column name"""
    svn_number

    """column name"""
    unlawful_violation_number

    """column name"""
    updated_at

    """column name"""
    updated_by

    """column name"""
    vehicle_id

    """column name"""
    work_number_plate_color
}

"""
input type for updating data in table "muck_truck_preview_number"
"""
input muck_truck_preview_number_set_input {
    confirm_status: Int
    confirm_time: timestamptz
    confirmor: String
    contact_person: String
    contact_phone: String
    created_by: String
    deleted_at: timestamptz
    deleted_by: String
    front_license_plate: String
    id: bigint
    initial_registration_date: timestamptz
    is_delete: Boolean
    is_register_sale_order: Boolean
    is_review_automatically: Boolean
    marking_time: timestamptz
    original_number: String
    production_status: Int
    production_time: timestamptz
    production_times: Int
    rear_license_plate: String
    registration_time: timestamptz
    remarks: String
    side_license_plate: String
    svn_number: String
    unlawful_violation_number: Int
    updated_at: timestamptz
    updated_by: String
    vehicle_id: String
    work_number_plate_color: String
}

"""aggregate stddev on columns"""
type muck_truck_preview_number_stddev_fields {
    confirm_status: Float
    id: Float
    production_status: Float
    production_times: Float
    unlawful_violation_number: Float
}

"""
order by stddev() on columns of table "muck_truck_preview_number"
"""
input muck_truck_preview_number_stddev_order_by {
    confirm_status: order_by
    id: order_by
    production_status: order_by
    production_times: order_by
    unlawful_violation_number: order_by
}

"""aggregate stddev_pop on columns"""
type muck_truck_preview_number_stddev_pop_fields {
    confirm_status: Float
    id: Float
    production_status: Float
    production_times: Float
    unlawful_violation_number: Float
}

"""
order by stddev_pop() on columns of table "muck_truck_preview_number"
"""
input muck_truck_preview_number_stddev_pop_order_by {
    confirm_status: order_by
    id: order_by
    production_status: order_by
    production_times: order_by
    unlawful_violation_number: order_by
}

"""aggregate stddev_samp on columns"""
type muck_truck_preview_number_stddev_samp_fields {
    confirm_status: Float
    id: Float
    production_status: Float
    production_times: Float
    unlawful_violation_number: Float
}

"""
order by stddev_samp() on columns of table "muck_truck_preview_number"
"""
input muck_truck_preview_number_stddev_samp_order_by {
    confirm_status: order_by
    id: order_by
    production_status: order_by
    production_times: order_by
    unlawful_violation_number: order_by
}

"""aggregate sum on columns"""
type muck_truck_preview_number_sum_fields {
    confirm_status: Int
    id: bigint
    production_status: Int
    production_times: Int
    unlawful_violation_number: Int
}

"""
order by sum() on columns of table "muck_truck_preview_number"
"""
input muck_truck_preview_number_sum_order_by {
    confirm_status: order_by
    id: order_by
    production_status: order_by
    production_times: order_by
    unlawful_violation_number: order_by
}

"""
update columns of table "muck_truck_preview_number"
"""
enum muck_truck_preview_number_update_column {
    """column name"""
    confirm_status

    """column name"""
    confirm_time

    """column name"""
    confirmor

    """column name"""
    contact_person

    """column name"""
    contact_phone

    """column name"""
    created_by

    """column name"""
    deleted_at

    """column name"""
    deleted_by

    """column name"""
    front_license_plate

    """column name"""
    id

    """column name"""
    initial_registration_date

    """column name"""
    is_delete

    """column name"""
    is_register_sale_order

    """column name"""
    is_review_automatically

    """column name"""
    marking_time

    """column name"""
    original_number

    """column name"""
    production_status

    """column name"""
    production_time

    """column name"""
    production_times

    """column name"""
    rear_license_plate

    """column name"""
    registration_time

    """column name"""
    remarks

    """column name"""
    side_license_plate

    """column name"""
    svn_number

    """column name"""
    unlawful_violation_number

    """column name"""
    updated_at

    """column name"""
    updated_by

    """column name"""
    vehicle_id

    """column name"""
    work_number_plate_color
}

"""aggregate var_pop on columns"""
type muck_truck_preview_number_var_pop_fields {
    confirm_status: Float
    id: Float
    production_status: Float
    production_times: Float
    unlawful_violation_number: Float
}

"""
order by var_pop() on columns of table "muck_truck_preview_number"
"""
input muck_truck_preview_number_var_pop_order_by {
    confirm_status: order_by
    id: order_by
    production_status: order_by
    production_times: order_by
    unlawful_violation_number: order_by
}

"""aggregate var_samp on columns"""
type muck_truck_preview_number_var_samp_fields {
    confirm_status: Float
    id: Float
    production_status: Float
    production_times: Float
    unlawful_violation_number: Float
}

"""
order by var_samp() on columns of table "muck_truck_preview_number"
"""
input muck_truck_preview_number_var_samp_order_by {
    confirm_status: order_by
    id: order_by
    production_status: order_by
    production_times: order_by
    unlawful_violation_number: order_by
}

"""aggregate variance on columns"""
type muck_truck_preview_number_variance_fields {
    confirm_status: Float
    id: Float
    production_status: Float
    production_times: Float
    unlawful_violation_number: Float
}

"""
order by variance() on columns of table "muck_truck_preview_number"
"""
input muck_truck_preview_number_variance_order_by {
    confirm_status: order_by
    id: order_by
    production_status: order_by
    production_times: order_by
    unlawful_violation_number: order_by
}

extend type Mutation {
    """
    delete data from the table: "muck_truck_preview_number"
  """
    delete_muck_truck_preview_number(
        """filter the rows which have to be deleted"""
        where: muck_truck_preview_number_bool_exp!
    ): muck_truck_preview_number_mutation_response

    """
    delete single row from the table: "muck_truck_preview_number"
  """
    delete_muck_truck_preview_number_by_pk(
        """主键"""
        id: bigint!
    ): muck_truck_preview_number

    """
    insert data into the table: "muck_truck_preview_number"
  """
    insert_muck_truck_preview_number(
        """the rows to be inserted"""
        objects: [muck_truck_preview_number_insert_input!]!

        """on conflict condition"""
        on_conflict: muck_truck_preview_number_on_conflict
    ): muck_truck_preview_number_mutation_response

    """
    insert a single row into the table: "muck_truck_preview_number"
  """
    insert_muck_truck_preview_number_one(
        """the row to be inserted"""
        object: muck_truck_preview_number_insert_input!

        """on conflict condition"""
        on_conflict: muck_truck_preview_number_on_conflict
    ): muck_truck_preview_number

    """
    update data of the table: "muck_truck_preview_number"
  """
    update_muck_truck_preview_number(
        """increments the integer columns with given value of the filtered values"""
        _inc: muck_truck_preview_number_inc_input

        """sets the columns of the filtered rows to the given values"""
        _set: muck_truck_preview_number_set_input

        """filter the rows which have to be updated"""
        where: muck_truck_preview_number_bool_exp!
    ): muck_truck_preview_number_mutation_response

    """
    update single row of the table: "muck_truck_preview_number"
  """
    update_muck_truck_preview_number_by_pk(
        """increments the integer columns with given value of the filtered values"""
        _inc: muck_truck_preview_number_inc_input

        """sets the columns of the filtered rows to the given values"""
        _set: muck_truck_preview_number_set_input
        pk_columns: muck_truck_preview_number_pk_columns_input!
    ): muck_truck_preview_number
}


extend type Query {
    """
    fetch data from the table: "muck_truck_preview_number"
  """
    muck_truck_preview_number(
        """distinct select on columns"""
        distinct_on: [muck_truck_preview_number_select_column!]

        """limit the number of rows returned"""
        limit: Int

        """skip the first n rows. Use only with order_by"""
        offset: Int

        """sort the rows by one or more columns"""
        order_by: [muck_truck_preview_number_order_by!]

        """filter the rows returned"""
        where: muck_truck_preview_number_bool_exp
    ): [muck_truck_preview_number!]!

    """
    fetch aggregated fields from the table: "muck_truck_preview_number"
  """
    muck_truck_preview_number_aggregate(
        """distinct select on columns"""
        distinct_on: [muck_truck_preview_number_select_column!]

        """limit the number of rows returned"""
        limit: Int

        """skip the first n rows. Use only with order_by"""
        offset: Int

        """sort the rows by one or more columns"""
        order_by: [muck_truck_preview_number_order_by!]

        """filter the rows returned"""
        where: muck_truck_preview_number_bool_exp
    ): muck_truck_preview_number_aggregate!

    """
    fetch data from the table: "muck_truck_preview_number" using primary key columns
    """
    muck_truck_preview_number_by_pk(
        """主键"""
        id: bigint!
    ): muck_truck_preview_number
}


extend type Subscription {
    """
    fetch data from the table: "muck_truck_preview_number"
  """
    muck_truck_preview_number(
        """distinct select on columns"""
        distinct_on: [muck_truck_preview_number_select_column!]

        """limit the number of rows returned"""
        limit: Int

        """skip the first n rows. Use only with order_by"""
        offset: Int

        """sort the rows by one or more columns"""
        order_by: [muck_truck_preview_number_order_by!]

        """filter the rows returned"""
        where: muck_truck_preview_number_bool_exp
    ): [muck_truck_preview_number!]!

    """
    fetch aggregated fields from the table: "muck_truck_preview_number"
  """
    muck_truck_preview_number_aggregate(
        """distinct select on columns"""
        distinct_on: [muck_truck_preview_number_select_column!]

        """limit the number of rows returned"""
        limit: Int

        """skip the first n rows. Use only with order_by"""
        offset: Int

        """sort the rows by one or more columns"""
        order_by: [muck_truck_preview_number_order_by!]

        """filter the rows returned"""
        where: muck_truck_preview_number_bool_exp
    ): muck_truck_preview_number_aggregate!

    """
    fetch data from the table: "muck_truck_preview_number" using primary key columns
    """
    muck_truck_preview_number_by_pk(
        """主键"""
        id: bigint!
    ): muck_truck_preview_number
}

