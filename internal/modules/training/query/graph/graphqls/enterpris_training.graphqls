# columns and relationships of "enterprise_training"
type enterprise_training {
    create_at: timestamptz
    create_by: String
    delete_at: timestamptz
    delete_by: String
    enterprise_id: String
    enterprise_training_id: String
    id: bigint!
    is_delete: Boolean
    is_received: Boolean
    material_id: String
    update_at: timestamptz
    update_by: String
}

# aggregated selection of "enterprise_training"
type enterprise_training_aggregate {
    aggregate: enterprise_training_aggregate_fields
    nodes: [enterprise_training!]!
}

# aggregate fields of "enterprise_training"
type enterprise_training_aggregate_fields {
    avg: enterprise_training_avg_fields
    count(columns: [enterprise_training_select_column!], distinct: Boolean): Int
    max: enterprise_training_max_fields
    min: enterprise_training_min_fields
    stddev: enterprise_training_stddev_fields
    stddev_pop: enterprise_training_stddev_pop_fields
    stddev_samp: enterprise_training_stddev_samp_fields
    sum: enterprise_training_sum_fields
    var_pop: enterprise_training_var_pop_fields
    var_samp: enterprise_training_var_samp_fields
    variance: enterprise_training_variance_fields
}

# order by aggregate values of table "enterprise_training"
input enterprise_training_aggregate_order_by {
    avg: enterprise_training_avg_order_by
    count: order_by
    max: enterprise_training_max_order_by
    min: enterprise_training_min_order_by
    stddev: enterprise_training_stddev_order_by
    stddev_pop: enterprise_training_stddev_pop_order_by
    stddev_samp: enterprise_training_stddev_samp_order_by
    sum: enterprise_training_sum_order_by
    var_pop: enterprise_training_var_pop_order_by
    var_samp: enterprise_training_var_samp_order_by
    variance: enterprise_training_variance_order_by
}

# input type for inserting array relation for remote table "enterprise_training"
input enterprise_training_arr_rel_insert_input {
    data: [enterprise_training_insert_input!]!
    on_conflict: enterprise_training_on_conflict
}

# aggregate avg on columns
type enterprise_training_avg_fields {
    id: Float
}

# order by avg() on columns of table "enterprise_training"
input enterprise_training_avg_order_by {
    id: order_by
}

# Boolean expression to filter rows from the table "enterprise_training". All fields are combined with a logical 'AND'.
input enterprise_training_bool_exp {
    _and: [enterprise_training_bool_exp]
    _not: enterprise_training_bool_exp
    _or: [enterprise_training_bool_exp]
    create_at: timestamptz_comparison_exp
    create_by: String_comparison_exp
    delete_at: timestamptz_comparison_exp
    delete_by: String_comparison_exp
    enterprise_id: String_comparison_exp
    enterprise_training_id: String_comparison_exp
    id: bigint_comparison_exp
    is_delete: Boolean_comparison_exp
    is_received: Boolean_comparison_exp
    material_id: String_comparison_exp
    update_at: timestamptz_comparison_exp
    update_by: String_comparison_exp
}

# unique or primary key constraints on table "enterprise_training"
enum enterprise_training_constraint {
    # unique or primary key constraint
    enterprise_training_pkey
}

# input type for incrementing integer column in table "enterprise_training"
input enterprise_training_inc_input {
    id: bigint
}

# input type for inserting data into table "enterprise_training"
input enterprise_training_insert_input {
    create_at: timestamptz
    create_by: String
    delete_at: timestamptz
    delete_by: String
    enterprise_id: String
    enterprise_training_id: String
    id: bigint
    is_delete: Boolean
    is_received: Boolean
    material_id: String
    update_at: timestamptz
    update_by: String
}

# aggregate max on columns
type enterprise_training_max_fields {
    create_at: timestamptz
    create_by: String
    delete_at: timestamptz
    delete_by: String
    enterprise_id: String
    enterprise_training_id: String
    id: bigint
    material_id: String
    update_at: timestamptz
    update_by: String
}

# order by max() on columns of table "enterprise_training"
input enterprise_training_max_order_by {
    create_at: order_by
    create_by: order_by
    delete_at: order_by
    delete_by: order_by
    enterprise_id: order_by
    enterprise_training_id: order_by
    id: order_by
    material_id: order_by
    update_at: order_by
    update_by: order_by
}

# aggregate min on columns
type enterprise_training_min_fields {
    create_at: timestamptz
    create_by: String
    delete_at: timestamptz
    delete_by: String
    enterprise_id: String
    enterprise_training_id: String
    id: bigint
    material_id: String
    update_at: timestamptz
    update_by: String
}

# order by min() on columns of table "enterprise_training"
input enterprise_training_min_order_by {
    create_at: order_by
    create_by: order_by
    delete_at: order_by
    delete_by: order_by
    enterprise_id: order_by
    enterprise_training_id: order_by
    id: order_by
    material_id: order_by
    update_at: order_by
    update_by: order_by
}

# response of any mutation on the table "enterprise_training"
type enterprise_training_mutation_response {
    # number of affected rows by the mutation
    affected_rows: Int!
    # data of the affected rows by the mutation
    returning: [enterprise_training!]!
}

# input type for inserting object relation for remote table "enterprise_training"
input enterprise_training_obj_rel_insert_input {
    data: enterprise_training_insert_input!
    on_conflict: enterprise_training_on_conflict
}

# on conflict condition type for table "enterprise_training"
input enterprise_training_on_conflict {
    constraint: enterprise_training_constraint!
    update_columns: [enterprise_training_update_column!]!
    where: enterprise_training_bool_exp
}

# ordering options when selecting data from "enterprise_training"
input enterprise_training_order_by {
    create_at: order_by
    create_by: order_by
    delete_at: order_by
    delete_by: order_by
    enterprise_id: order_by
    enterprise_training_id: order_by
    id: order_by
    is_delete: order_by
    is_received: order_by
    material_id: order_by
    update_at: order_by
    update_by: order_by
}

# primary key columns input for table: "enterprise_training"
input enterprise_training_pk_columns_input {
    id: bigint!
}

# select columns of table "enterprise_training"
enum enterprise_training_select_column {
    # column name
    create_at
    # column name
    create_by
    # column name
    delete_at
    # column name
    delete_by
    # column name
    enterprise_id
    # column name
    enterprise_training_id
    # column name
    id
    # column name
    is_delete
    # column name
    is_received
    # column name
    material_id
    # column name
    update_at
    # column name
    update_by
}

# input type for updating data in table "enterprise_training"
input enterprise_training_set_input {
    create_at: timestamptz
    create_by: String
    delete_at: timestamptz
    delete_by: String
    enterprise_id: String
    enterprise_training_id: String
    id: bigint
    is_delete: Boolean
    is_received: Boolean
    material_id: String
    update_at: timestamptz
    update_by: String
}

# aggregate stddev on columns
type enterprise_training_stddev_fields {
    id: Float
}

# order by stddev() on columns of table "enterprise_training"
input enterprise_training_stddev_order_by {
    id: order_by
}

# aggregate stddev_pop on columns
type enterprise_training_stddev_pop_fields {
    id: Float
}

# order by stddev_pop() on columns of table "enterprise_training"
input enterprise_training_stddev_pop_order_by {
    id: order_by
}

# aggregate stddev_samp on columns
type enterprise_training_stddev_samp_fields {
    id: Float
}

# order by stddev_samp() on columns of table "enterprise_training"
input enterprise_training_stddev_samp_order_by {
    id: order_by
}

# aggregate sum on columns
type enterprise_training_sum_fields {
    id: bigint
}

# order by sum() on columns of table "enterprise_training"
input enterprise_training_sum_order_by {
    id: order_by
}

# update columns of table "enterprise_training"
enum enterprise_training_update_column {
    # column name
    create_at
    # column name
    create_by
    # column name
    delete_at
    # column name
    delete_by
    # column name
    enterprise_id
    # column name
    enterprise_training_id
    # column name
    id
    # column name
    is_delete
    # column name
    is_received
    # column name
    material_id
    # column name
    update_at
    # column name
    update_by
}

# aggregate var_pop on columns
type enterprise_training_var_pop_fields {
    id: Float
}

# order by var_pop() on columns of table "enterprise_training"
input enterprise_training_var_pop_order_by {
    id: order_by
}

# aggregate var_samp on columns
type enterprise_training_var_samp_fields {
    id: Float
}

# order by var_samp() on columns of table "enterprise_training"
input enterprise_training_var_samp_order_by {
    id: order_by
}

# aggregate variance on columns
type enterprise_training_variance_fields {
    id: Float
}

# order by variance() on columns of table "enterprise_training"
input enterprise_training_variance_order_by {
    id: order_by
}